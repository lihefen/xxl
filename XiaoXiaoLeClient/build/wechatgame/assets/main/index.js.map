{"version":3,"sources":["assets/newscripts/Advert.js","assets/newscripts/Main/AnimalManager.js","assets/newscripts/Main/Animal.js","assets/newscripts/Mains/AudioMgr.js","assets/newscripts/Loading/Begin.js","assets/newscripts/ComeInfo.js","assets/newscripts/Common.js","assets/newscripts/Main/CubeManager.js","assets/newscripts/Mains/EndMove.js","assets/newscripts/Main/End.js","assets/newscripts/EventMng.ts","assets/newscripts/GGfx.js","assets/newscripts/GameData.js","assets/newscripts/Level/HomeSettign.js","assets/newscripts/network/Http.ts","assets/newscripts/Main/LabelMgr.js","assets/newscripts/Main/Label.js","assets/newscripts/Level/Level.js","assets/newscripts/Loding.ts","assets/newscripts/Level/LvBnt.js","assets/newscripts/Level/LvMgr.js","assets/newscripts/Level/LvTarget.js","assets/newscripts/Main/Manager.js","assets/newscripts/network/Network.ts","assets/newscripts/Mains/QQ.js","assets/newscripts/Main/Scuess.js","assets/newscripts/Level/Shop.js","assets/newscripts/Main/Touch.js","assets/newscripts/Level/Tree.js","assets/newscripts/UIHelp.ts","assets/newscripts/Main/UI.js","assets/newscripts/Mains/clearmusic.js","assets/newscripts/Main/cube.js","assets/newscripts/Main/effectMgr.js","assets/newscripts/Main/goldeff.js","assets/newscripts/Mains/iceMgr.js","assets/newscripts/Mains/ice.js","assets/newscripts/item_rank.ts","assets/newscripts/lvdata.js","assets/newscripts/Mains/propManager.js","assets/newscripts/rankLayer.ts","assets/newscripts/Mains/select.js","assets/newscripts/Level/sprManager.js","assets/newscripts/Main/targetManager.js","assets/newscripts/tipsitem.ts","assets/newscripts/Level/tip.js","assets/migration/use_v2.1-2.2.1_cc.Toggle_event.js","assets/newscripts/Main/utils.js"],"names":["window","Advert","VideoUrl","Video","VideoNum","handlers","InitVideoAdvert","cc","sys","platform","WECHAT_GAME","self","this","wx","createRewardedVideoAd","adUnitId","onError","err","console","log","onClose","res","isEnded","undefined","VideoPlay","videonum","fn","addHandlers","show","event","BananerUrl","bannerAd","InitBananerAdvert","getSystemInfoSync","success","Mwidth","windowWidth","Mheight","windowHeight","targetBannerAdWidth","Math","min","createBannerAd","style","left","top","width","parseInt","onResize","size","height","onLoad","errMsg","errCode","shares","ids","urls","WxShare","CC_WECHATGAME","idx1","floor","random","str","idx","id","url","shareAppMessage","title","imageUrlId","imageUrl","fail","Class","extends","Component","properties","animPrefab","Prefab","animalPanel","Node","animalArray","selectLogo","_firstNode","_sectedNode","prop_one","prop_two","mask","maskNode","is_Finised","clearnum","NoAnimNode","ZL","animMgr","animalPool","NodePool","info","lvdata","active","onOpenMask","onCloseMask","start","IsNoMatch","InitAnimal","Array","row","Anim","length","rowArray","column","push","a","instantiate","addChild","getComponent","initAnimal","SetEff","NewFilled","i","animRow","j","len","anim","can_move","searchPos","creatNew","x","y","_this","isFilled","creat","cols","AnimMove","targetMgr","IsScuessed","FillOver","requestAnimationFrame","AllMatch","clearOverFiled","CM","InitView","iceMgr","qqmoveNum","UPAllMove","setTimeout","IsScuess","bind","comeInfo","qqmoveTime","isMatched","list","MatchOne","RemoveAnimList","rowNum","columnNum","AddPos","dir","next_x","search","FilledMove","selectFirstAnimal","pos","animal","playAnim","setPosition","node","getPosition","stopAnim","isFriend","changePos","friend","f_x","f_y","s_x","s_y","abs","ismatch","musicMgr","MyplayMusic","MatchClear","animalMoveTime","delay_clear","clearType_first","clearType","clearType_second","UIMgr","MinusStep","clear","animalClearTime","animType","fn1","scaleTo","easing","easeElasticOut","fn2","fadeOut","runAction","sequence","_fn","_fn2","spawn","atype","clearTypeall","_fn3","_fn4","_fn5","_fn6","creatRowEff","creatColnumEff","CreatTEff","_i","_j","_fn7","_fn8","fn3","fn4","node1","node2","list_one","list_two","Rlist","Clist","MList","rownum","columnnum","animalType","noOpen","none","_i2","_j2","next_y","matchtype","_i3","_i4","cType","specialRemove","type","deleteMuBiao","CreatFiveEff","r_column","r_row","_i5","_i6","_i7","effarry","eff","RowClear","ColumnClear","RangeClear","totalList","TypeClear","animaltype","proChangePos","scale","o_x","o_y","t_x","t_y","PropMgr","propFinished","replaceAll","posArr","AnimArr2","_i8","lastIndex","index","temp","_i9","isDie","type1","IsFirstLineCast","type2","IsSecondLineCast","type3","IsThirdLineCast","type4","IsSameRowCol","lx","ly","tx","ty","isLeftBottomSame","isLeftTopSame","isRightBottomSame","isRightTopSame","add1","add2","add3","addc1","addc2","addc3","animalMgr","is_clear","update","sacle","Sprite","spriteFrame","sprMgr","spr","utils","rowColumnPosition_Anim","p","action","stopAllActions","moveTo","AddScore","add_score","clearObstacle","FindUP","effMgr","CreatRowEff","CreatBoomEff","ClearSelf","UpArray","Mchilds","children","destroy","iceArray","FindAround","targetnum","isTarget","CreatClearEff","LabelMgr","creatLabel","put","clearTarget","targetNum","_anim","_anim2","_anim3","name","PlayMusicOnly","animtargetnum","lvtarget","target","bol","dirEff","TEff","CratNiao","Animspr","Animation","play","stop","UIHelp","require","music","AudioClip","default","tipLabel","Label","pro_loading","ProgressBar","Logo","init","audioEngine","LogoAnim","sp","Skeleton","clearTracks","addAnimation","setEndListener","animation","LoadingChild","data","roomID","token","gamedata","rid","director","loadScene","addTips","error","getQueryString","login","preas","network","httpSend","loginCall","msg","code","Lv_star","Number","current_level","level_stars","gold","coin","energy","httpConnect_post_async","getMyPropListCallBack","message","gid","prop","num","preLoading","is_Loading","onProcess1","completecount","totalcount","progress","string","preloadScene","is_share","timer","totalenergy","prop_price","totallv","now_lv","yellow","purple","blue","pink","white","red","module","exports","wechatShare","wxDownloader","REMOTE_SERVER_ROOT","raw","wechatGroupShare","Promise","resolve","reject","flag","canvas","toTempFilePathSync","destWidth","destHeight","shareTickets","complete","isHightVersion","cubePrefab","cubePanel","cubeArray","Reminder","cubeMgr","InitCube","cube","initCube","BeginReminder","Move","com","lab_num","opacity","AddFive","AddFiveStep","AddTwo","consumePropCallBack","bc_gold","AddTwoStep","Replay","getChildByName","Button","interactable","level","lvl","playGameCall","game_code","Close","EventTarget","fxtip","FXListen","zIndex","onShow","oldtime","newtime","Date","now","onHide","close","shareAgain","is_prop","diamond","bg_music","GetData","g","getStorageSync","d","bc_diamond","e","bc_energy","t","bc_timer","bg","bc_music","m","s","bc_Star","setStorageSync","bc_prop","musicButton","SpriteFrame","ShowButton","Open","Level","OpenMask","easeBackOut","emit","closeMask","BjmusicDoor","stopAll","musicDoor","Again","GoLevel","ShowLoading","GoBegin","_a","_decorator","ccclass","Http","property","Http_1","get","callback","thisObj","xhr","XMLHttpRequest","onreadystatechange","onerror","call","onprogress","onloadend","ontimeout","open","send","catobj","obj","k","join","post","params","setRequestHeader","__decorate","labelPrefab","LabelPools","Init","moveBy","energyprogress","energyLabel","goldLabel","shopPrefab","shop","rank","resumeAll","openShop","onDestroy","share","onOpenRank","Loding","_super","apply","arguments","img","__extends","prototype","angle","onDisable","lv","lvLabel","lvMgr","lvSpr","Bnt","loader","loadRes","JSON","parse","text","Target","starSpr","tree","TreePrefab","nowLv","cloud","CreatLv","creatNewTree","energylogo","tip","T","icespr","find","v2","BeginGame","parent","convertToWorldSpaceAR","pos1","convertToNodeSpaceAR","setting","setPrefab","zanting","kaishi","ismusic","on","onCloseNode","InitIce","InitUPAnim","isBool","OpenSetting","ReturnLevel","off","Network","_httpurl","inConnecting","Utf8ArrayToStr","array","out","c","char2","char3","String","fromCharCode","ab2str","buf","Uint8Array","str2UTF8","bytes","charCodeAt","obj_contact","v","cmd","onBack","param","encodeURI","eventName","readyState","status","response","responseText","et","typenum","InitQQ","rowColumnPosition","QQMove","nextanim","RandAnim","arow","acolumn","jumpTo","around","circlebg","scoreLabel","Stars","dt","_score","showstars","GetStarNum","BigSmall","sqn","DoubleGold","NormalGold","NextHall","goldShow","onGetData","getMyPropListCall","HideLoading","Buy","buyCallBack","shareGolde","getScene","getName","showInfo","CloseTIP","debug","EventType","TOUCH_START","getLocation","convertToNodeSpace","selectPos","DaoJuChui","TOUCH_END","pos2","x_dis","y_dis","Rnode","Lnode","UPnode","Dnode","TOUCH_CANCEL","onMuChuiCallBack","lvBnt","lvlab","Network_1","SingletonFactory","getInstance","instances","has","set","Map","stepnum","stepLabel","socreProcess","logo","end","xing1","xing2","xing3","step","bar","one_star","EndOver","SPR","dirPrefab","TPrefab","effParent","clearPrefab","roweffPrefab","boomPrefab","niao","clearEffPool","clearRowEffPool","pos_word","pos_node","spd","cube_move","r","setCompleteListener","b","speed","manager","mag","t2","sub","icePrefab","iceParent","UpParent","qqAnim","ice","qq","qry","n","schedule","item_rank","icon","nickname","fen","onStartInfo","color","rank_num","load","headimage","sprite","slice","points","displayName","Lv1","Lv2","Lv3","Lv4","Lv5","Lv6","Lv7","Lv8","Lv9","Lv10","Lv11","Lv12","Lv13","Lv14","Lv15","Lv16","Lv17","Lv18","Lv19","Lv20","Lv21","Lv22","Lv23","Lv24","Lv25","Lv26","Lv27","Lv28","Lv29","Lv30","Lv31","Lv32","Lv33","Lv34","Lv35","Lv36","Lv37","Lv38","Lv39","Lv40","Lv41","Lv42","Lv43","Lv44","Lv45","Lv46","Lv100","pronum_label","propnode","ShopPrefab","showProp","PropBtn","currentTarget","AddStep","AnimHuan","selecteffect","AnimHuanCallBack","changeData","AddStepCallBack","e1","e2","seq","rep","repeatForever","playMusic","item_rank_1","UIHelp_1","rankLayer","item","lab_guanka","lab_jifen","content","tag1","tag2","GetCallBack","onStartUser","removeAllChildren","onClickZhiBo","onSelectTag","onClickPingTai","onClickJiFen","onClickGuanKa","removeFromParent","fadeTo","targetList","animList","scuessPrefab","EndPrefab","ScuLogo","movePrefab","MoveStartPos","targetAnim","layout","ShowTarget","BeginAnim","sc","pauseAll","scueff","liveStep","animArry","myRand","move","newarry","stars","gral","endGameCallBack","scu","arr","newarr","splice","removeComponent","Layout","xy","convetOtherNodeSpaceAR","tipsitem","onAnim","tween","to","position","v3","delay","txt","addBnt","addEnergy","Toggle","_triggerEventInScript_isChecked","loading","reg","RegExp","location","substr","match","unescape","localConvertWorldPointAR","localConvertWorldPoint","convertToWorldSpace","worldConvertLocalPointAR","worldPoint","worldConvertLocalPoint","convetOtherNodeSpace","targetNode"],"mappings":"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AA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUA2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUFhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUAnH,MAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,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EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUDhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,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A,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,IAWC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUDhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAA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,GAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAUC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUDhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IASAnH,MAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EA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AA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUAhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IASDnH,MAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAEAqjB,KAAA,GAEAE,SAAA,IAIA3W,OAAA,CAAA,CAAA,EAAA,MAEF2a,KAAA,CAEE/oB,KAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUAhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IASDnH,MAAA,CAAA,CAAA,EAAA,IAEAqjB,KAAA,GAEAE,SAAA,IAIA3W,OAAA,CAAA,CAAA,EAAA,MAEF4a,KAAA,CAEEhpB,KAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUDhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IASAnH,MAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAEAqjB,KAAA,GAEAE,SAAA,IAIA3W,OAAA,CAAA,CAAA,GAAA,MAEF6a,KAAA,CAEEjpB,KAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,IAWC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUDhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IASAnH,MAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAEAqjB,KAAA,GAEAE,SAAA,IAIA3W,OAAA,CAAA,CAAA,GAAA,MAEF8a,KAAA,CAEElpB,KAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAWC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUAhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,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AAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAWC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUAhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,E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AA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAWC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUAhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IASDnH,MAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAEAq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CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAWC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUAhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,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AAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,IAWC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUAhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IASDnH,MAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAEAqjB,KAAA,GAEAE,SAAA,IAIA3W,OAAA,CAAA,CAAA,GAAA,MAEF4b,KAAA,CAEEhqB,KAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,CAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,CAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAWC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUAhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IASDnH,MAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAEAqjB,KAAA,GAEAE,SAAA,IAIA3W,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,GAAA,KAEF6b,KAAA,CAEEjqB,KAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,IAUC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUAhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IASDnH,MAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAEAqjB,KAAA,GAEAE,SAAA,IAIA3W,OAAA,CAAA,CAAA,EAAA,MAGF8b,KAAA,CAGElqB,KAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAWC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUAhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IASDnH,MAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAEAqjB,KAAA,GAEAE,SAAA,IAIA3W,OAAA,CAAA,CAAA,GAAA,MAEF+b,KAAA,CAGEnqB,KAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAWC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUAhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA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A,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAWC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUAhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,CAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,CAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IASDnH,MAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAEAqj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AAA,GAAA,OAEFqc,KAAA,CAGEzqB,KAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAWC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUAhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,E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EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAWC2mB,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAUAhe,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IASDnH,MAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAA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","sourcesContent":["window.Advert={\r\n    VideoUrl:\"adunit-a357bf07ab218042\",\r\n    Video:null,    \r\n    VideoNum:0,  //1加体力  2 加精力\r\n    handlers:{},\r\n    //创建视频广告\r\n    InitVideoAdvert(){\r\n        if(cc.sys.platform!=cc.sys.WECHAT_GAME){\r\n            return;\r\n        }\r\n        var self=this;\r\n        if(self.Video==null){\r\n            self.Video=wx.createRewardedVideoAd({\r\n                adUnitId: self.VideoUrl\r\n            });\r\n            self.Video.onError(err => {\r\n                console.log(\"video play err：\"+err)\r\n            });\r\n            self.Video.onClose(function(res){\r\n                if (res && res.isEnded || res === undefined) {\r\n                    //正常播放结束，可以下发游戏奖励\r\n                    if(self.handlers[self.VideoNum]!=null){\r\n                        self.handlers[self.VideoNum]();\r\n                    }\r\n                    \r\n                }\r\n                else {\r\n                    // 播放中途退出，不下发游戏奖励\r\n                    console.log(\"see no all Video time \");\r\n                }\r\n            });\r\n        }\r\n    },\r\n    //播放广告\r\n    VideoPlay(videonum,fn){\r\n        if(this.Video!=null){\r\n            this.addHandlers(videonum,fn);\r\n            this.VideoNum=videonum;\r\n            this.Video.show();\r\n        }\r\n    },\r\n    addHandlers(event,fn){\r\n        this.handlers[event]=fn;\r\n    },\r\n    //bananer广告地址\r\n    BananerUrl:\"adunit-b23f524044082380\",\r\n    bannerAd:null,\r\n    //创建bananer广告\r\n    InitBananerAdvert(){\r\n        if(cc.sys.platform!=cc.sys.WECHAT_GAME){\r\n            return;\r\n        }\r\n        var Mwidth;//获取屏幕宽度\r\n        var Mheight;//获取屏幕高度\r\n        let winSize = wx.getSystemInfoSync({\r\n            success(res) {\r\n                Mwidth = res.windowWidth;\r\n                Mheight = res.windowHeight;\r\n            }\r\n        });\r\n        var targetBannerAdWidth = Math.min(Mwidth,300);//最大宽度300\r\n        // 创建 Banner 广告实例，提前初始化\r\n        this.bannerAd = wx.createBannerAd({\r\n            adUnitId: 'adunit-b23f524044082380',\r\n            style: {\r\n                left: 0,\r\n                top:650,\r\n                width:parseInt(targetBannerAdWidth),\r\n            }\r\n        })\r\n        let self=this;\r\n        // 在banner广告首次显示的时候会触发\r\n        this.bannerAd.onResize(size => {\r\n            console.log(\"onResize\", Mwidth - size.width, Mheight - size.height);\r\n            // 如果一开始设置的 banner 宽度超过了系统限制，可以在此处加以调整\r\n            self.bannerAd.style.left = (Mwidth - size.width)/2;\r\n            self.bannerAd.style.top = Mheight - size.height;\r\n            //这行是为了在QQ小游戏中能正确显示位置.如果是微信则不需要这句\r\n            // setTimeout(function () {\r\n            //     slef.bannerAd.style.left = (windowWidth - size.width)/2;\r\n            //     self.bannerAd.style.top = windowHeight - size.height;\r\n            // }, 0.5);\r\n        });\r\n        this.bannerAd.onLoad(() => {\r\n            console.log('banner广告加载成功!!!!');\r\n        })\r\n        this.bannerAd.onError((errMsg, errCode) => {\r\n            console.log('banner广告加载失败!!!!', errMsg, errCode);\r\n        })\r\n\r\n        // 在适合的场景显示 Banner 广告\r\n        //this.bannerAd.show()\r\n    },\r\n    //-------分享--------------------------------------------------------------------------\r\n    shares://分享语\r\n    [\r\n    \"给你几张图，你能猜到我的意思吗？\",\r\n    \"智商150的人才能玩的懂的游戏，你要来挑战自己吗？\",\r\n    \"百因必有果，你的报应就是找我\",\r\n    \"最解压的游戏，还不来放松一下？\",\r\n    \"好友@你并且送了你神秘礼物，点击查看！\",\r\n    ],\r\n    ids:[//分享图片id\r\n    \"IJ8K-FU4Q7GAB5PSmSSp7w\",\r\n    \"VxCAcv-kQKm7XBJAhYV_Pw\",\r\n    ],\r\n    urls:[//分享图片地址\r\n    \"https://mmocgame.qpic.cn/wechatgame/2hicsK0eD9ib3RibqpPs4hoPLnNlCdmlPiaq4bn0IJLwQaKVkYNCNFBDSGVz2zvx5HyT/0\",\r\n    \"https://mmocgame.qpic.cn/wechatgame/5VJ9SqQdMn4cPK8EV69iaxjCGHeYz9ne2gMgx4pm8BPtfGr3YXozyB4GcjXMSV5HI/0\",\r\n    ],\r\n    WxShare(){\r\n        //comeInfo.is_share=true;\r\n        if(CC_WECHATGAME){\r\n            let idx1 = Math.floor(Math.random()*5);//向下取整\r\n            let str = this.shares[idx1];\r\n            let idx = Math.floor(Math.random()*2);//向下取整\r\n            var id = this.ids[idx]; // 通过 MP 系统审核的图片编号\r\n            var url = this.urls[idx]; // 通过 MP 系统审核的图片地址\r\n            wx.shareAppMessage({\r\n                title:str,\r\n                imageUrlId:id,\r\n                imageUrl: url,\r\n                success(res) {\r\n                    console.log(\"成功\");\r\n                },\r\n                fail(res) {\r\n                    console.log(\"失败\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        animPrefab: cc.Prefab,\r\n        //动物容器\r\n        animalPanel: cc.Node,\r\n        //动物数组\r\n        animalArray: null,\r\n        //选中logo\r\n        selectLogo: cc.Node,\r\n        _firstNode: null,\r\n        _sectedNode: null,\r\n        //道具第一次，第二次\r\n        prop_one: null,\r\n        prop_two: null,\r\n        mask: cc.Node,\r\n        maskNode: cc.Node,\r\n        //限制只填充完成一次\r\n        is_Finised: false, //消除时变为false\r\n        //连续消除次数\r\n        clearnum: 0,\r\n\r\n        //提示无动物可消除\r\n        NoAnimNode: cc.Node,\r\n    },\r\n\r\n    onLoad() {\r\n        cc.ZL.animMgr = this;\r\n        //创建动物缓冲池\r\n        this.animalPool = new cc.NodePool();\r\n        // this.info=lvdata[\"Lv\"+comeInfo.now_lv];//获取到这一关的信息\r\n        this.info = lvdata; //获取到这一关的信息\r\n        this.NoAnimNode.active = false;\r\n    },\r\n\r\n    onOpenMask() {\r\n        this.maskNode.active = true;\r\n    },\r\n    onCloseMask() {\r\n        this.maskNode.active = false;\r\n    },\r\n\r\n    start() {\r\n        this.IsNoMatch();\r\n    },\r\n    //实例化动物\r\n    InitAnimal() {\r\n        this.animalArray = new Array();\r\n        for (let row = 0; row < this.info.Anim.length; row++) {\r\n            let rowArray = new Array();\r\n            for (let column = 0; column < this.info.Anim[row].length; column++) {\r\n                //查看是否有动物\r\n                // if(lvdata[\"Lv\"+comeInfo.now_lv].Anim[row][column]==0){\r\n                //     rowArray.push(-1);\r\n                // }else if(lvdata[\"Lv\"+comeInfo.now_lv].Anim[row][column]==-1){\r\n                //     rowArray.push(0);\r\n                // }\r\n                if (lvdata.Anim[row][column] == 0) {\r\n                    rowArray.push(-1);\r\n                } else if (lvdata.Anim[row][column] == -1) {\r\n                    rowArray.push(0);\r\n                } else {\r\n                    let a = cc.instantiate(this.animPrefab);\r\n                    this.animalPanel.addChild(a);\r\n                    a.getComponent('Animal').initAnimal(column, row, this);\r\n                    rowArray.push(a.getComponent('Animal'));\r\n                }\r\n            }\r\n            this.animalArray.push(rowArray);\r\n        }\r\n        this.SetEff();\r\n    },\r\n    // update (dt) {},\r\n    //-----------填充------------------------------------\r\n    //填充方式\r\n    NewFilled() {\r\n        // console.log(this.info.Anim, 'this.info.Anim');\r\n        //遍历格子中有的动物\r\n\r\n        // 优化前代码\r\n        // for (let i = this.info.Anim.length - 2; i >= 0; i--) {\r\n        //     for (let j = 0; j < this.info.Anim[i].length; j++) {\r\n        //         let anim = this.animalArray[i][j];\r\n        //         if (anim == 0 || anim == -1) {\r\n        //             continue;\r\n        //         }\r\n        //         if (anim.can_move) {\r\n        //             this.searchPos(anim);\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        // chatgpt优化后代码\r\n        for (let i = this.info.Anim.length - 2; i >= 0; i--) {\r\n            let animRow = this.animalArray[i];\r\n            for (let j = 0, len = animRow.length; j < len; j++) {\r\n                let anim = animRow[j];\r\n                if (anim && anim.can_move) {\r\n                    this.searchPos(anim);\r\n                }\r\n            }\r\n        }\r\n\r\n        // for (let i = this.info.Anim.length - 2; i >= 0; i--) {\r\n        //     //从倒数第二排查找\r\n        //     for (let j = 0; j < this.info.Anim[i].length; j++) {\r\n        //         let anim = this.animalArray[i][j]; //得到这个动物\r\n        //         if (anim == 0 || anim == -1) {\r\n        //             console.log('空格子或者未启用的格子');\r\n        //             //空格子或者未启用的格子\r\n        //             continue;\r\n        //         }\r\n        //         //查看他是否可以下移\r\n        //         if (anim.can_move) {\r\n        //             //就寻找他能移动到哪里\r\n        //             console.log('就寻找他能移动到哪里');\r\n        //             this.searchPos(anim);\r\n        //         }\r\n        //     }\r\n        // }\r\n        this.creatNew();\r\n    },\r\n    //TODO: 下面是通过chatgpt优化后的代码\r\n    creatNew() {\r\n        let x, y;\r\n        let isFilled = true;\r\n        for (let i = 0; i < this.info.creat.length; i++) {\r\n            x = this.info.creat[i][1];\r\n            y = this.info.creat[i][0];\r\n            if (this.animalArray[y * this.info.cols + x] == 0) {\r\n                let a = cc.instantiate(this.animPrefab);\r\n                this.animalPanel.addChild(a);\r\n                a.getComponent('Animal').initAnimal(x, y - 1, this);\r\n                a.getComponent('Animal').AnimMove(x, y);\r\n                this.animalArray[y * this.info.cols + x] = a.getComponent('Animal');\r\n                this.searchPos(this.animalArray[y * this.info.cols + x]);\r\n                isFilled = false;\r\n            }\r\n        }\r\n        if (isFilled) {\r\n            if (cc.ZL.targetMgr.IsScuessed) {\r\n                return;\r\n            }\r\n            this.FillOver();\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                this.creatNew();\r\n            });\r\n        }\r\n    },\r\n    // TODO:下面是优化前的代码\r\n    // creatNew() {\r\n    //     //如果自主产生动物的格子为空就产生动物\r\n    //     let x, y;\r\n    //     let isFiled = true;\r\n    //     for (let i = 0; i < this.info.creat.length; i++) {\r\n    //         x = this.info.creat[i][1];\r\n    //         y = this.info.creat[i][0];\r\n    //         if (this.animalArray[y][x] == 0) {\r\n    //             let a = cc.instantiate(this.animPrefab);\r\n    //             this.animalPanel.addChild(a);\r\n    //             a.getComponent('Animal').initAnimal(x, y - 1, this);\r\n    //             a.getComponent('Animal').AnimMove(x, y);\r\n    //             this.animalArray[y][x] = a.getComponent('Animal');\r\n    //             this.searchPos(this.animalArray[y][x]);\r\n    //             isFiled = false;\r\n    //         }\r\n    //     }\r\n    //     setTimeout(\r\n    //         function () {\r\n    //             if (isFiled) {\r\n    //                 //填充完成\r\n    //                 if (cc.ZL.targetMgr.IsScuessed) {\r\n    //                     return;\r\n    //                 }\r\n    //                 this.FillOver();\r\n    //                 return;\r\n    //             }\r\n    //             this.creatNew();\r\n    //         }.bind(this),\r\n    //         comeInfo.animalMoveTime * 1000\r\n    //     );\r\n    // },\r\n\r\n    //填充完成后的后续操作\r\n    FillOver() {\r\n        let is_Matc = this.AllMatch();\r\n        if (!is_Matc) {\r\n            //无需要消除的\r\n            this._firstNode = null;\r\n            this._sectedNode = null;\r\n            this.selectLogo.active = false;\r\n            this.mask.active = false;\r\n            cc.ZL.CM.InitView(this.clearnum); //设置音效\r\n            this.clearnum = 0;\r\n            if (cc.ZL.iceMgr.qqmoveNum > 0) {\r\n                //需要球球移动\r\n                cc.ZL.iceMgr.UPAllMove();\r\n                setTimeout(\r\n                    function () {\r\n                        //判断是否胜利\r\n                        let isEnd = cc.ZL.targetMgr.IsScuess();\r\n                        if (isEnd == false) {\r\n                            //如果没有结束就看看有没有可消除的动物\r\n                            this.IsNoMatch();\r\n                        }\r\n                    }.bind(this),\r\n                    comeInfo.qqmoveTime * 1500\r\n                );\r\n            } else {\r\n                //判断是否胜利\r\n                let isEnd = cc.ZL.targetMgr.IsScuess();\r\n                if (isEnd == false) {\r\n                    //如果没有结束就看看有没有可消除的动物\r\n                    setTimeout(\r\n                        function () {\r\n                            this.IsNoMatch();\r\n                        }.bind(this),\r\n                        500\r\n                    );\r\n                }\r\n            }\r\n        } else {\r\n            this.clearOverFiled();\r\n        }\r\n    },\r\n    //填充以后全部匹配一下，看看有么有需要消除的地方\r\n    AllMatch() {\r\n        let isMatched = false;\r\n        for (let row = 0; row < this.info.Anim.length; row++) {\r\n            for (let column = 0; column < this.info.Anim[row].length; column++) {\r\n                if (this.animalArray[row][column] != -1 && this.animalArray[row][column] != 0) {\r\n                    let list = this.MatchOne(this.animalArray[row][column]);\r\n                    if (list.length > 0) {\r\n                        console.log('有能消除的东西', list);\r\n                        this.RemoveAnimList(list);\r\n                        isMatched = true;\r\n                        return isMatched;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return isMatched;\r\n    },\r\n    //搜寻最终可移动到的地方\r\n    searchPos(anim) {\r\n        let self = this;\r\n        let search = function (anim) {\r\n            let i = anim.rowNum;\r\n            let j = anim.columnNum;\r\n\r\n            if (i > self.animalArray.length - 2) {\r\n                //防止超越下方边界\r\n                return false;\r\n            }\r\n            //查看下方是否是空物体\r\n            if (self.animalArray[i + 1][j] == 0) {\r\n                //如果是就下移\r\n                self.animalArray[i][j].AddPos(j, i + 1);\r\n                self.animalArray[i][j] = 0;\r\n                return true;\r\n            } else {\r\n                //查看左右下方是否为空\r\n                for (let dir = 1; dir >= -1; dir -= 2) {\r\n                    let next_x = j + dir;\r\n                    //防止超出数组边界\r\n                    if (next_x < 0 && next_x > self.info.Anim[i].length) {\r\n                        continue;\r\n                    }\r\n                    //获取动物数组中的位置\r\n                    let next_animal = self.animalArray[i + 1][next_x];\r\n                    if (next_animal == 0) {\r\n                        ///如果是空格子\r\n                        //上方不为空\r\n                        if (self.animalArray[i][next_x] != 0) {\r\n                            //如果上方无格子或者上方不能移动也可以填充\r\n                            if (self.animalArray[i][next_x] == -1 || self.animalArray[i][next_x].can_move == false) {\r\n                                self.animalArray[i][j].AddPos(next_x, i + 1);\r\n                                self.animalArray[i][j] = 0;\r\n                                return true;\r\n                            }\r\n                        } else {\r\n                            //上方第2个也为空\r\n                            if (i - 1 < 0) {\r\n                                continue;\r\n                            }\r\n                            if (\r\n                                self.animalArray[i - 1][next_x] == -1 ||\r\n                                self.animalArray[i - 1][next_x].can_move == false\r\n                            ) {\r\n                                self.animalArray[i][j].AddPos(next_x, i + 1);\r\n                                self.animalArray[i][j] = 0;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        };\r\n        if (search(anim)) {\r\n            //如果能移动就继续找下一个\r\n            this.searchPos(anim);\r\n        } else {\r\n            //如果找到了最后一个点就开始\r\n            anim.FilledMove();\r\n        }\r\n    },\r\n    //---------------------------------------------------------------\r\n    //动物选中\r\n    selectFirstAnimal(pos) {\r\n        let animal = this.animalArray[pos.y][pos.x];\r\n        if (animal == -1 || animal == 0) {\r\n            //如果是空格子或者未启用\r\n            return;\r\n        }\r\n        if (!animal.can_move) {\r\n            //不能选不能移动的\r\n            animal.stopAnim();\r\n            return;\r\n        }\r\n        if (this._firstNode == null) {\r\n            this._firstNode = animal;\r\n            this._firstNode.playAnim(0);\r\n            this.selectLogo.setPosition(animal.node.getPosition());\r\n            this.selectLogo.active = true;\r\n        } else {\r\n            if (this._firstNode == animal) {\r\n                //重复点击\r\n                return;\r\n            } else if (this._sectedNode == null) {\r\n                this._sectedNode = animal;\r\n                this._sectedNode.stopAnim();\r\n                this._firstNode.stopAnim();\r\n                if (this.isFriend()) {\r\n                    //相邻\r\n                    this.mask.active = true;\r\n                    this.changePos(true);\r\n                } else {\r\n                    //不相邻\r\n                    this._firstNode = animal;\r\n                    this._firstNode.playAnim(0);\r\n                    this.selectLogo.setPosition(animal.node.getPosition());\r\n                    this._sectedNode = null;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //判断2个动物是否相邻\r\n    isFriend() {\r\n        if (this._firstNode != null && this._sectedNode != null) {\r\n            let friend = false;\r\n            let f_x = this._firstNode.columnNum;\r\n            let f_y = this._firstNode.rowNum;\r\n            let s_x = this._sectedNode.columnNum;\r\n            let s_y = this._sectedNode.rowNum;\r\n            if (f_x == s_x) {\r\n                if (Math.abs(f_y - s_y) == 1) {\r\n                    friend = true;\r\n                }\r\n            } else if (f_y == s_y) {\r\n                if (Math.abs(f_x - s_x) == 1) {\r\n                    friend = true;\r\n                }\r\n            }\r\n            return friend;\r\n        }\r\n    },\r\n    //动物交换  (是否去匹配消除)\r\n    changePos(ismatch) {\r\n        let f_x = this._firstNode.columnNum;\r\n        let f_y = this._firstNode.rowNum;\r\n        let s_x = this._sectedNode.columnNum;\r\n        let s_y = this._sectedNode.rowNum;\r\n        cc.ZL.musicMgr.MyplayMusic(1, false); //播放点击音效\r\n        this._firstNode.AnimMove(s_x, s_y);\r\n        this._sectedNode.AnimMove(f_x, f_y);\r\n        //移动玩在进行消除\r\n        if (ismatch) {\r\n            setTimeout(\r\n                function () {\r\n                    this.MatchClear();\r\n                }.bind(this),\r\n                (comeInfo.animalMoveTime + comeInfo.delay_clear) * 1000\r\n            );\r\n        }\r\n    },\r\n    //根据类型来特殊消除或者匹配消除\r\n    MatchClear() {\r\n        /**\r\n         * 1、一个特殊和一个普通或者2个普通\r\n         * 2、2个特殊鸟\r\n         * 3、一个魔力鸟和一个普通的鸟\r\n         * 4、一个魔力鸟和一个特殊鸟\r\n         * 5、2个魔力鸟\r\n         */\r\n        //cc.ZL.musicMgr.MyplayMusic(1,false);\r\n        let clearType_first = this._firstNode.clearType;\r\n        let clearType_second = this._sectedNode.clearType;\r\n        if ((clearType_first != 4 && clearType_second == 0) || (clearType_first == 0 && clearType_second != 4)) {\r\n            //    cc.ZL.UIMgr.MinusStep();\r\n            //普通匹配消除\r\n            this.Math(this._firstNode, this._sectedNode);\r\n        } else if (clearType_first != 4 && clearType_first != 0 && clearType_second != 4 && clearType_second != 0) {\r\n            cc.ZL.UIMgr.MinusStep();\r\n            //2个特效节点全部消除\r\n            console.log('111111111111');\r\n            this._firstNode.clear();\r\n            this._sectedNode.clear();\r\n            //消除完成后填充\r\n            setTimeout(\r\n                function () {\r\n                    this.NewFilled(false);\r\n                }.bind(this),\r\n                comeInfo.animalClearTime * 1000 + 100\r\n            );\r\n        } else if ((clearType_first == 4 && clearType_second == 0) || (clearType_first == 0 && clearType_second == 4)) {\r\n            cc.ZL.UIMgr.MinusStep();\r\n            cc.ZL.musicMgr.MyplayMusic(27, false);\r\n            if (clearType_second == 4) {\r\n                this._sectedNode.animType = this._firstNode.animType;\r\n                let fn1 = cc.scaleTo(1, 3, 3).easing(cc.easeElasticOut(0.9));\r\n                let fn2 = cc.fadeOut(1);\r\n                this._sectedNode.node.runAction(cc.sequence(fn1, fn2));\r\n                setTimeout(\r\n                    function () {\r\n                        console.log('222222222222');\r\n                        this._sectedNode.clear();\r\n                    }.bind(this),\r\n                    800\r\n                );\r\n            } else {\r\n                this._firstNode.animType = this._sectedNode.animType;\r\n                let fn1 = cc.scaleTo(1, 3, 3).easing(cc.easeElasticOut(0.9));\r\n                let fn2 = cc.fadeOut(1);\r\n                this._firstNode.node.runAction(cc.spawn(fn1, fn2));\r\n                setTimeout(\r\n                    function () {\r\n                        console.log('333333333333');\r\n                        this._firstNode.clear();\r\n                    }.bind(this),\r\n                    800\r\n                );\r\n            }\r\n            //消除完成后填充\r\n            setTimeout(\r\n                function () {\r\n                    this.NewFilled(false);\r\n                }.bind(this),\r\n                comeInfo.animalClearTime * 1000 + 800\r\n            );\r\n        } else if (\r\n            (clearType_first == 4 && clearType_second != 0 && clearType_second != 4) ||\r\n            (clearType_second == 4 && clearType_first != 0 && clearType_first != 4)\r\n        ) {\r\n            cc.ZL.UIMgr.MinusStep();\r\n            //要消除的鸟的类型,消除方式\r\n            let atype, clearTypeall;\r\n            cc.ZL.musicMgr.MyplayMusic(27, false);\r\n            if (clearType_first == 4) {\r\n                atype = this._sectedNode.animType;\r\n                clearTypeall = clearType_second;\r\n                let fn1 = cc.scaleTo(1, 3, 3).easing(cc.easeElasticOut(0.9));\r\n                let fn2 = cc.fadeOut(1);\r\n                this._firstNode.node.runAction(cc.sequence(fn1, fn2));\r\n            } else {\r\n                atype = this._firstNode.animType;\r\n                clearTypeall = clearType_first;\r\n                let fn1 = cc.scaleTo(1, 3, 3).easing(cc.easeElasticOut(0.9));\r\n                let fn2 = cc.fadeOut(1);\r\n                this._sectedNode.node.runAction(cc.sequence(fn1, fn2));\r\n            }\r\n            setTimeout(\r\n                function () {\r\n                    for (let i = 0; i < comeInfo.row; i++) {\r\n                        for (let j = 0; j < comeInfo.column; j++) {\r\n                            //排除空格子和不启用\r\n                            if (this.animalArray[i][j] != 0 && this.animalArray[i][j] != -1) {\r\n                                if (this.animalArray[i][j].animType == atype) {\r\n                                    // this.animalArray[i][j].clearType=clearTypeall;\r\n                                    // this.animalArray[i][j].clear();\r\n                                    if (clearTypeall == 1) {\r\n                                        this.animalArray[i][j].creatRowEff(true);\r\n                                    } else if (clearTypeall == 2) {\r\n                                        this.animalArray[i][j].creatColnumEff(true);\r\n                                    } else if (clearTypeall == 3) {\r\n                                        this.animalArray[i][j].CreatTEff();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    setTimeout(\r\n                        function () {\r\n                            for (let i = 0; i < comeInfo.row; i++) {\r\n                                for (let j = 0; j < comeInfo.column; j++) {\r\n                                    //排除空格子和不启用\r\n                                    if (this.animalArray[i][j] != 0 && this.animalArray[i][j] != -1) {\r\n                                        if (this.animalArray[i][j].animType == atype) {\r\n                                            console.log('4444444444444');\r\n                                            this.animalArray[i][j].clear();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }.bind(this),\r\n                        200\r\n                    );\r\n                    //消除完成后填充\r\n                    setTimeout(\r\n                        function () {\r\n                            this.NewFilled(false);\r\n                        }.bind(this),\r\n                        comeInfo.animalClearTime * 1000 + 300\r\n                    );\r\n                }.bind(this),\r\n                800\r\n            );\r\n        } else if (clearType_first == 4 && clearType_second == 4) {\r\n            cc.ZL.UIMgr.MinusStep();\r\n            cc.ZL.musicMgr.MyplayMusic(27, false);\r\n            let fn1 = cc.scaleTo(1, 3, 3).easing(cc.easeElasticOut(0.9));\r\n            let fn2 = cc.fadeOut(1);\r\n            this._firstNode.node.runAction(cc.sequence(fn1, fn2));\r\n            let fn3 = cc.scaleTo(1, 3, 3).easing(cc.easeElasticOut(0.9));\r\n            let fn4 = cc.fadeOut(1);\r\n            this._sectedNode.node.runAction(cc.sequence(fn3, fn4));\r\n            setTimeout(\r\n                function () {\r\n                    for (let i = 0; i < comeInfo.row; i++) {\r\n                        for (let j = 0; j < comeInfo.column; j++) {\r\n                            //排除空格子和不启用\r\n                            if (this.animalArray[i][j] != 0 && this.animalArray[i][j] != -1) {\r\n                                console.log('555555555');\r\n                                this.animalArray[i][j].clear();\r\n                            }\r\n                        }\r\n                    }\r\n                    //消除完成后填充\r\n                    setTimeout(\r\n                        function () {\r\n                            this.NewFilled(false);\r\n                        }.bind(this),\r\n                        comeInfo.animalClearTime * 1000 + 100\r\n                    );\r\n                }.bind(this),\r\n                800\r\n            );\r\n        }\r\n    },\r\n    Math(node1, node2) {\r\n        let list_one = this.MatchOne(node1);\r\n        let list_two = this.MatchOne(node2);\r\n        if (list_one.length == 0 && list_two.length == 0) {\r\n            //console.log(\"匹配不成功\");\r\n            this.changePos(false);\r\n            this.mask.active = false;\r\n            this._firstNode = null;\r\n            this._sectedNode = null;\r\n            this.selectLogo.active = false;\r\n        } else {\r\n            //console.log(\"匹配成功\");\r\n            cc.ZL.UIMgr.MinusStep();\r\n            if (list_one.length != 0) {\r\n                //第一个匹配成功\r\n                this.RemoveAnimList(list_one);\r\n            }\r\n            if (list_two.length != 0) {\r\n                //第二个也匹配成功\r\n                this.RemoveAnimList(list_two);\r\n            }\r\n            this.clearOverFiled();\r\n        }\r\n    },\r\n    //匹配一个\r\n    MatchOne(node) {\r\n        //横向队列\r\n        let Rlist = new Array();\r\n        //纵向队列\r\n        let Clist = new Array();\r\n        //符合要求队列\r\n        let MList = new Array();\r\n        let rownum = node.rowNum;\r\n        let columnnum = node.columnNum;\r\n        let animType = node.animType;\r\n        //不是动物不匹配\r\n        if (animType >= 6 || animType == 0) {\r\n            return MList;\r\n        }\r\n        //查看横方向是否可以匹配消除\r\n        for (let i = 0; i <= 1; i++) {\r\n            //0向左1向右\r\n            for (let j = 1; j < 8; j++) {\r\n                let next_x;\r\n                if (i == 0) {\r\n                    next_x = columnnum + j;\r\n                } else {\r\n                    next_x = columnnum - j;\r\n                }\r\n\r\n                //防止超界\r\n                if (next_x < 0 || next_x > 8) {\r\n                    break;\r\n                }\r\n                //防止不启用或者空格子-1，0\r\n                if (\r\n                    this.animalArray[rownum][next_x] == comeInfo.animalType.noOpen ||\r\n                    this.animalArray[rownum][next_x] == comeInfo.animalType.none\r\n                ) {\r\n                    break;\r\n                }\r\n                if (this.animalArray[rownum][next_x].animType == animType) {\r\n                    Rlist.push(this.animalArray[rownum][next_x]);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        //查看纵方向是否可以匹配消除\r\n        for (let i = 0; i <= 1; i++) {\r\n            //0上1下\r\n            for (let j = 1; j < 8; j++) {\r\n                let next_y;\r\n                if (i == 0) {\r\n                    next_y = rownum - j;\r\n                } else {\r\n                    next_y = rownum + j;\r\n                }\r\n                //防止超界\r\n                if (next_y < 0 || next_y > 8) {\r\n                    break;\r\n                }\r\n                //防止不启用或者空格子-1，0\r\n                if (\r\n                    this.animalArray[next_y][columnnum] == comeInfo.animalType.noOpen ||\r\n                    this.animalArray[next_y][columnnum] == comeInfo.animalType.none\r\n                ) {\r\n                    break;\r\n                }\r\n                if (this.animalArray[next_y][columnnum].animType == animType) {\r\n                    Clist.push(this.animalArray[next_y][columnnum]);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        //匹配类型    //0：无类型  1：横4个 2：纵4个 3：T类型  4：5个\r\n        let matchtype = 0;\r\n        //匹配到5个\r\n        if (Rlist.length >= 4 || Clist.length >= 4) {\r\n            matchtype = 4;\r\n        } //T类型匹配\r\n        else if ((Rlist.length == 2 || Rlist.length == 3) && (Clist.length == 2 || Clist.length == 3)) {\r\n            matchtype = 3;\r\n        } //纵4个\r\n        else if (Clist.length == 3 && Rlist.length < 2) {\r\n            matchtype = 2;\r\n        } //横4个\r\n        else if (Clist.length < 2 && Rlist.length == 3) {\r\n            matchtype = 1;\r\n        } //纵或者横3个\r\n        else if ((Clist.length == 2 && Rlist.length < 2) || (Clist.length < 2 && Rlist.length == 2)) {\r\n            matchtype = 0;\r\n        }\r\n        if (Rlist.length >= 2) {\r\n            //如果有2个就符合要求\r\n            for (let i = 0; i < Rlist.length; i++) {\r\n                MList.push(Rlist[i]);\r\n            }\r\n        }\r\n        if (Clist.length >= 2) {\r\n            for (let i = 0; i < Clist.length; i++) {\r\n                MList.push(Clist[i]);\r\n            }\r\n        }\r\n        if (MList.length > 0) {\r\n            //有符合要求的\r\n            MList.push(node); //加入自身\r\n            MList.push(matchtype); //加入匹配类型\r\n        }\r\n        return MList;\r\n    },\r\n    //匹配成功就进行对应的消除\r\n    RemoveAnimList(list) {\r\n        this.is_Finised = false;\r\n        //获取到匹配类型\r\n        let cType = list[list.length - 1];\r\n        if (cType == 0) {\r\n            for (let i = 0; i < list.length - 1; i++) {\r\n                console.log('6666666666666');\r\n                console.log(i, 'i');\r\n                console.log(list, 'list');\r\n                console.log(list[i], 'list[i]');\r\n\r\n                list[i].clear();\r\n                //cc.ZL.UIMgr.AddScore(cc.ZL.UIMgr.add_score);\r\n            }\r\n        } else {\r\n            this.specialRemove(list, cType);\r\n        }\r\n    },\r\n    //产生特殊效果的消除\r\n    specialRemove(list, type) {\r\n        //查看匹配的节点是不是普通的节点\r\n        if (list[list.length - 2].clearType == 0) {\r\n            //如果是普通节点就把自身设置成特殊消除节点\r\n            list[list.length - 2].deleteMuBiao();\r\n            console.log('7777777777777', list);\r\n            //获取这个节点的位置用来产生特效标识\r\n            if (list[list.length - 2] != 0) {\r\n                if (type == 1) {\r\n                    //1：横4个\r\n                    list[list.length - 2].creatColnumEff(true);\r\n                } else if (type == 2) {\r\n                    //2：纵4个\r\n                    list[list.length - 2].creatRowEff(true);\r\n                } else if (type == 3) {\r\n                    //3：T类型\r\n                    list[list.length - 2].CreatTEff();\r\n                } else if (type == 4) {\r\n                    //4：5个\r\n                    list[list.length - 2].CreatFiveEff();\r\n                }\r\n            }\r\n            //其余的节点消除\r\n            for (let i = 0; i < list.length - 2; i++) {\r\n                list[i].clear();\r\n            }\r\n        } else {\r\n            //否者就随机选择一个普通节点，要是没有就全部消除\r\n            let r_column = null;\r\n            let r_row = null;\r\n            //寻找无特效节点\r\n            for (let i = 0; i < list.length - 2; i++) {\r\n                if (list[i].clearType == 0) {\r\n                    r_column = list[i].columnNum;\r\n                    r_row = list[i].rowNum;\r\n                    break;\r\n                }\r\n            }\r\n            if (r_column != null && r_row != null) {\r\n                //找到了\r\n                if (this.animalArray[r_row][r_column] != 0) {\r\n                    if (type == 1) {\r\n                        //1：横4个\r\n                        this.animalArray[r_row][r_column].creatColnumEff(true);\r\n                    } else if (type == 2) {\r\n                        //2：纵4个\r\n                        this.animalArray[r_row][r_column].creatRowEff(true);\r\n                    } else if (type == 3) {\r\n                        //3：T类型\r\n                        this.animalArray[r_row][r_column].CreatTEff();\r\n                    } else if (type == 4) {\r\n                        //4：5个\r\n                        this.animalArray[r_row][r_column].CreatFiveEff();\r\n                    }\r\n                }\r\n\r\n                //其余的全部消除\r\n                for (let i = 0; i < list.length - 1; i++) {\r\n                    if (list[i].rowNum == r_row && list[i].columnNum == r_column) {\r\n                        continue;\r\n                    } else {\r\n                        console.log('8888888888888');\r\n                        list[i].clear();\r\n                    }\r\n                }\r\n            } else {\r\n                //如果都为特效节点，全部消除就好\r\n                for (let i = 0; i < list.length - 1; i++) {\r\n                    console.log('999999999999');\r\n                    list[i].clear();\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //消除后填充\r\n    clearOverFiled() {\r\n        //消除完成后填充\r\n        cc.ZL.musicMgr.MyplayMusic(2, false);\r\n        this.clearnum += 1;\r\n        if (this.clearnum > 2) {\r\n            if (this.clearnum >= 6) {\r\n                this.clearnum = 6;\r\n            }\r\n            cc.ZL.musicMgr.MyplayMusic(this.clearnum + 1, false);\r\n        }\r\n\r\n        setTimeout(\r\n            function () {\r\n                this.NewFilled(false);\r\n            }.bind(this),\r\n            comeInfo.animalClearTime * 1000\r\n        );\r\n    },\r\n    //特效设置\r\n    SetEff() {\r\n        // let effarry=lvdata[\"Lv\"+comeInfo.now_lv].eff;\r\n        let effarry = lvdata.eff;\r\n        for (let row = 0; row < comeInfo.row; row++) {\r\n            for (let column = 0; column < comeInfo.column; column++) {\r\n                if (effarry[row][column] == 1) {\r\n                    //横\r\n                    this.animalArray[row][column].creatRowEff();\r\n                } else if (effarry[row][column] == 2) {\r\n                    //纵\r\n                    this.animalArray[row][column].creatColnumEff();\r\n                } else if (effarry[row][column] == 3) {\r\n                    //T\r\n                    this.animalArray[row][column].CreatTEff();\r\n                } else if (effarry[row][column] == 4) {\r\n                    //魔力鸟\r\n                    this.animalArray[row][column].CreatFiveEff();\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //------------------横向消除动物---------------------\r\n    RowClear(rownum, columnNum) {\r\n        for (let i = 0; i < comeInfo.column; i++) {\r\n            //排除自身（这个节点自身）\r\n            if (i == columnNum) {\r\n                continue;\r\n            }\r\n            //排除不是空格子或者不启用\r\n            if (\r\n                this.animalArray[rownum][i] != comeInfo.animalType.noOpen &&\r\n                this.animalArray[rownum][i] != comeInfo.animalType.none\r\n            ) {\r\n                //也不是障碍物\r\n                if (this.animalArray[rownum][i].animType != 0) {\r\n                    console.log('100000000000000');\r\n                    this.animalArray[rownum][i].clear();\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //纵向消除动物\r\n    ColumnClear(rownum, columnnum) {\r\n        for (let i = 0; i < 9; i++) {\r\n            //排除自身\r\n            if (i == rownum) {\r\n                continue;\r\n            }\r\n            //排除不是空格子或者不启用\r\n            if (\r\n                this.animalArray[i][columnnum] != comeInfo.animalType.noOpen &&\r\n                this.animalArray[i][columnnum] != comeInfo.animalType.none\r\n            ) {\r\n                //也不是障碍物\r\n                if (this.animalArray[i][columnnum].animType != 0) {\r\n                    console.log('111111111111+++');\r\n                    this.animalArray[i][columnnum].clear();\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //范围消除动物\r\n    RangeClear(rownum, columnnum) {\r\n        //要消除的集合\r\n        let totalList = new Array();\r\n        //从上往下开始\r\n        if (rownum - 2 >= 0) {\r\n            totalList.push(this.animalArray[rownum - 2][columnnum]);\r\n        }\r\n        if (rownum - 1 >= 0) {\r\n            if (columnnum - 1 >= 0) {\r\n                totalList.push(this.animalArray[rownum - 1][columnnum - 1]);\r\n            }\r\n            totalList.push(this.animalArray[rownum - 1][columnnum]);\r\n            if (columnnum + 1 <= comeInfo.column - 1) {\r\n                totalList.push(this.animalArray[rownum - 1][columnnum + 1]);\r\n            }\r\n        }\r\n        if (columnnum - 2 >= 0) {\r\n            totalList.push(this.animalArray[rownum][columnnum - 2]);\r\n        }\r\n        if (columnnum - 1 >= 0) {\r\n            totalList.push(this.animalArray[rownum][columnnum - 1]);\r\n        }\r\n        if (columnnum + 1 <= comeInfo.column - 1) {\r\n            totalList.push(this.animalArray[rownum][columnnum + 1]);\r\n        }\r\n        if (columnnum + 2 <= comeInfo.column - 1) {\r\n            totalList.push(this.animalArray[rownum][columnnum + 2]);\r\n        }\r\n        if (rownum + 1 <= comeInfo.row - 1) {\r\n            if (columnnum + 1 <= comeInfo.column - 1) {\r\n                totalList.push(this.animalArray[rownum + 1][columnnum + 1]);\r\n            }\r\n            totalList.push(this.animalArray[rownum + 1][columnnum]);\r\n            if (columnnum - 1 >= 0) {\r\n                totalList.push(this.animalArray[rownum + 1][columnnum - 1]);\r\n            }\r\n        }\r\n        if (rownum + 2 <= comeInfo.row - 1) {\r\n            totalList.push(this.animalArray[rownum + 2][columnnum]);\r\n        }\r\n        for (let i = 0; i < totalList.length; i++) {\r\n            //不是空物体\r\n            if (totalList[i] != 0 && totalList[i] != -1) {\r\n                //也不是障碍物\r\n                if (totalList[i].animType != 0) {\r\n                    console.log('133333333333333');\r\n                    totalList[i].clear();\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //同类消除\r\n    TypeClear(animaltype) {\r\n        for (let i = 0; i < comeInfo.row; i++) {\r\n            for (let j = 0; j < comeInfo.column; j++) {\r\n                //排除不启用和空格子\r\n                if (\r\n                    this.animalArray[i][j] != comeInfo.animalType.noOpen &&\r\n                    this.animalArray[i][j] != comeInfo.animalType.none\r\n                ) {\r\n                    if (this.animalArray[i][j].animType == animaltype) {\r\n                        console.log('144444444444444');\r\n                        this.animalArray[i][j].clear();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //道具交换位置\r\n    proChangePos(node) {\r\n        if (node.can_move == false) {\r\n            return;\r\n        }\r\n        if (this.prop_one == null) {\r\n            this.prop_one = node;\r\n            this.prop_one.node.scale = 1.2;\r\n            return;\r\n        }\r\n        //重复点击\r\n        if (this.prop_one == node) {\r\n            return;\r\n        }\r\n        if (this.prop_one != null && this.prop_two == null) {\r\n            this.mask.active = true;\r\n            this.prop_two = node;\r\n            let o_x = this.prop_one.columnNum;\r\n            let o_y = this.prop_one.rowNum;\r\n            let t_x = this.prop_two.columnNum;\r\n            let t_y = this.prop_two.rowNum;\r\n            this.prop_one.AnimMove(t_x, t_y);\r\n            this.prop_two.AnimMove(o_x, o_y);\r\n            this.prop_one.scale = 1;\r\n            this.prop_one = null;\r\n            this.prop_two = null;\r\n            if (!this.AllMatch()) {\r\n                this.mask.active = false;\r\n            }\r\n            cc.ZL.PropMgr.propFinished(3);\r\n        }\r\n    },\r\n    //全部动物随机调换位置\r\n    replaceAll() {\r\n        this.NoAnimNode.active = false;\r\n        let posArr = []; //将动物的位置放入数组\r\n        let AnimArr2 = [];\r\n        for (let i = this.info.Anim.length - 1; i >= 0; i--) {\r\n            for (let j = 0; j < this.info.Anim[i].length; j++) {\r\n                let anim = this.animalArray[i][j]; //得到这个动物\r\n                if (anim == 0 || anim == -1) {\r\n                    //空格子或者未启用的格子\r\n                    continue;\r\n                }\r\n                if (anim.can_move == false) {\r\n                    continue;\r\n                }\r\n\r\n                let pos = [i, j];\r\n                AnimArr2.push(anim);\r\n                posArr.push(pos);\r\n            }\r\n        }\r\n        //打乱数组顺序\r\n        for (let i = 0; i < posArr.length; i++) {\r\n            let lastIndex = posArr.length - 1 - i; //取出最后一个\r\n            let index = Math.floor(Math.random() * lastIndex);\r\n            let temp = [posArr[index][0], posArr[index][1]];\r\n            posArr[index][0] = posArr[lastIndex][0];\r\n            posArr[index][1] = posArr[lastIndex][1];\r\n            posArr[lastIndex][0] = temp[0];\r\n            posArr[lastIndex][1] = temp[1];\r\n        }\r\n        for (let i = 0; i < AnimArr2.length; i++) {\r\n            AnimArr2[i].AnimMove(posArr[i][1], posArr[i][0]);\r\n        }\r\n        setTimeout(\r\n            function () {\r\n                let is_Matc = this.AllMatch(); //随机调换位置后重新匹配一下\r\n                // console.log('有能消除的东西22222',is_Matc)\r\n                if (is_Matc) {\r\n                    //如果有匹配上的\r\n                    this.clearOverFiled();\r\n                }\r\n                this.IsNoMatch();\r\n            }.bind(this),\r\n            comeInfo.animalMoveTime * 1000 + 300\r\n        );\r\n    },\r\n    //----------判断是不是死图-----------------------------------\r\n    IsNoMatch() {\r\n        // console.log('info===>', this.info.Anim)\r\n        // console.log('animalArray===>', this.animalArray)\r\n        for (let i = 0; i < this.info.Anim.length; i++) {\r\n            for (let j = 1; j < this.info.Anim[i].length - 1; j++) {\r\n                let anim = this.animalArray[i][j]; //得到这个动物\r\n                if (anim == 0 || anim == -1) {\r\n                    //空格子或者未启用的格子\r\n                    continue;\r\n                }\r\n                if (anim.can_move == false) {\r\n                    continue;\r\n                }\r\n                //查看有没有可以消除的特殊效果\r\n                if (anim.clearType == 4 || anim.animType == 6) {\r\n                    //如果是魔力鸟\r\n                    this.mask.active = false;\r\n                    return true;\r\n                }\r\n                if (anim.clearType != 0) {\r\n                    if (i - 1 >= 0) {\r\n                        if (this.animalArray[i - 1][j] != 0 && this.animalArray[i - 1][j] != -1) {\r\n                            if (this.animalArray[i - 1][j].clearType != 0) {\r\n                                this.mask.active = false;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i + 1 < 9) {\r\n                        if (this.animalArray[i + 1][j] != 0 && this.animalArray[i + 1][j] != -1) {\r\n                            if (this.animalArray[i + 1][j].clearType != 0) {\r\n                                this.mask.active = false;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (j - 1 >= 0) {\r\n                        if (this.animalArray[i][j - 1] != 0 && this.animalArray[i][j - 1] != -1) {\r\n                            if (this.animalArray[i][j - 1].clearType != 0) {\r\n                                this.mask.active = false;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (j + 1 < 9) {\r\n                        if (this.animalArray[i][j + 1] != 0 && this.animalArray[i][j + 1] != -1) {\r\n                            if (this.animalArray[i][j + 1].clearType != 0) {\r\n                                this.mask.active = false;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.isDie(anim)) {\r\n                    // console.log(\"有可以消除的\",this.animalArray)\r\n                    this.mask.active = false;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        console.log('没有可以消除的');\r\n        this.NoAnimNode.active = true;\r\n        return false;\r\n    },\r\n    isDie(anim) {\r\n        let x = anim.rowNum;\r\n        let y = anim.columnNum;\r\n        let animType = anim.animType;\r\n        // console.log('isDie', x,y,animType)\r\n        //任何一种匹配成功都可以\r\n        let type1 = this.IsFirstLineCast(x, y, animType);\r\n        let type2 = this.IsSecondLineCast(x, y, animType);\r\n        let type3 = this.IsThirdLineCast(x, y, animType);\r\n        let type4 = this.IsSameRowCol(x, y, animType);\r\n        if (type1 || type2 || type3 || type4) {\r\n            console.log(\r\n                '有可以消除的___',\r\n                'type1:' + type1,\r\n                '  type2:' + type2,\r\n                '  type3:' + type3,\r\n                '  type4:' + type4\r\n            );\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n    /*\r\n     * O O\r\n     *  X\r\n     * O O\r\n     */\r\n    IsFirstLineCast(x, y, animType) {\r\n        var lx = x - 1;\r\n        var ly = y - 1;\r\n        var tx = x + 1;\r\n        var ty = y + 1;\r\n        var isLeftBottomSame = false;\r\n        var isLeftTopSame = false;\r\n        var isRightBottomSame = false;\r\n        var isRightTopSame = false;\r\n        if (lx >= 0 && ly >= 0) {\r\n            if (this.animalArray[lx][ly] != 0 && this.animalArray[lx][ly] != -1) {\r\n                if (this.animalArray[lx][ly].animType == animType) {\r\n                    isLeftBottomSame = true;\r\n                }\r\n            }\r\n        }\r\n        if (lx >= 0 && ty < 9) {\r\n            if (this.animalArray[lx][ty] != 0 && this.animalArray[lx][ty] != -1) {\r\n                if (this.animalArray[lx][ty].animType == animType) {\r\n                    isLeftTopSame = true;\r\n                }\r\n            }\r\n        }\r\n        if (tx < 9 && ly >= 0) {\r\n            if (this.animalArray[tx][ly] != 0 && this.animalArray[tx][ly] != -1) {\r\n                if (this.animalArray[tx][ly].animType == animType) {\r\n                    isRightBottomSame = true;\r\n                }\r\n            }\r\n        }\r\n        if (tx < 9 && ty < 9) {\r\n            if (this.animalArray[tx][ty] != 0 && this.animalArray[tx][ty] != -1) {\r\n                if (this.animalArray[tx][ty].animType == animType) {\r\n                    isRightTopSame = true;\r\n                }\r\n            }\r\n        }\r\n        // 左下角与右下角\r\n        if (isLeftBottomSame && isRightBottomSame) {\r\n            //这个动物必须可以下移才可以\r\n            if (\r\n                this.animalArray[x][y - 1] != 0 &&\r\n                this.animalArray[x][y - 1] != -1 &&\r\n                this.animalArray[x][y - 1].can_move\r\n            ) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // 左下角与左上角\r\n        if (isLeftBottomSame && isLeftTopSame) {\r\n            //这个动物必须可以左移才可以\r\n            if (\r\n                this.animalArray[x - 1][y] != 0 &&\r\n                this.animalArray[x - 1][y] != -1 &&\r\n                this.animalArray[x - 1][y].can_move\r\n            ) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // 左上角与右上角\r\n        if (isLeftTopSame && isRightTopSame) {\r\n            //这个动物必须可以上移才可以\r\n            if (\r\n                this.animalArray[x][y + 1] != 0 &&\r\n                this.animalArray[x][y + 1] != -1 &&\r\n                this.animalArray[x][y + 1].can_move\r\n            ) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // 右上角与右下角\r\n        if (isRightTopSame && isRightBottomSame) {\r\n            //这个动物必须可以上移才可以\r\n            if (\r\n                this.animalArray[x + 1][y] != 0 &&\r\n                this.animalArray[x + 1][y] != -1 &&\r\n                this.animalArray[x + 1][y].can_move\r\n            ) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /*\r\n     * O  O\r\n     *  XX\r\n     * O  O\r\n     */\r\n    IsSecondLineCast(x, y, animType) {\r\n        var lx = x - 1;\r\n        var ly = y - 2;\r\n        var tx = x + 1;\r\n        var ty = y + 1;\r\n        var isLeftBottomSame = false;\r\n        var isLeftTopSame = false;\r\n        var isRightBottomSame = false;\r\n        var isRightTopSame = false;\r\n        if (lx >= 0 && ly >= 0) {\r\n            if (this.animalArray[lx][ly] != 0 && this.animalArray[lx][ly] != -1) {\r\n                if (this.animalArray[lx][ly].animType == animType && this.animalArray[lx][ly].can_move) {\r\n                    isLeftBottomSame = true;\r\n                }\r\n            }\r\n        }\r\n        if (lx >= 0 && ty < 9) {\r\n            if (this.animalArray[lx][ty] != 0 && this.animalArray[lx][ty] != -1) {\r\n                if (this.animalArray[lx][ty].animType == animType && this.animalArray[lx][ty].can_move) {\r\n                    isLeftTopSame = true;\r\n                }\r\n            }\r\n        }\r\n        if (tx < 9 && ly >= 0) {\r\n            if (this.animalArray[tx][ly] != 0 && this.animalArray[tx][ly] != -1) {\r\n                if (this.animalArray[tx][ly].animType == animType && this.animalArray[tx][ly].can_move) {\r\n                    isRightBottomSame = true;\r\n                }\r\n            }\r\n        }\r\n        if (tx < 9 && ty < 9) {\r\n            if (this.animalArray[tx][ty] != 0 && this.animalArray[tx][ty] != -1) {\r\n                if (this.animalArray[tx][ty].animType == animType && this.animalArray[tx][ty].can_move) {\r\n                    isRightTopSame = true;\r\n                }\r\n            }\r\n        }\r\n        if (y - 1 >= 0 && this.animalArray[x][y - 1] != 0 && this.animalArray[x][y - 1] != -1) {\r\n            if (this.animalArray[x][y - 1].animType == animType) {\r\n                // 左下角\r\n                if (isLeftBottomSame) {\r\n                    //这个动物必须可以右移才可以\r\n                    if (\r\n                        this.animalArray[x][y - 2] != 0 &&\r\n                        this.animalArray[x][y - 2] != -1 &&\r\n                        this.animalArray[x][y - 2].can_move\r\n                    ) {\r\n                        return true;\r\n                    }\r\n                }\r\n                // 左上角\r\n                if (isLeftTopSame) {\r\n                    //这个动物必须可以右移才可以\r\n                    if (\r\n                        this.animalArray[x][y + 1] != 0 &&\r\n                        this.animalArray[x][y + 1] != -1 &&\r\n                        this.animalArray[x][y + 1].can_move\r\n                    ) {\r\n                        return true;\r\n                    }\r\n                }\r\n                // 右下角\r\n                if (isRightBottomSame) {\r\n                    //这个动物必须可以左移才可以\r\n                    if (\r\n                        this.animalArray[x][y - 2] != 0 &&\r\n                        this.animalArray[x][y - 2] != -1 &&\r\n                        this.animalArray[x][y - 2].can_move\r\n                    ) {\r\n                        return true;\r\n                    }\r\n                }\r\n                // 右上角\r\n                if (isRightTopSame) {\r\n                    //这个动物必须可以右移才可以\r\n                    if (\r\n                        this.animalArray[x][y + 1] != 0 &&\r\n                        this.animalArray[x][y + 1] != -1 &&\r\n                        this.animalArray[x][y + 1].can_move\r\n                    ) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /*\r\n     * O O\r\n     *  X\r\n     *  X\r\n     * O O\r\n     */\r\n    IsThirdLineCast(x, y, animType) {\r\n        var lx = x - 1;\r\n        var ly = y - 1;\r\n        var tx = x + 2;\r\n        var ty = y + 1;\r\n        var isLeftBottomSame = false;\r\n        var isLeftTopSame = false;\r\n        var isRightBottomSame = false;\r\n        var isRightTopSame = false;\r\n        if (lx >= 0 && ly >= 0) {\r\n            if (this.animalArray[lx][ly] != 0 && this.animalArray[lx][ly] != -1) {\r\n                if (this.animalArray[lx][ly].animType == animType && this.animalArray[lx][ly].can_move) {\r\n                    isLeftBottomSame = true;\r\n                }\r\n            }\r\n        }\r\n        if (lx >= 0 && ty < 9) {\r\n            if (this.animalArray[lx][ty] != 0 && this.animalArray[lx][ty] != -1) {\r\n                if (this.animalArray[lx][ty].animType == animType && this.animalArray[lx][ty].can_move) {\r\n                    isLeftTopSame = true;\r\n                }\r\n            }\r\n        }\r\n        if (tx < 9 && ly >= 0) {\r\n            if (this.animalArray[tx][ly] != 0 && this.animalArray[tx][ly] != -1) {\r\n                if (this.animalArray[tx][ly].animType == animType && this.animalArray[tx][ly].can_move) {\r\n                    isRightBottomSame = true;\r\n                }\r\n            }\r\n        }\r\n        if (tx < 9 && ty < 9) {\r\n            if (this.animalArray[tx][ty] != 0 && this.animalArray[tx][ty] != -1) {\r\n                if (this.animalArray[tx][ty].animType == animType && this.animalArray[tx][ty].can_move) {\r\n                    isRightTopSame = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (x + 1 < 9 && this.animalArray[x + 1][y] != 0 && this.animalArray[x + 1][y] != -1) {\r\n            if (this.animalArray[x + 1][y].animType == animType) {\r\n                // 左下角\r\n                if (isLeftBottomSame) {\r\n                    //这个动物必须可以上移才可以\r\n                    if (\r\n                        this.animalArray[x - 1][y] != 0 &&\r\n                        this.animalArray[x - 1][y] != -1 &&\r\n                        this.animalArray[x - 1][y].can_move\r\n                    ) {\r\n                        return true;\r\n                    }\r\n                }\r\n                // 左上角\r\n                if (isLeftTopSame) {\r\n                    //这个动物必须可以下移才可以\r\n                    if (\r\n                        this.animalArray[x - 1][y] != 0 &&\r\n                        this.animalArray[x - 1][y] != -1 &&\r\n                        this.animalArray[x - 1][y].can_move\r\n                    ) {\r\n                        return true;\r\n                    }\r\n                }\r\n                // 右下角\r\n                if (isRightBottomSame) {\r\n                    //这个动物必须可以上移才可以\r\n                    if (\r\n                        this.animalArray[x + 2][y] != 0 &&\r\n                        this.animalArray[x + 2][y] != -1 &&\r\n                        this.animalArray[x + 2][y].can_move\r\n                    ) {\r\n                        return true;\r\n                    }\r\n                }\r\n                // 右上角\r\n                if (isRightTopSame) {\r\n                    //这个动物必须可以下移才可以\r\n                    if (\r\n                        this.animalArray[x + 2][y] != 0 &&\r\n                        this.animalArray[x + 2][y] != -1 &&\r\n                        this.animalArray[x + 2][y].can_move\r\n                    ) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    // 同一行或者同一列，有可以消除的\r\n    IsSameRowCol(x, y, animType) {\r\n        // 0x00 和 00x0\r\n        if (x < 6) {\r\n            let add1 = this.animalArray[x + 1][y];\r\n            let add2 = this.animalArray[x + 2][y];\r\n            let add3 = this.animalArray[x + 3][y];\r\n            // console.log(x+\"---\"+y)\r\n            // console.log(animType)\r\n            if (\r\n                add1 &&\r\n                add1 != 0 &&\r\n                add1 != -1 &&\r\n                add3 &&\r\n                add3 != 0 &&\r\n                add3 != -1 &&\r\n                add2 &&\r\n                add2 != 0 &&\r\n                add2 != -1 &&\r\n                add2.can_move &&\r\n                add1.animType == animType &&\r\n                add3.animType == animType\r\n            ) {\r\n                console.log('func1__', this.animalArray, x, y, animType);\r\n                return true;\r\n            }\r\n\r\n            if (\r\n                add2 &&\r\n                add2 != 0 &&\r\n                add2 != -1 &&\r\n                add3 &&\r\n                add3 != 0 &&\r\n                add3 != -1 &&\r\n                add1 &&\r\n                add1 != 0 &&\r\n                add1 != -1 &&\r\n                add1.can_move &&\r\n                add2.animType == animType &&\r\n                add3.animType == animType\r\n            ) {\r\n                console.log('func2__', this.animalArray, x, y, animType);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (y < 6) {\r\n            // 纵向\r\n            let addc1 = this.animalArray[x][y + 1];\r\n            let addc2 = this.animalArray[x][y + 2];\r\n            let addc3 = this.animalArray[x][y + 3];\r\n\r\n            // console.log(addc1)\r\n            // console.log(addc2)\r\n            // console.log(addc3)\r\n            if (\r\n                addc1 &&\r\n                addc1 != 0 &&\r\n                addc1 != -1 &&\r\n                addc3 &&\r\n                addc3 != 0 &&\r\n                addc3 != -1 &&\r\n                addc2 &&\r\n                addc2 != 0 &&\r\n                addc2 != -1 &&\r\n                addc2.can_move &&\r\n                addc1.animType == animType &&\r\n                addc3.animType == animType\r\n            ) {\r\n                console.log('func3__', this.animalArray, x, y, animType);\r\n                return true;\r\n            }\r\n\r\n            if (\r\n                addc1 &&\r\n                addc1 != 0 &&\r\n                addc1 != -1 &&\r\n                addc2 &&\r\n                addc2 != 0 &&\r\n                addc2 != -1 &&\r\n                addc3 &&\r\n                addc3 != 0 &&\r\n                addc3 != -1 &&\r\n                addc1.can_move &&\r\n                addc2.animType == animType &&\r\n                addc3.animType == animType\r\n            ) {\r\n                console.log('func4__', this.animalArray, x, y, animType);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //列号\r\n        columnNum: -1,\r\n        //行号\r\n        rowNum: -1,\r\n        //管理器\r\n        animalMgr: null,\r\n        //动物的类型\r\n        animType: 0, //0障碍物，1狗,2猴子，3鸟，4猫，5羊  6魔力鸟\r\n        //消除类型 0普通1横向2纵向3范围4魔力鸟\r\n        clearType: 0,\r\n        can_move: true,\r\n        //是否已经被消除\r\n        is_clear: false,\r\n    },\r\n\r\n    // onLoad () {},\r\n\r\n    start() {},\r\n\r\n    update(dt) {},\r\n    initAnimal(columnnum, rownum, animalMgr) {\r\n        this.clearType = 0;\r\n        this.pos = [];\r\n        this.node.sacle = 1;\r\n        this.is_clear = false;\r\n        if (rownum == -1) {\r\n            this.animType = Math.floor(Math.random() * 5) + 1;\r\n        } else {\r\n            // if(lvdata[\"Lv\"+comeInfo.now_lv].Anim[rownum][columnnum]==0){//填补使用\r\n            //     this.animType=Math.floor(Math.random()*5)+1;\r\n            // }else{\r\n            //     this.animType=lvdata[\"Lv\"+comeInfo.now_lv].Anim[rownum][columnnum];\r\n            // }\r\n            if (lvdata.Anim[rownum][columnnum] == 0) {\r\n                //填补使用\r\n                this.animType = Math.floor(Math.random() * 5) + 1;\r\n            } else {\r\n                this.animType = lvdata.Anim[rownum][columnnum];\r\n            }\r\n        }\r\n        //设置是否可移动\r\n        if (this.animType >= 6) {\r\n            this.node.width = 74;\r\n            this.node.height = 74;\r\n            this.can_move = false;\r\n        } else {\r\n            this.node.width = 74;\r\n            this.node.height = 74;\r\n            this.can_move = true;\r\n        }\r\n        this.node.getComponent(cc.Sprite).spriteFrame = cc.ZL.sprMgr.spr[this.animType];\r\n        this.columnNum = columnnum;\r\n        this.rowNum = rownum;\r\n        this.animalMgr = animalMgr;\r\n        this.node.setPosition(utils.rowColumnPosition_Anim(columnnum, rownum));\r\n    },\r\n    //把要移动到的点加入数组\r\n    AddPos(columnnum, rownum) {\r\n        this.columnNum = columnnum;\r\n        this.rowNum = rownum;\r\n        this.animalMgr.animalArray[this.rowNum][this.columnNum] = this;\r\n        let p = [columnnum, rownum];\r\n        this.pos.push(p);\r\n    },\r\n    //填充移动\r\n    FilledMove() {\r\n        let action = [];\r\n        if (this.pos.length > 1) {\r\n            this.node.stopAllActions();\r\n            for (let i = 0; i < this.pos.length; i++) {\r\n                if (i == this.pos.length - 1) {\r\n                    //如果是最后一个就加上缓动系统\r\n                    let fn1 = cc\r\n                        .moveTo(comeInfo.animalMoveTime, utils.rowColumnPosition_Anim(this.pos[i][0], this.pos[i][1]))\r\n                        .easing(cc.easeElasticOut(0.9));\r\n                    let fn2 = cc.scaleTo(0.2, 0.8, 0.8);\r\n                    let fn3 = cc.scaleTo(0.4, 1, 1).easing(cc.easeElasticOut(0.5));\r\n                    let fn = cc.spawn(fn1, cc.sequence(fn2, fn3));\r\n                    action.push(fn);\r\n                } else {\r\n                    action.push(\r\n                        cc.moveTo(comeInfo.animalMoveTime, utils.rowColumnPosition_Anim(this.pos[i][0], this.pos[i][1]))\r\n                    );\r\n                }\r\n            }\r\n            this.node.runAction(cc.sequence(action));\r\n        } else if (this.pos.length == 1) {\r\n            this.node.stopAllActions();\r\n            let fn1 = cc\r\n                .moveTo(comeInfo.animalMoveTime, utils.rowColumnPosition_Anim(this.pos[0][0], this.pos[0][1]))\r\n                .easing(cc.easeElasticOut(0.9));\r\n            let fn2 = cc.scaleTo(0.2, 0.8, 0.8);\r\n            let fn3 = cc.scaleTo(0.4, 1, 1).easing(cc.easeElasticOut(0.5));\r\n            let fn = cc.spawn(fn1, cc.sequence(fn2, fn3));\r\n            this.node.runAction(fn);\r\n        }\r\n        this.pos = [];\r\n    },\r\n    //动物移动\r\n    AnimMove(columnnum, rownum) {\r\n        if (this.can_move) {\r\n            this.node.stopAllActions();\r\n            this.columnNum = columnnum;\r\n            this.rowNum = rownum;\r\n            this.animalMgr.animalArray[this.rowNum][this.columnNum] = this;\r\n            let fn1 = cc.moveTo(comeInfo.animalMoveTime, utils.rowColumnPosition_Anim(columnnum, rownum));\r\n            let fn2 = cc.scaleTo(0.05, 0.5, 0.5);\r\n            let fn3 = cc.scaleTo(0.1, 1, 1).easing(cc.easeElasticOut(0.9));\r\n            this.node.runAction(cc.sequence(fn1, fn2, fn3));\r\n        }\r\n    },\r\n    //消除\r\n    clear() {\r\n        if (this.is_clear) {\r\n            //防止被重复消除\r\n            return;\r\n        }\r\n        cc.ZL.UIMgr.AddScore(cc.ZL.UIMgr.add_score);\r\n        //如果是障碍物就用障碍物消除\r\n        if (this.animType > 6) {\r\n            this.clearObstacle(this, this.rowNum, this.columnNum, 'clear');\r\n            return;\r\n        }\r\n        //先查看该动物上方是否有需要消除的障碍（比如被冰冻，被草困住）\r\n        if (this.FindUP()) {\r\n            //没有需要消除的上层障碍才向下执行\r\n            this.is_clear = true;\r\n            //查看是否有特殊消除效果\r\n            switch (this.clearType) {\r\n                case 1: //消除一行\r\n                    cc.ZL.effMgr.CreatRowEff(this.node.getPosition(), 'row');\r\n                    this.animalMgr.RowClear(this.rowNum, this.columnNum);\r\n                    break;\r\n                case 2: //消除一列\r\n                    cc.ZL.effMgr.CreatRowEff(this.node.getPosition(), 'cloumn');\r\n                    this.animalMgr.ColumnClear(this.rowNum, this.columnNum);\r\n                    break;\r\n                case 3: //范围消除\r\n                    cc.ZL.effMgr.CreatBoomEff(this.node.getPosition());\r\n                    this.animalMgr.RangeClear(this.rowNum, this.columnNum);\r\n                    break;\r\n                case 4: //魔力鸟消除\r\n                    if (this.animType == 6) {\r\n                        this.animType = Math.floor(Math.random() * 5) + 1;\r\n                        //console.log(\"消除类型是\"+randomType);\r\n                        this.animalMgr.TypeClear(this.animType);\r\n                    } else {\r\n                        this.animalMgr.TypeClear(this.animType);\r\n                    }\r\n                    break;\r\n            }\r\n            this.ClearSelf();\r\n        }\r\n    },\r\n    //查看该动物上方是否有需要消除的障碍（比如被冰冻，被草困住）\r\n    FindUP() {\r\n        if (!this.can_move) {\r\n            //不能移动才有可能有障碍\r\n            if (this.animType > 0 && this.animType <= 6) {\r\n                //只有动物上方才有障碍\r\n                if (cc.ZL.iceMgr.UpArray[this.rowNum][this.columnNum] != 0) {\r\n                    cc.ZL.iceMgr.UpArray[this.rowNum][this.columnNum].clear();\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    ClearSelf() {\r\n        //先去除子物体(附加特效什么的)\r\n        let Mchilds = this.node.children;\r\n        for (let i = 0; i < Mchilds.length; i++) {\r\n            Mchilds[i].destroy();\r\n        }\r\n        //查看该格子有没有需要消除的冰块等物体\r\n        if (cc.ZL.iceMgr.iceArray[this.rowNum][this.columnNum] != 0) {\r\n            cc.ZL.iceMgr.iceArray[this.rowNum][this.columnNum].clear();\r\n        }\r\n        //产看周围是否有可以消除的\r\n        setTimeout(() => {\r\n            this.FindAround();\r\n        }, 100);\r\n        //该位置设为空\r\n        this.animalMgr.animalArray[this.rowNum][this.columnNum] = 0;\r\n        let targetnum = this.isTarget();\r\n        if (targetnum == -1) {\r\n            //特效动画\r\n            cc.ZL.effMgr.CreatClearEff(this.node.getPosition());\r\n            cc.ZL.LabelMgr.creatLabel(this.node.getPosition(), 500);\r\n            let fn1 = cc.scaleTo(0.1, 1.2, 1.2);\r\n            let fn2 = cc.scaleTo(comeInfo.animalClearTime, 0, 0);\r\n            let fn3 = cc.sequence([fn1, fn2]);\r\n            this.node.runAction(fn3);\r\n            setTimeout(\r\n                function () {\r\n                    this.animalMgr.animalPool.put(this.node);\r\n                }.bind(this),\r\n                (comeInfo.animalClearTime + 0.1) * 1000\r\n            );\r\n        } else {\r\n            cc.ZL.LabelMgr.creatLabel(this.node.getPosition(), 500);\r\n            cc.ZL.targetMgr.clearTarget(this.node, targetnum);\r\n        }\r\n    },\r\n    deleteMuBiao() {\r\n        let targetnum = this.isTarget();\r\n        if (targetnum != -1) {\r\n            // cc.ZL.LabelMgr.creatLabel(this.node.getPosition(), 500);\r\n            cc.ZL.targetMgr.targetNum(targetnum);\r\n        }\r\n    },\r\n    //产看周围是否有可以消除的\r\n    FindAround() {\r\n        //本身是障碍物就不消除周围了\r\n        if (this.animType > 6) {\r\n            return;\r\n        }\r\n        //上\r\n        if (this.rowNum - 1 >= 0) {\r\n            let anim = this.animalMgr.animalArray[this.rowNum - 1][this.columnNum];\r\n            if (anim != 0 && anim != -1) {\r\n                this.clearObstacle(anim, this.rowNum - 1, this.columnNum, 'FindAround上');\r\n            }\r\n        }\r\n        //下\r\n        if (this.rowNum + 1 < comeInfo.column) {\r\n            let anim = this.animalMgr.animalArray[this.rowNum + 1][this.columnNum];\r\n            if (anim != 0 && anim != -1) {\r\n                this.clearObstacle(anim, this.rowNum + 1, this.columnNum, 'FindAround下');\r\n            }\r\n        }\r\n        //左\r\n        if (this.columnNum - 1 >= 0) {\r\n            let anim = this.animalMgr.animalArray[this.rowNum][this.columnNum - 1];\r\n            if (anim != 0 && anim != -1) {\r\n                this.clearObstacle(anim, this.rowNum, this.columnNum - 1, 'FindAround左');\r\n            }\r\n        }\r\n        //右\r\n        if (this.columnNum + 1 < comeInfo.row) {\r\n            let anim = this.animalMgr.animalArray[this.rowNum][this.columnNum + 1];\r\n            if (anim != 0 && anim != -1) {\r\n                this.clearObstacle(anim, this.rowNum, this.columnNum + 1, 'FindAround右');\r\n            }\r\n        }\r\n    },\r\n    //消除障碍物\r\n    clearObstacle(anim, row, column, name = null) {\r\n        if (anim.animType == 7) {\r\n            //单层冰\r\n            this.animalMgr.animalArray[row][column] = 0;\r\n            cc.ZL.musicMgr.PlayMusicOnly(14, false);\r\n            anim.node.runAction(cc.scaleTo(comeInfo.animalClearTime, 0, 0));\r\n            let animtargetnum = anim.isTarget();\r\n            if (animtargetnum != -1) {\r\n                //查看是否是目标\r\n                // console.log('funcName', name)\r\n                cc.ZL.targetMgr.clearTarget(anim.node, animtargetnum);\r\n            } else {\r\n                setTimeout(\r\n                    function () {\r\n                        this.animalMgr.animalPool.put(anim.node);\r\n                    }.bind(this),\r\n                    comeInfo.animalClearTime * 1000 + 100\r\n                );\r\n            }\r\n        } else if (anim.animType == 8) {\r\n            cc.ZL.musicMgr.PlayMusicOnly(14, false);\r\n            anim.animType = 7;\r\n            anim.node.getComponent(cc.Sprite).spriteFrame = cc.ZL.sprMgr.spr[anim.animType];\r\n        } else if (anim.animType == 9) {\r\n            cc.ZL.musicMgr.PlayMusicOnly(14, false);\r\n            anim.animType = 8;\r\n            anim.node.getComponent(cc.Sprite).spriteFrame = cc.ZL.sprMgr.spr[anim.animType];\r\n        }\r\n    },\r\n\r\n    //查看是不是目标物\r\n    isTarget() {\r\n        //  let lvtarget=lvdata[\"Lv\"+comeInfo.now_lv].target;\r\n        let lvtarget = lvdata.target;\r\n        for (let i = 0; i < lvtarget.length; i++) {\r\n            if (this.animType == lvtarget[i][0]) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    },\r\n    //产生横向消除特效\r\n    creatRowEff(bol) {\r\n        this.clearType = 1;\r\n        cc.ZL.effMgr.dirEff(this.node, 'Row');\r\n        this.playAnim(2);\r\n        if (!bol) {\r\n            return;\r\n        }\r\n        cc.ZL.musicMgr.MyplayMusic(10, false);\r\n    },\r\n    //产生纵向消除特效\r\n    creatColnumEff(bol) {\r\n        this.clearType = 2;\r\n        cc.ZL.effMgr.dirEff(this.node, 'Column');\r\n        this.playAnim(1);\r\n        if (!bol) {\r\n            return;\r\n        }\r\n        //cc.ZL.musicMgr.MyplayMusic(10,false);\r\n    },\r\n    //产生T型特效\r\n    CreatTEff() {\r\n        this.clearType = 3;\r\n        this.playAnim(3);\r\n        cc.ZL.effMgr.TEff(this.node);\r\n    },\r\n    //产生魔力鸟特效\r\n    CreatFiveEff() {\r\n        cc.ZL.effMgr.CratNiao(this.node);\r\n        this.clearType = 4;\r\n        this.animType = 6;\r\n        this.node.getComponent(cc.Sprite).spriteFrame = cc.ZL.sprMgr.spr[this.animType];\r\n    },\r\n\r\n    //播放动画\r\n    playAnim(type) {\r\n        if (type == 1) {\r\n            this.node.getComponent(cc.Sprite).spriteFrame = cc.ZL.sprMgr.Animspr[this.animType];\r\n            this.node.getComponent(cc.Animation).play('zhong');\r\n        } else if (type == 2) {\r\n            this.node.getComponent(cc.Sprite).spriteFrame = cc.ZL.sprMgr.Animspr[this.animType];\r\n            this.node.getComponent(cc.Animation).play('heng');\r\n        } else if (type == 3) {\r\n            this.node.getComponent(cc.Sprite).spriteFrame = cc.ZL.sprMgr.Animspr[this.animType];\r\n            this.node.getComponent(cc.Animation).play('fanwei');\r\n        }\r\n    },\r\n    //停止播放动画\r\n    stopAnim() {\r\n        this.node.getComponent(cc.Animation).stop();\r\n    },\r\n});\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    \r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","const { UIHelp } = require('../UIHelp');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        music: {\r\n            type: cc.AudioClip,\r\n            default: null,\r\n        },\r\n        //文字提示框\r\n        tipLabel: [cc.Label],\r\n        //进度条\r\n        pro_loading: cc.ProgressBar,\r\n\r\n        //骨骼动画\r\n        Logo: cc.Node,\r\n    },\r\n\r\n    onLoad() {\r\n        UIHelp.init();\r\n        if ((cc.ZL = null)) {\r\n            cc.ZL = {};\r\n        }\r\n        //wx.clearStorage();\r\n        // gamedata.GetData();\r\n        cc.audioEngine.play(this.music, true, 0.3);\r\n        this.LogoAnim();\r\n\r\n        // this.LoadingChild();\r\n    },\r\n\r\n    start() {},\r\n    //播放出场动画\r\n    LogoAnim() {\r\n        let anim = this.Logo.getComponent(sp.Skeleton);\r\n        anim.clearTracks();\r\n        anim.addAnimation(0, 'start', false, 0);\r\n        anim.addAnimation(0, 'play', false, 0);\r\n        anim.addAnimation(0, 'end', false, 0);\r\n        anim.setEndListener(\r\n            function (res) {\r\n                if (res.animation.name == 'play') {\r\n                    this.LoadingChild();\r\n                }\r\n            }.bind(this)\r\n        );\r\n    },\r\n    //加载子包\r\n    LoadingChild() {\r\n        let self = this;\r\n        try {\r\n            const data = {\r\n                roomID: '1',\r\n                token: '2',\r\n            };\r\n\r\n            if (data.roomID) {\r\n                gamedata.rid = data.roomID;\r\n            }\r\n            if (data.token) {\r\n                gamedata.token = data.token;\r\n            }\r\n            cc.director.loadScene('newLevel');\r\n            if (!gamedata.rid || !gamedata.token) {\r\n                utils.addTips('参数错误');\r\n                return;\r\n            }\r\n\r\n            // winOcx.getUserData((data) => {\r\n            //     if (data.roomID) {\r\n            //         gamedata.rid = data.roomID;\r\n            //     }\r\n            //     if (data.token) {\r\n            //         gamedata.token = data.token;\r\n            //     }\r\n            //     if (!gamedata.rid || !gamedata.token) {\r\n            //         utils.addTips('参数错误');\r\n            //         return;\r\n            //     }\r\n            // });\r\n        } catch (error) {\r\n            gamedata.rid = utils.getQueryString('rid');\r\n            gamedata.token = utils.getQueryString('token');\r\n            if (!gamedata.rid || !gamedata.token) {\r\n                utils.addTips('参数错误');\r\n                return;\r\n            }\r\n            this.login();\r\n        }\r\n    },\r\n    login() {\r\n        let preas = {\r\n            rid: gamedata.rid,\r\n            token: gamedata.token,\r\n        };\r\n        UIHelp.network.httpSend('game/xiaoxiaole/getGameInfo', preas, this.loginCall.bind(this));\r\n    },\r\n    loginCall(msg) {\r\n        console.log('login==>', msg);\r\n        if (msg.code == 200) {\r\n            gamedata.Lv_star = Number(msg.data.current_level);\r\n            // gamedata.Lv_star = 74;\r\n            gamedata.level_stars = msg.data.level_stars;\r\n            //当前金币数量\r\n            gamedata.gold = Number(msg.data.coin);\r\n            //当前精力\r\n            gamedata.energy = Number(msg.data.energy);\r\n            let preas = {\r\n                rid: gamedata.rid,\r\n                token: gamedata.token,\r\n            };\r\n            UIHelp.network.httpConnect_post_async(\r\n                'game/xiaoxiaole/getMyPropList',\r\n                preas,\r\n                this.getMyPropListCallBack.bind(this)\r\n            );\r\n        } else {\r\n            utils.addTips(msg.message);\r\n        }\r\n    },\r\n\r\n    getMyPropListCallBack(msg) {\r\n        console.log('getmyPrropList====>', msg);\r\n        if (msg.code == 200) {\r\n            if (msg.data.length > 0) {\r\n                for (let a = 0; a < msg.data.length; a++) {\r\n                    if (msg.data[a].gid == 10001) {\r\n                        gamedata.prop[1] = Number(msg.data[a].num);\r\n                    } else if (msg.data[a].gid == 10002) {\r\n                        gamedata.prop[3] = Number(msg.data[a].num);\r\n                    } else if (msg.data[a].gid == 10003) {\r\n                        gamedata.prop[4] = Number(msg.data[a].num);\r\n                    }\r\n                }\r\n            }\r\n            this.preLoading();\r\n        } else {\r\n            utils.addTips(msg.message);\r\n        }\r\n    },\r\n    //预先加载资源\r\n    preLoading() {\r\n        let self = this;\r\n        // self.tipLabel[1].string = \"正在加载资源......\";\r\n        self.is_Loading = true;\r\n        let onProcess = function (completecount, totalcount, item) {\r\n            if (self.is_Loading) {\r\n                let progress = (completecount / totalcount) * 0.5;\r\n                self.tipLabel[0].string = Math.floor(progress * 100) + '%';\r\n                //console.log(progress);\r\n                self.pro_loading.progress = progress;\r\n            }\r\n        };\r\n        let onProcess1 = function (completecount, totalcount, item) {\r\n            if (self.is_Loading) {\r\n                let progress = (completecount / totalcount) * 0.5 + 0.5;\r\n                self.tipLabel[0].string = Math.floor(progress * 100) + '%';\r\n                //console.log(progress);\r\n                self.pro_loading.progress = progress;\r\n            }\r\n        };\r\n        cc.director.preloadScene('newLevel', onProcess, () => {\r\n            cc.director.preloadScene('NewMain', onProcess1, () => {\r\n                self.is_Loading = false;\r\n                setTimeout(\r\n                    function () {\r\n                        cc.director.loadScene('newLevel');\r\n                    }.bind(this),\r\n                    1000\r\n                );\r\n            });\r\n        });\r\n        // cc.loader.loadResDir(\"texture\", onProcess, function (err, assets) {\r\n        //     if (err) {\r\n        //         self.tipLabel[1].string = \"加载资源错误\";\r\n        //     } else {\r\n        //         self.is_Loading = false;\r\n        //         setTimeout(function () {\r\n        //             cc.director.loadScene(\"newLevel\");\r\n        //         }.bind(this), 1000);\r\n        //         // self.tipLabel[1].string = \"加载关卡资源.......\";\r\n        //         // cc.loader.loadResDir('levels', cc.TextAsset, (err, res) => {\r\n        //         //     if (err) {\r\n        //         //         console.log(\"load res error=\" + err);\r\n        //         //     } else {\r\n        //         //         // gamedata.Lv_star = res.length - 1;\r\n        //         //         // console.log('sdafsdfa', gamedata.Lv_star)\r\n        //         //         self.tipLabel[1].string = \"加载资源成功，正在进入游戏\";\r\n        //         //         setTimeout(function () {\r\n        //         //             cc.director.loadScene(\"newLevel\");\r\n        //         //         }.bind(this), 1000);\r\n        //         //     }\r\n        //         // })\r\n\r\n        //     }\r\n        // })\r\n    },\r\n});\r\n","window.comeInfo={\r\n    //是否分享中\r\n    is_share:false,\r\n    timer:6000,\r\n    \r\n    \r\n    \r\n    //总精力大小\r\n    totalenergy:30,\r\n    //道具的价格\r\n    prop_price:[0,100,200,300,400,500,500],\r\n    //总关卡数量\r\n    totallv:500,\r\n    //当前关卡\r\n    now_lv:1,\r\n    //行数量\r\n    row:9,\r\n    //列\r\n    column:9,\r\n\r\n    //动物移动时间\r\n    animalMoveTime:0.05,\r\n    //动物移动完开始消除的间隔时间\r\n    delay_clear:0.2,\r\n    //动物消除动画的时间\r\n    animalClearTime:0.2,\r\n    //毛球移动的时间\r\n    qqmoveTime:0.1,\r\n    //动物的类型\r\n    animalType:{\r\n        none:-1,//空格子\r\n        noOpen:0,//未启用\r\n        yellow:1,//黄鸟\r\n        purple:2,//紫鸟\r\n        blue:3,//蓝鸟\r\n        pink:4,//粉鸟\r\n        white:5,//白鸟\r\n        red:6,//魔力鸟\r\n    },\r\n}","module.exports = {\r\n    shares:\r\n            [\r\n            \"给你几张图，你能猜到我的意思吗？\",\r\n            \"智商150的人才能玩的懂的游戏，你要来挑战自己吗？\",\r\n            \"百因必有果，你的报应就是找我\",\r\n            \"最解压的游戏，还不来放松一下？\",\r\n            \"好友@你并且送了你神秘礼物，点击查看！\",\r\n            ],\r\n    ids:[\r\n            \"IJ8K-FU4Q7GAB5PSmSSp7w\",\r\n            \"VxCAcv-kQKm7XBJAhYV_Pw\",\r\n        ],\r\n    urls:[\r\n            \"https://mmocgame.qpic.cn/wechatgame/2hicsK0eD9ib3RibqpPs4hoPLnNlCdmlPiaq4bn0IJLwQaKVkYNCNFBDSGVz2zvx5HyT/0\",\r\n            \"https://mmocgame.qpic.cn/wechatgame/5VJ9SqQdMn4cPK8EV69iaxjCGHeYz9ne2gMgx4pm8BPtfGr3YXozyB4GcjXMSV5HI/0\",\r\n        ],\r\n    \r\n    //微信分享\r\n        wechatShare() {\r\n            if (CC_WECHATGAME) {\r\n                let idx = Math.floor(Math.random() * this.shares.length);//向下取整\r\n                let str = this.shares[idx];\r\n                wx.shareAppMessage({\r\n                    title: str,\r\n                    imageUrl: wxDownloader.REMOTE_SERVER_ROOT + cc.url.raw('resources/1.png'),\r\n                    success(res) {\r\n                        console.log(\"成功\");\r\n                    },\r\n                    fail(res) {\r\n                        console.log(\"失败\");\r\n                    }\r\n                });\r\n            }\r\n            console.log(\"分享成功\");\r\n        },\r\n    //微信群分享\r\n        wechatGroupShare() {\r\n            var self = this;\r\n            return new Promise((resolve, reject) => {\r\n                if (CC_WECHATGAME) {\r\n                    let flag = false;\r\n                    let idx = Math.floor(Math.random() * self.shares.length);//向下取整\r\n                    let str = self.shares[idx];  \r\n                    wx.shareAppMessage({\r\n                        title: str,\r\n                        imageUrl:canvas.toTempFilePathSync({\r\n                            destWidth: 500,\r\n                            destHeight: 400}),\r\n                        success(res) {\r\n                            if (res.shareTickets != undefined && res.shareTickets.length > 0) {\r\n                                resolve();\r\n                            }\r\n                            \r\n                            console.log(\"成功\");\r\n                        },\r\n                        fail(e) {\r\n                            reject();\r\n                              \r\n                            console.log(\"失败\");\r\n                        },\r\n                        complete() {\r\n                            flag = true;\r\n                        }\r\n                    });\r\n                     \r\n                    if (self.isHightVersion) {\r\n                        setTimeout(function () {\r\n                            if (!flag) {\r\n                                resolve();\r\n                            }\r\n                        }, 2300);\r\n                    }\r\n                } else {\r\n                    resolve();\r\n                }\r\n            })\r\n        },\r\n        WxShare(){\r\n            comeInfo.is_share=true;\r\n            if(CC_WECHATGAME){\r\n                let idx1 = Math.floor(Math.random()*5);//向下取整\r\n                let str = this.shares[idx1];\r\n                let idx = Math.floor(Math.random()*2);//向下取整\r\n                var id = this.ids[idx]; // 通过 MP 系统审核的图片编号\r\n                var url = this.urls[idx]; // 通过 MP 系统审核的图片地址\r\n                wx.shareAppMessage({\r\n                    title:str,\r\n                    imageUrlId:id,\r\n                    imageUrl: url,\r\n                    success(res) {\r\n                        console.log(\"成功\");\r\n                    },\r\n                    fail(res) {\r\n                        console.log(\"失败\");\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //方块预制体\r\n        cubePrefab: cc.Prefab,\r\n        //方块的容器(父物体)\r\n        cubePanel: cc.Node,\r\n        //方块管理器\r\n        cubeArray: null,\r\n\r\n        //指示标识\r\n        Reminder: [cc.Node],\r\n    },\r\n\r\n    onLoad() {\r\n        cc.ZL.cubeMgr = this;\r\n        this.Reminder[0].active = false;\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n    //实例化方块\r\n    InitCube() {\r\n        // let info=lvdata[\"Lv\"+comeInfo.now_lv].Anim;//获取到这一关的信息\r\n        let info = lvdata.Anim;//获取到这一关的信息v\r\n        this.cubeArray = new Array();\r\n        for (let row = 0; row < info.length; row++) {//产生几行\r\n            let rowArray = new Array();\r\n            for (let column = 0; column < info[row].length; column++) {//产生几列\r\n                // if(lvdata[\"Lv\"+comeInfo.now_lv].Anim[row][column]==0){\r\n                if (lvdata.Anim[row][column] == 0) {\r\n                    rowArray.push(-1);\r\n                } else {\r\n                    let cube = cc.instantiate(this.cubePrefab);\r\n                    this.cubePanel.addChild(cube);\r\n                    cube.getComponent(\"cube\").initCube(column, row);\r\n                    rowArray.push(cube);\r\n                }\r\n\r\n            }\r\n            this.cubeArray.push(rowArray);\r\n        }\r\n    },\r\n    //第一关开启提示\r\n    BeginReminder() {\r\n        if (comeInfo.now_lv == 1) {\r\n            this.Reminder[0].active = true;\r\n            this.Reminder[1].active = true;\r\n            this.Reminder[1].getComponent(cc.Animation).play();\r\n            setTimeout(function () {\r\n                if (this.node) {\r\n                    this.Reminder[0].destroy();\r\n                }\r\n            }.bind(this), 3000);\r\n        }\r\n\r\n    }\r\n});\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n     \r\n    },\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n    Move(anim, num){\r\n        if(anim&&anim.node){\r\n            let pos=anim.node.getPosition();\r\n            this.node.runAction(cc.moveTo(0.2,pos.x,pos.y+60));\r\n            setTimeout(function(){\r\n                this.node.destroy();\r\n                // let num=Math.random()*2;\r\n                if(num<1){\r\n                    anim.creatRowEff(false);\r\n                }else{\r\n                    anim.creatColnumEff(false);\r\n                }\r\n            }.bind(this),200);\r\n        }\r\n       \r\n    }\r\n});\r\n","var com = require('Common');\r\nconst { UIHelp } = require('../UIHelp');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        mask: cc.Node,\r\n        lab_num: cc.Node,\r\n    },\r\n\r\n    onLoad() {\r\n        this.num = 0;\r\n    },\r\n\r\n    start() {},\r\n\r\n    // update (dt) {},\r\n    InitView(msg) {\r\n        this.num = Number(msg);\r\n        this.lab_num.getComponent(cc.Label).string = msg;\r\n        this.node.runAction(cc.scaleTo(0.2, 1, 1));\r\n        setTimeout(\r\n            function () {\r\n                if (this.node) {\r\n                    this.mask.opacity = 100;\r\n                }\r\n            }.bind(this),\r\n            300\r\n        );\r\n    },\r\n    //看视频加5步\r\n    AddFive() {\r\n        com.WxShare();\r\n        setTimeout(\r\n            function () {\r\n                if (comeInfo.is_share) {\r\n                    if (this.node) {\r\n                        cc.ZL.animMgr.mask.active = false;\r\n                        cc.ZL.musicMgr.MyplayMusic(0, false);\r\n                        cc.ZL.UIMgr.AddFiveStep();\r\n                        this.mask.opacity = 1;\r\n                        this.node.runAction(cc.scaleTo(0.2, 0, 0));\r\n                        setTimeout(\r\n                            function () {\r\n                                if (this.node) {\r\n                                    this.node.destroy();\r\n                                }\r\n                            }.bind(this),\r\n                            300\r\n                        );\r\n                        comeInfo.is_share = false;\r\n                    }\r\n                }\r\n            }.bind(this),\r\n            3500\r\n        );\r\n    },\r\n    //金币加2步\r\n    AddTwo() {\r\n        if (gamedata.gold > 20) {\r\n            if (this.node) {\r\n                let preas = {\r\n                    rid: gamedata.rid,\r\n                    token: gamedata.token,\r\n                    gid: 10004,\r\n                    num: 1,\r\n                };\r\n                console.log('金币加两步');\r\n                // TODO:先注释掉\r\n                this.consumePropCallBack({\r\n                    code: '200',\r\n                });\r\n                // UIHelp.network.httpConnect_post_async(\r\n                //     'game/xiaoxiaole/consumeProp',\r\n                //     preas,\r\n                //     this.consumePropCallBack.bind(this)\r\n                // );\r\n\r\n                //     cc.ZL.animMgr.mask.active=false;\r\n                //     gamedata.gold-=20;\r\n                //     gamedata.bc_gold();\r\n                //     cc.ZL.musicMgr.MyplayMusic(0,false);\r\n                //     cc.ZL.UIMgr.AddTwoStep();\r\n                //     this.mask.opacity=1;\r\n                //     this.node.runAction(cc.scaleTo(0.2,0,0));\r\n                //     setTimeout(function(){\r\n                //         if(this.node){\r\n                //             this.node.destroy();\r\n                //         }\r\n                //     }.bind(this),300);\r\n            }\r\n        }\r\n    },\r\n\r\n    consumePropCallBack(msg) {\r\n        console.log('金币加两部===>', msg);\r\n        if (msg.code == 200) {\r\n            cc.ZL.animMgr.mask.active = false;\r\n            gamedata.gold -= this.num;\r\n            gamedata.bc_gold();\r\n            cc.ZL.musicMgr.MyplayMusic(0, false);\r\n            cc.ZL.UIMgr.AddTwoStep();\r\n            this.mask.opacity = 1;\r\n            this.node.runAction(cc.scaleTo(0.2, 0, 0));\r\n            setTimeout(\r\n                function () {\r\n                    if (this.node) {\r\n                        this.node.destroy();\r\n                    }\r\n                }.bind(this),\r\n                300\r\n            );\r\n        } else {\r\n            utils.addTips(msg.message);\r\n        }\r\n    },\r\n\r\n    //重玩本关\r\n    Replay(event) {\r\n        this.node.getChildByName('again').getComponent(cc.Button).interactable = false;\r\n        if (gamedata.energy >= 5) {\r\n            let preas = {\r\n                rid: gamedata.rid,\r\n                token: gamedata.token,\r\n                level: lvdata.lvl,\r\n            };\r\n            UIHelp.network.httpSend('game/xiaoxiaole/playGame', preas, this.playGameCall.bind(this));\r\n        } else {\r\n            utils.addTips('体力不足');\r\n            cc.director.loadScene('newLevel');\r\n        }\r\n\r\n        // cc.ZL.musicMgr.MyplayMusic(0, false);\r\n        // if (gamedata.energy >= 5) {\r\n        //     gamedata.energy -= 5;\r\n        //     gamedata.bc_energy();\r\n        //     cc.director.loadScene(\"NewMain\");\r\n        // } else {\r\n        //     cc.director.loadScene(\"newLevel\");\r\n        //     // utils.addTips('体力不足');\r\n        // }\r\n    },\r\n    playGameCall(msg) {\r\n        console.log('playgame===>', msg);\r\n        if (msg.code == 200) {\r\n            gamedata.game_code = msg.data.game_code;\r\n            //当前金币数量\r\n            gamedata.gold = Number(msg.data.coin);\r\n            //当前精力\r\n            gamedata.energy = Number(msg.data.energy);\r\n            cc.ZL.musicMgr.MyplayMusic(0, false);\r\n            cc.director.loadScene('NewMain');\r\n        } else {\r\n            utils.addTips(msg.message);\r\n            this.node.getChildByName('again').getComponent(cc.Button).interactable = true;\r\n        }\r\n    },\r\n    Close() {\r\n        this.node.getChildByName('again').getComponent(cc.Button).interactable = false;\r\n        cc.ZL.musicMgr.MyplayMusic(0, false);\r\n        cc.director.loadScene('newLevel');\r\n    },\r\n});\r\n","// 偷懒，直接用EventTarget\nexport default new cc.EventTarget();","var com=require('./Advert');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        fxtip:cc.Node,\r\n    },\r\n    onLoad () {\r\n       \r\n        this.FXListen();\r\n        this.fxtip.active=false;\r\n        this.fxtip.zIndex=99;\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        if(comeInfo.timer<3000){\r\n            this.fxtip.active=true;\r\n            comeInfo.timer=6000;\r\n            comeInfo.is_share=false;\r\n        }\r\n    },\r\n    //分享监听\r\n    FXListen(){\r\n        if(cc.sys.platform==cc.sys.WECHAT_GAME){\r\n            wx.onShow(function(){\r\n                if(comeInfo.is_share){\r\n                  if(this.oldtime){\r\n                     this.newtime=Date.now();\r\n                     comeInfo.timer=this.newtime-this.oldtime;\r\n                    //this.SHow();\r\n                    console.log(\"展示界面:\"+comeInfo.timer);\r\n                 }\r\n                }\r\n            }.bind(this));\r\n            wx.onHide(function(){\r\n                if(comeInfo.is_share){\r\n                     this.oldtime=Date.now();\r\n                }\r\n                console.log(\"收回界面\");\r\n            }.bind(this));\r\n        }\r\n    },\r\n    //关闭面板\r\n    close(){\r\n        this.fxtip.active=false;\r\n    },\r\n    //重新分享\r\n    shareAgain(){\r\n        this.fxtip.active=false;\r\n        com.WxShare();\r\n    }\r\n});\r\n","window.gamedata={\r\n    //道具数量  无作用，小木槌，爆弹，交换位置，横向消，纵向消,加5步\r\n    prop:[0,0,0,0,0,0,0],\r\n    //已通关的关卡星星数量\r\n    //Lv_star:[0,1,2,2,2,1,2,3,2,3,3,2,2,3,2,3,1,2,3,2,3,3,3,2,2,3,1,1,2,2,1,1,3,2,3,2,3,3],\r\n    Lv_star:0,\r\n    level_stars:[],\r\n    //是否在使用道具0没有使用道具1小木槌，2魔法棒，3交换位置，4横向，5纵向\r\n    is_prop:0,\r\n    //当前金币数量\r\n    gold:500,\r\n    //当前钻石数量\r\n    diamond:10,\r\n    //当前精力\r\n    energy:30,\r\n    //最后登陆的时间\r\n    timer:0,\r\n    //音量\r\n    bg_music:true,\r\n    //音效\r\n    music:true,\r\n    rid:0,\r\n    token: null,\r\n    game_code: null,\r\n    GetData(){\r\n        if(cc.sys.platform==cc.sys.WECHAT_GAME){\r\n            let g=wx.getStorageSync('gold');\r\n            if(g){\r\n                this.gold=g;\r\n            }else{\r\n                this.bc_gold();\r\n            }\r\n            let d=wx.getStorageSync('diamond');\r\n            if(d){\r\n                this.diamond=d;\r\n            }else{\r\n                this.bc_diamond();\r\n            }\r\n            let e=wx.getStorageSync('energy');\r\n            if(e){\r\n                this.energy=e;\r\n            }else{\r\n                this.bc_energy();\r\n            }  \r\n            let t=wx.getStorageSync('timer');\r\n            if(t){\r\n                this.timer=t;\r\n            }else{\r\n                this.timer=Date.now();\r\n                this.bc_timer();\r\n            }    \r\n            let bg=wx.getStorageSync('bg');\r\n            if(bg){\r\n                this.bg_music=bg;\r\n            }else{\r\n                this.bc_music();\r\n            }    \r\n            let m=wx.getStorageSync('music');\r\n            if(m){\r\n                this.music=m;\r\n            }else{\r\n                this.bc_music();\r\n            }  \r\n            let s=wx.getStorageSync('star');\r\n            if(s){\r\n                this.Lv_star=s;\r\n                //console.log(this.Lv_star);\r\n            }else{\r\n                this.bc_Star();\r\n            }    \r\n            \r\n            // let p1=wx.getStorageSync('prop1');\r\n            // if(p1){\r\n            //     this.prop[0]=p1;\r\n            // }else{\r\n            //     this.bc_prop();\r\n            // }  \r\n            // let p2=wx.getStorageSync('prop2');\r\n            // console.log(p2);\r\n            // if(p2){\r\n            //     this.prop[1]=p2;\r\n            // } \r\n            // let p3=wx.getStorageSync('prop3');\r\n            // console.log(p3);\r\n            // if(p3){\r\n            //     this.prop[2]=p3;\r\n            // }   \r\n            \r\n            // let p4=wx.getStorageSync('prop4');\r\n            // console.log(p4);\r\n            // if(p4){\r\n            //     this.prop[3]=p4;\r\n            // }  \r\n            \r\n            // let p5=wx.getStorageSync('prop5');\r\n            // console.log(p5);\r\n            // if(p5){\r\n            //     this.prop[4]=p5;\r\n            // }  \r\n            // let p6=wx.getStorageSync('prop6');\r\n            // console.log(p6);\r\n            // if(p6){\r\n            //     this.prop[5]=p6;\r\n            // }  \r\n            // let p7=wx.getStorageSync('prop7');\r\n            // console.log(p7);\r\n            // if(p7){\r\n            //     this.prop[6]=p7;\r\n            // } \r\n            // console.log(this.prop);\r\n        }\r\n    },\r\n    //保存金币数量\r\n    bc_gold(){\r\n        if(cc.sys.platform===cc.sys.WECHAT_GAME){\r\n            wx.setStorageSync('gold',this.gold);\r\n        }\r\n    },\r\n    //保存钻石数量\r\n    bc_diamond(){\r\n        if(cc.sys.platform===cc.sys.WECHAT_GAME){\r\n            wx.setStorageSync('diamond',this.diamond);\r\n        }\r\n    },\r\n    //保存精力\r\n    bc_energy(){\r\n        if(cc.sys.platform===cc.sys.WECHAT_GAME){\r\n            wx.setStorageSync('energy',this.energy);\r\n        }\r\n    },\r\n    //保存时间\r\n    bc_timer(){\r\n        if(cc.sys.platform===cc.sys.WECHAT_GAME){\r\n            wx.setStorageSync('timer',this.timer);\r\n        }\r\n    },\r\n    //保存道具数量\r\n    bc_prop(num){\r\n        // if(cc.sys.platform===cc.sys.WECHAT_GAME){\r\n        //     if(num==1){\r\n            \r\n        //         wx.setStorageSync('prop2',this.prop[1]);\r\n        //     }else if(num==2){\r\n        //         wx.setStorageSync('prop3',this.prop[2]);\r\n        //     }else if(num==3){\r\n        //         wx.setStorageSync('prop4',this.prop[3]);\r\n        //     }else if(num==4){\r\n        //         wx.setStorageSync('prop5',this.prop[4]);\r\n        //     }else if(num==5){\r\n        //         wx.setStorageSync('prop6',this.prop[5]);\r\n        //     }else if(num==6){\r\n        //         wx.setStorageSync('prop7',this.prop[6]);\r\n        //     }\r\n        //     console.log(\"保存道具数量:\"+num);\r\n        //     console.log(this.prop);\r\n        // }\r\n    },\r\n    //保存音效\r\n    bc_music(){\r\n        if(cc.sys.platform===cc.sys.WECHAT_GAME){\r\n            wx.setStorageSync('bg',this.bg_music);\r\n        }\r\n        if(cc.sys.platform===cc.sys.WECHAT_GAME){\r\n            wx.setStorageSync('music',this.music);\r\n        }\r\n    },\r\n    //保存星星数组\r\n    bc_Star(){\r\n        //console.log(\"保存星星\");\r\n        //console.log(this.Lv_star);\r\n        if(cc.sys.platform===cc.sys.WECHAT_GAME){\r\n          wx.setStorageSync('star',this.Lv_star);\r\n        }\r\n    },\r\n}","const { UIHelp } = require(\"../UIHelp\");\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //音效按钮\r\n        musicButton:[cc.Sprite],\r\n        //音效按钮纹理\r\n        spr:[cc.SpriteFrame],\r\n        music:{\r\n            type:cc.AudioClip,\r\n            default:[],\r\n        }\r\n\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.ShowButton();\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n    //显示正确的按钮\r\n    ShowButton(){\r\n        if(gamedata.bg_music){\r\n            this.musicButton[0].spriteFrame=this.spr[0];\r\n        }else{\r\n            this.musicButton[0].spriteFrame=this.spr[1];\r\n        }\r\n        if(gamedata.music){\r\n            this.musicButton[1].spriteFrame=this.spr[2];\r\n        }else{\r\n            this.musicButton[1].spriteFrame=this.spr[3];\r\n        }\r\n    },\r\n    Open(){\r\n        if(gamedata.music){\r\n            cc.audioEngine.play(this.music[0],false,1);\r\n            cc.audioEngine.play(this.music[1],false,1);\r\n        }\r\n        if(cc.ZL.Level){\r\n            cc.ZL.Level.OpenMask();\r\n        }\r\n        this.node.y=2000;\r\n        this.node.runAction(cc.moveTo(0.2,0,0).easing(cc.easeBackOut()));\r\n    },\r\n    Close(){\r\n        cc.director.emit('closeHome')\r\n        if(gamedata.music){\r\n            cc.audioEngine.play(this.music[0],false,1);\r\n            cc.audioEngine.play(this.music[1],false,1);\r\n        }\r\n        if(cc.ZL.Level){\r\n            cc.ZL.Level.closeMask();\r\n        }\r\n        this.node.runAction(cc.moveTo(0.2,0,2000));\r\n    },\r\n    BjmusicDoor(){\r\n        if(gamedata.music){\r\n            cc.audioEngine.play(this.music[0],false,1);\r\n        }\r\n        gamedata.bg_music=!gamedata.bg_music;\r\n        this.ShowButton();\r\n        if(gamedata.bg_music){\r\n            cc.audioEngine.play(this.music[2],true,0.5);\r\n        }else{\r\n            cc.audioEngine.stopAll();\r\n        }\r\n        gamedata.bc_music();\r\n    },\r\n    musicDoor(){\r\n        if(gamedata.music){\r\n            cc.audioEngine.play(this.music[0],false,1);\r\n        }\r\n        gamedata.music=!gamedata.music;\r\n        this.ShowButton();\r\n        gamedata.bc_music();\r\n    },\r\n    //重新开启本官\r\n    Again(){\r\n        if(gamedata.music){\r\n            cc.audioEngine.play(this.music[0],false,1);\r\n        }\r\n        if(gamedata.energy>5){\r\n            // gamedata.energy -=5;\r\n            // gamedata.bc_energy();\r\n            // cc.director.loadScene(\"NewMain\");\r\n            let preas = {\r\n                rid: gamedata.rid,\r\n                token: gamedata.token,\r\n                level: lvdata.lvl\r\n            }\r\n            UIHelp.network.httpSend('game/xiaoxiaole/playGame', preas, this.playGameCall.bind(this));\r\n        }else{\r\n            utils.addTips('体力不足');\r\n        }\r\n\r\n    },\r\n    playGameCall(msg) {\r\n        console.log('playgame===>', msg);\r\n        if (msg.code == 200) {\r\n            // gamedata.energy -=5;\r\n            // gamedata.bc_energy();\r\n            //当前金币数量\r\n            gamedata.gold = Number(msg.data.coin);\r\n            //当前精力\r\n            gamedata.energy = Number(msg.data.energy);\r\n            cc.director.loadScene(\"NewMain\");\r\n        } else {\r\n            utils.addTips(msg.message);\r\n        }\r\n    },\r\n    //返回主页面\r\n    GoLevel(){\r\n        window.utils.ShowLoading();\r\n        // \butils.ShowLoading();\r\n        if(gamedata.music){\r\n            cc.audioEngine.play(this.music[0],false,1);\r\n        }\r\n        cc.director.loadScene(\"newLevel\");\r\n    },\r\n    //返回开始页面\r\n    GoBegin(){\r\n        if(gamedata.music){\r\n            cc.audioEngine.play(this.music[0],false,1);\r\n        }\r\n        cc.director.loadScene(\"Begin\");\r\n    }\r\n\r\n});\r\n","const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport class Http {\n    public static get(url, callback, thisObj) {\n        var xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = function () {\n            // if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\n            //     var response = xhr.responseText;\n            //     // console.log(response);\n            // }\n            // callback.call(thisObj,\"COMPLETE\",xhr)\n        };\n        xhr.onerror = function () {\n            callback.call(thisObj, \"ERROR\", xhr)\n        }\n\n        xhr.onprogress = function () {\n            callback.call(thisObj, \"PROGRESS\", xhr)\n        }\n\n        xhr.onloadend = function () {\n            callback.call(thisObj, \"COMPLETE\", xhr)\n        }\n\n        xhr.ontimeout = function () {\n            callback.call(thisObj, \"TIMEOUT\", xhr)\n        }\n\n\n        xhr.open(\"GET\", url, true);\n        xhr.send();\n    }\n    public static catobj(obj: any) {\n        var a = []\n        for (var k in obj) {\n            let v = obj[k]\n            let s = \"\" + k + \"=\" + v\n            a.push(s)\n        }\n\n        return a.join(\"&\")\n    }\n\n    public static post(url, params, callback, thisObj) {\n        var xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = function () {\n            // if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\n            //     var response = xhr.responseText;\n            //     // console.log(response);\n            // }\n            // callback.call(thisObj,\"COMPLETE\",xhr)\n        };\n        xhr.onerror = function () {\n            callback.call(thisObj, \"ERROR\", xhr)\n        }\n\n        xhr.onprogress = function () {\n            callback.call(thisObj, \"PROGRESS\", xhr)\n        }\n\n        xhr.onloadend = function () {\n            callback.call(thisObj, \"COMPLETE\", xhr)\n        }\n\n        xhr.ontimeout = function () {\n            callback.call(thisObj, \"TIMEOUT\", xhr)\n        }\n\n        xhr.open(\"POST\", url, true);\n        xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        var s = Http.catobj(params)\n        xhr.send(s);\n    }\n}","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        labelPrefab:cc.Prefab,\r\n    },\r\n\r\n    onLoad () {\r\n        this.LabelPools=new cc.NodePool();\r\n        for(let i=0;i<5;i++){\r\n            let a=cc.instantiate(this.labelPrefab);\r\n            this.LabelPools.put(a);\r\n        }\r\n        cc.ZL.LabelMgr=this;\r\n    },\r\n\r\n    start () {\r\n        \r\n    },\r\n\r\n    // update (dt) {},\r\n    creatLabel(pos,num){\r\n        let a;\r\n        if(this.LabelPools.size()>0){\r\n            a=this.LabelPools.get();\r\n        }else{\r\n            a=cc.instantiate(this.labelPrefab);\r\n        }\r\n        this.node.addChild(a);\r\n        a.setPosition(pos.x,pos.y+40);\r\n        a.getComponent(\"Label\").Init(num);\r\n    }\r\n});\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n      \r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n    Init(num){\r\n        this.node.stopAllActions();\r\n        this.node.opacity=255;\r\n        this.node.getComponent(cc.Label).string=num;\r\n        this.node.runAction(cc.sequence(cc.moveBy(0.5,0,50),cc.fadeOut(1)));\r\n        setTimeout(function(){    \r\n            if(cc.ZL.LabelMgr.LabelPools){\r\n                cc.ZL.LabelMgr.LabelPools.put(this.node);\r\n            }\r\n        }.bind(this),1000);\r\n    }\r\n});\r\n","var com=require('Common');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n            //精力条\r\n            energyprogress:cc.ProgressBar,\r\n            energyLabel:cc.Label,\r\n            //金币框\r\n            goldLabel:cc.Label,\r\n            //星星框\r\n            //starLabel:cc.Label,\r\n\r\n            //遮罩\r\n            mask:cc.Node,\r\n            //商店预制体\r\n            shopPrefab:cc.Prefab,\r\n            shop:null,\r\n            rank: cc.Prefab,\r\n    },\r\n\r\n    onLoad () {\r\n        if(cc.ZL==null){\r\n            cc.ZL={};\r\n        }\r\n        cc.ZL.Level=this;\r\n        if(gamedata.bg_music){\r\n            cc.audioEngine.resumeAll();\r\n        }\r\n    },\r\n\r\n    start () {\r\n        // this.closeMask();\r\n        //查看可以回复多少体力\r\n        // let num=Date.now();\r\n        // if(gamedata.energy<30){\r\n        //     //查看回复体力的时间差(5分钟回复一体力)\r\n        //     //console.log(num-gamedata.timer);\r\n        //     let scend=Math.floor((num-gamedata.timer)/100000);\r\n        //     //console.log(scend);\r\n        //     if(scend>1){\r\n        //         gamedata.energy +=scend;\r\n        //         if(gamedata.energy>30){\r\n        //             gamedata.energy=30;\r\n        //         }\r\n        //         gamedata.timer=Date.now();\r\n        //         gamedata.bc_energy();\r\n        //         gamedata.bc_timer();\r\n        //     }\r\n           \r\n        // }else{\r\n        //     gamedata.timer=Date.now();\r\n        //     gamedata.bc_energy();\r\n        //     gamedata.bc_timer(); \r\n        // }\r\n        // console.log('123123123123', gamedata.energy)\r\n        this.energyLabel.string=gamedata.energy;\r\n        this.energyprogress.progress=gamedata.energy/30;\r\n    },\r\n\r\n    update (dt) {\r\n        this.goldLabel.string=gamedata.gold;\r\n        this.energyLabel.string=gamedata.energy;\r\n        this.energyprogress.progress=gamedata.energy/30;\r\n        \r\n    },\r\n    //打开商店\r\n    openShop(){\r\n        if(this.shop==null){\r\n            this.shop=cc.instantiate(this.shopPrefab);\r\n            this.node.addChild(this.shop);\r\n            this.shop.setPosition(0,2000);\r\n        }\r\n        this.shop.getComponent(\"Shop\").Open();\r\n        this.OpenMask();\r\n    },\r\n    //打开遮罩\r\n    OpenMask(){\r\n        this.mask.active=true;\r\n        // this.mask.runAction(cc.fadeTo(0.2,200));\r\n    },\r\n    //关闭遮罩\r\n    closeMask(){\r\n        console.log('closeMask')\r\n        this.mask.active=false;\r\n        // this.mask.opacity=0;\r\n    },\r\n    onDestroy(){\r\n        cc.ZL.Level=null;\r\n    },\r\n\r\n    share(){\r\n        com.WxShare();\r\n    },\r\n\r\n    onOpenRank() {\r\n        let node =cc.instantiate(this.rank);\r\n        this.node.addChild(node);\r\n        this.OpenMask();\r\n    }\r\n});\r\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Loding extends cc.Component {\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n    @property(cc.Node)\n    img: cc.Node = null;\n\n    start () {\n\n    }\n\n    update (dt) {\n        if(this.node.active){\n            this.img.angle -= 5;\n        }\n    }\n\n    onDisable() {\n        this.img.angle = 0;\n    }\n\n}\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        lv: 0, //第几关\r\n        lvLabel: cc.Label,\r\n    },\r\n    // onLoad () {},\r\n    start() {},\r\n    // update (dt) {},\r\n    InitView(lv) {\r\n        this.lv = lv;\r\n        this.lvLabel.string = this.lv;\r\n        // console.log(gamedata, 'gamedata');\r\n        if (this.lv <= gamedata.Lv_star) {\r\n            //说明已经通关这一关\r\n            //获取到星星数量\r\n            //let starnum=gamedata.Lv_star[this.lv];\r\n            if (!gamedata.level_stars[this.lv - 1]) {\r\n                this.node.getComponent(cc.Sprite).spriteFrame = cc.ZL.lvMgr.lvSpr[5];\r\n            } else {\r\n                this.node.getComponent(cc.Sprite).spriteFrame =\r\n                    cc.ZL.lvMgr.lvSpr[gamedata.level_stars[this.lv - 1] + 1];\r\n            }\r\n        } else if (this.lv == gamedata.Lv_star + 1) {\r\n            //可以玩的一关\r\n            this.node.getComponent(cc.Sprite).spriteFrame = cc.ZL.lvMgr.lvSpr[1];\r\n        } else {\r\n            //未通关的\r\n            // this.node.getComponent(cc.Button).interactable=false;\r\n            this.node.getComponent(cc.Sprite).spriteFrame = cc.ZL.lvMgr.lvSpr[0];\r\n        }\r\n        // if(lv>comeInfo.totallv){\r\n        //     this.node.getComponent(cc.Button).interactable=false;\r\n        // }\r\n    },\r\n\r\n    //监听点击按钮\r\n    Bnt() {\r\n        console.log('Btn111');\r\n        if (this.lv <= gamedata.Lv_star + 1) {\r\n            cc.ZL.Level.mask.active = true;\r\n            cc.loader.loadRes('levels/' + this.lv, (err, res) => {\r\n                cc.ZL.Level.mask.active = false;\r\n                if (err) {\r\n                    console.log('load res error=' + err);\r\n                } else {\r\n                    // console.log(lvdata['Lv1'])\r\n                    lvdata = JSON.parse(res.text);\r\n                    lvdata['lvl'] = this.lv;\r\n                    // console.log('=====>',lvdatacc)\r\n                    cc.ZL.Target.InitView(this.lv);\r\n                    console.log(this.lv, 'this.lv');\r\n                }\r\n            });\r\n        } else {\r\n            utils.addTips('不可以越级游戏');\r\n        }\r\n    },\r\n});\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //星星纹理\r\n        starSpr:[cc.SpriteFrame],\r\n        //关卡背景\r\n        lvSpr:[cc.SpriteFrame],\r\n        //第一节树\r\n        tree:cc.Node,\r\n        //关卡预制体\r\n        TreePrefab:cc.Prefab,\r\n        //当前生成了几关\r\n        nowLv:1,\r\n\r\n\r\n        //云彩（结尾过度用）\r\n        cloud:cc.Prefab,\r\n    },\r\n\r\n    onLoad () {\r\n        if(cc.ZL==null){\r\n            cc.ZL={};\r\n        }\r\n        cc.ZL.lvMgr=this;\r\n        //初始化第一课树的数据\r\n        this.tree.getComponent(\"Tree\").InitView(this.nowLv);\r\n        this.nowLv =17;\r\n    },\r\n\r\n    start () {\r\n        this.CreatLv();\r\n    },\r\n\r\n\r\n    // update (dt) {},\r\n    //生成关卡\r\n    CreatLv(){\r\n        while(true){\r\n            if(this.nowLv>comeInfo.totallv){\r\n                break;\r\n            }\r\n            this.creatNewTree();\r\n        }\r\n        let y=cc.instantiate(this.cloud);\r\n        this.node.addChild(y);\r\n        //查看玩了多少关\r\n        let num=Math.floor(gamedata.Lv_star/3);\r\n        this.node.y=-(num*180-300);\r\n    },\r\n    //生成一个新树\r\n    creatNewTree(){\r\n        let t=cc.instantiate(this.TreePrefab);\r\n        this.node.addChild(t);\r\n        t.getComponent(\"Tree\").InitView(this.nowLv);\r\n        this.nowLv =this.nowLv+15;\r\n    },\r\n});\r\n","const { UIHelp } = require('../UIHelp');\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        //关卡显示框\r\n        lvLabel: cc.Label,\r\n        //要玩第几关关\r\n        lv: 1,\r\n        //目标\r\n        target: [cc.Sprite],\r\n        //精力图标\r\n        energy: cc.Node,\r\n        energylogo: cc.Node,\r\n        //tip\r\n        tip: cc.Prefab,\r\n        music: {\r\n            type: cc.AudioClip,\r\n            default: [],\r\n        },\r\n    },\r\n    onLoad() {\r\n        cc.ZL.Target = this;\r\n        this.energylogo.opacity = 0;\r\n    },\r\n\r\n    start() {},\r\n\r\n    // update (dt) {},\r\n    InitView(num) {\r\n        if (gamedata.music) {\r\n            cc.audioEngine.play(this.music[0], false, 1);\r\n        }\r\n        (this.lv = num), (comeInfo.now_lv = num);\r\n        cc.ZL.Level.OpenMask();\r\n        this.lvLabel.string = '第' + this.lv + '关';\r\n        // let T=lvdata[\"Lv\"+comeInfo.now_lv].target;\r\n        let T = lvdata.target;\r\n        for (let i = 0; i < this.target.length; i++) {\r\n            if (i < T.length) {\r\n                if (T[i][0] < 10) {\r\n                    this.target[i].spriteFrame = cc.ZL.sprMgr.spr[T[i][0]];\r\n                } else {\r\n                    this.target[i].spriteFrame = cc.ZL.sprMgr.icespr[T[i][0] - 10];\r\n                }\r\n                this.target[i].node.active = true;\r\n            } else {\r\n                this.target[i].node.active = false;\r\n            }\r\n        }\r\n        let y = cc.find('Canvas').height / 2 - this.node.height / 2;\r\n        this.node.runAction(cc.moveTo(0.2, cc.v2(0, y), 0).easing(cc.easeBackOut()));\r\n    },\r\n    close() {\r\n        if (gamedata.music) {\r\n            cc.audioEngine.play(this.music[0], false, 1);\r\n        }\r\n        cc.ZL.Level.closeMask();\r\n        this.energylogo.opacity = 0;\r\n        this.node.runAction(cc.moveTo(0.2, 0, 2000));\r\n    },\r\n    //开始游戏\r\n    BeginGame() {\r\n        console.log('BeginGame');\r\n        if (gamedata.energy < 5) {\r\n            let a = cc.instantiate(this.tip);\r\n            this.node.parent.addChild(a);\r\n            a.getComponent('tip').InitView(2);\r\n            return;\r\n        }\r\n        if (gamedata.music) {\r\n            cc.audioEngine.play(this.music[1], false, 1);\r\n        }\r\n\r\n        let preas = {\r\n            rid: gamedata.rid,\r\n            token: gamedata.token,\r\n            level: this.lv,\r\n        };\r\n\r\n        // TODO:先注释\r\n        this.playGameCall({\r\n            code: '200',\r\n            data: {\r\n                coin: '10',\r\n                energy: '10',\r\n            },\r\n        });\r\n        // UIHelp.network.httpSend('game/xiaoxiaole/playGame', preas, this.playGameCall.bind(this));\r\n\r\n        // gamedata.energy -=5;\r\n        // gamedata.bc_energy();\r\n        // //获取到精力图标的位置\r\n        // var pos=this.energy.parent.convertToWorldSpaceAR(this.energy.getPosition());\r\n        // //转换到父物体的位置\r\n        // var pos1=this.energylogo.parent.convertToNodeSpaceAR(pos);\r\n        // this.energylogo.setPosition(pos1);\r\n        // this.energylogo.opacity=255;\r\n        // this.energylogo.runAction(cc.moveTo(0.5,27,-358));\r\n        // setTimeout(function(){\r\n        //     if(gamedata.music){\r\n        //         cc.audioEngine.play(this.music[2],false,1);\r\n        //     }\r\n        //     //cc.ZL.lvMgr.MyplayMusic(2,false);\r\n        //     cc.director.loadScene(\"NewMain\");\r\n        // }.bind(this),600);\r\n    },\r\n\r\n    playGameCall(msg) {\r\n        console.log('playgame===>', msg);\r\n        if (msg.code == 200) {\r\n            gamedata.game_code = msg.data.game_code;\r\n            // gamedata.energy -= 5;\r\n            // gamedata.bc_energy();\r\n            //当前金币数量\r\n            gamedata.gold = Number(msg.data.coin);\r\n            //当前精力\r\n            gamedata.energy = Number(msg.data.energy);\r\n            //获取到精力图标的位置\r\n            var pos = this.energy.parent.convertToWorldSpaceAR(this.energy.getPosition());\r\n            //转换到父物体的位置\r\n            var pos1 = this.energylogo.parent.convertToNodeSpaceAR(pos);\r\n            this.energylogo.setPosition(pos1);\r\n            this.energylogo.opacity = 255;\r\n            this.energylogo.runAction(cc.moveTo(0.5, 27, -358));\r\n            setTimeout(\r\n                function () {\r\n                    if (gamedata.music) {\r\n                        cc.audioEngine.play(this.music[2], false, 1);\r\n                    }\r\n                    //cc.ZL.lvMgr.MyplayMusic(2,false);\r\n                    cc.director.loadScene('NewMain');\r\n                }.bind(this),\r\n                600\r\n            );\r\n        } else {\r\n            utils.addTips(msg.message);\r\n        }\r\n    },\r\n});\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        music: {\r\n            type: cc.AudioClip,\r\n            default: [],\r\n        },\r\n\r\n        //设置面板\r\n        setting: null,\r\n        setPrefab: cc.Prefab,\r\n\r\n        zanting: cc.Node,\r\n        kaishi: cc.Node\r\n    },\r\n\r\n    onLoad() {\r\n        if (cc.ZL == null) {\r\n            cc.ZL = {}\r\n        }\r\n        cc.ZL.musicMgr = this;\r\n        this.ismusic = false;\r\n        cc.director.on('closeHome', this.onCloseNode, this);\r\n    },\r\n    onCloseNode() {\r\n        this.zanting.active = true;\r\n        this.kaishi.active = false;\r\n        cc.ZL.animMgr.onCloseMask();\r\n    },\r\n\r\n    start() {\r\n        cc.ZL.cubeMgr.InitCube();\r\n        cc.ZL.animMgr.InitAnimal();\r\n        cc.ZL.iceMgr.InitIce();\r\n        cc.ZL.iceMgr.InitUPAnim();\r\n    },\r\n\r\n    // update (dt) {},\r\n    MyplayMusic(num, isBool) {\r\n        if (gamedata.music) {\r\n            cc.audioEngine.play(this.music[num], isBool, 0.5);\r\n        }\r\n    },\r\n    //打开设置面板\r\n    OpenSetting() {\r\n        cc.ZL.animMgr.onOpenMask();\r\n        this.zanting.active = false;\r\n        this.kaishi.active = true;\r\n        if (this.setting == null) {\r\n            this.setting = cc.instantiate(this.setPrefab);\r\n            this.node.addChild(this.setting);\r\n        }\r\n        this.setting.getComponent(\"HomeSettign\").Open();\r\n    },\r\n    //播放碎冰音效（限制只播放一次）\r\n    PlayMusicOnly(num, isBool) {\r\n        if (this.ismusic) {\r\n            return;\r\n        }\r\n        this.ismusic = true;\r\n        if (gamedata.music) {\r\n            cc.audioEngine.play(this.music[num], isBool, 0.5);\r\n        }\r\n        setTimeout(function () {\r\n            this.ismusic = false;\r\n        }.bind(this), 200);\r\n    },\r\n    ReturnLevel() {\r\n        cc.director.loadScene(\"newLevel\");\r\n    },\r\n    onDisable() {\r\n        cc.director.off('closeHome', this.onCloseNode, this);\r\n    }\r\n});\r\n","\n\nimport { Http } from \"./Http\";\n\n\nexport class Network {\n    private _httpurl: string = 'https://www.9xiu.com';\n\n    public inConnecting = false;\n\n    private Utf8ArrayToStr(array) {\n        var out, i, len, c;\n        var char2, char3;\n\n        out = \"\";\n        len = array.length;\n        i = 0;\n        while (i < len) {\n            c = array[i++];\n            switch (c >> 4) {\n                case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\n                    // 0xxxxxxx\n                    out += String.fromCharCode(c);\n                    break;\n                case 12: case 13:\n                    // 110x xxxx   10xx xxxx\n                    char2 = array[i++];\n                    out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n                    break;\n                case 14:\n                    // 1110 xxxx  10xx xxxx  10xx xxxx\n                    char2 = array[i++];\n                    char3 = array[i++];\n                    out += String.fromCharCode(((c & 0x0F) << 12) |\n                        ((char2 & 0x3F) << 6) |\n                        ((char3 & 0x3F) << 0));\n                    break;\n            }\n        }\n\n        return out;\n    }\n    public ab2str(buf) {\n        return String.fromCharCode.apply(null, new Uint8Array(buf));\n    }\n\n    private str2UTF8(str) {\n        var bytes = new Array();\n        var len, c;\n        len = str.length;\n        for (var i = 0; i < len; i++) {\n            c = str.charCodeAt(i);\n            if (c >= 0x010000 && c <= 0x10FFFF) {\n                bytes.push(((c >> 18) & 0x07) | 0xF0);\n                bytes.push(((c >> 12) & 0x3F) | 0x80);\n                bytes.push(((c >> 6) & 0x3F) | 0x80);\n                bytes.push((c & 0x3F) | 0x80);\n            } else if (c >= 0x000800 && c <= 0x00FFFF) {\n                bytes.push(((c >> 12) & 0x0F) | 0xE0);\n                bytes.push(((c >> 6) & 0x3F) | 0x80);\n                bytes.push((c & 0x3F) | 0x80);\n            } else if (c >= 0x000080 && c <= 0x0007FF) {\n                bytes.push(((c >> 6) & 0x1F) | 0xC0);\n                bytes.push((c & 0x3F) | 0x80);\n            } else {\n                bytes.push(c & 0xFF);\n            }\n        }\n        return bytes;\n    }\n\n    public obj_contact(obj) {\n        var s = \"\";\n        for (var k in obj) {\n            let v = obj[k];\n            if (s.length == 0) {\n                s += \"?\" + k + \"=\" + v;\n            } else {\n                s += \"&\" + k + \"=\" + v;\n            }\n        }\n        return s;\n    }\n\n    //http请求\n    public httpSend(cmd, params, onBack) {\n        var self = this;\n        var param = self.obj_contact(params);\n        var url = encodeURI(self._httpurl + \"/\" + cmd + param);\n        Http.get(url, function (eventName: string, xhr: XMLHttpRequest) {\n            if (eventName == 'COMPLETE') {\n                if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\n                    var response = JSON.parse(xhr.responseText)\n                    if (onBack) {\n                        onBack(response);\n                    }\n                }\n            } else if (eventName == 'TIMEOUT') {\n                //TODO:添加提示连接网关超时\n                this.et.emit('TIMEOUT', {})\n                cc.log(\"添加提示连接网关超时\")\n            } else if (eventName == 'ERROR') {\n                //TODO:添加提示连接网关发生错误\n                cc.log(\"添加提示连接网关发生错误\")\n            }\n        }, this);\n    }\n\n    public httpConnect_post_async(urls, params: any, onBack: Function) {//异步httppost\n        var self = this;\n        var url = encodeURI(self._httpurl + \"/\" + urls);\n        console.log('url', url)\n        Http.post(url, params, function (eventName: string, xhr: XMLHttpRequest) {\n            if (eventName == 'COMPLETE') {\n                if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\n                    var response = JSON.parse(xhr.responseText)\n                    console.log('_____httpPost:', response)\n                    if (onBack) {\n                        onBack(response);\n                    }\n                }\n            } else if (eventName == 'TIMEOUT') {\n                //TODO:添加提示连接网关超时\n                this.et.emit('TIMEOUT', {})\n                cc.log(\"添加提示连接网关超时\")\n            } else if (eventName == 'ERROR') {\n                //TODO:添加提示连接网关发生错误\n                cc.log(\"添加提示连接网关发生错误\")\n            }\n        }, this);\n    }\n}","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        rowNum: -1,\r\n        columnNum: -1,\r\n        type: -1,\r\n        typenum: -1,\r\n    },\r\n\r\n    // onLoad () {},\r\n    start() {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n    InitQQ(row, column, type) {\r\n        this.rowNum = row;\r\n        this.columnNum = column;\r\n        this.type = type;\r\n        this.node.setPosition(utils.rowColumnPosition(column, row));\r\n        cc.ZL.animMgr.animalArray[this.rowNum][this.columnNum].can_move = false;\r\n        // for(let i=0;i<lvdata[\"Lv\"+comeInfo.now_lv].target.length;i++){\r\n        //     if(lvdata[\"Lv\"+comeInfo.now_lv].target[i][0]==this.type){\r\n        for (let i = 0; i < lvdata.target.length; i++) {\r\n            if (lvdata.target[i][0] == this.type) {\r\n                this.typenum = i;\r\n            }\r\n        }\r\n    },\r\n    QQMove() {\r\n        //有可能连续两次移动\r\n        this.node.stopAllActions();\r\n        let nextanim = this.RandAnim();\r\n        if (nextanim != null) {\r\n            //获取要移动到的位置\r\n            let arow = nextanim.rowNum;\r\n            let acolumn = nextanim.columnNum;\r\n\r\n            //先清空在旧数组中的位置\r\n            cc.ZL.iceMgr.UpArray[this.rowNum][this.columnNum] = 0;\r\n            //将那个位置的动物设为可移动\r\n            cc.ZL.animMgr.animalArray[this.rowNum][this.columnNum].can_move = true;\r\n            //将要移动到下个位置设为这个对象\r\n            cc.ZL.iceMgr.UpArray[arow][acolumn] = this;\r\n            //将要移动到下个位置的动物设为不可移动\r\n            cc.ZL.animMgr.animalArray[arow][acolumn].can_move = false;\r\n            this.node.runAction(cc.jumpTo(comeInfo.qqmoveTime, utils.rowColumnPosition(acolumn, arow), 50, 1));\r\n            this.rowNum = arow;\r\n            this.columnNum = acolumn;\r\n        } else {\r\n            //console.log(\"不可移动\");\r\n        }\r\n    },\r\n    //随机选择周围的一个动物\r\n    RandAnim() {\r\n        let around = new Array();\r\n        //上\r\n        if (this.rowNum - 1 >= 0) {\r\n            let anim = cc.ZL.animMgr.animalArray[this.rowNum - 1][this.columnNum];\r\n            if (anim != 0 && anim != -1) {\r\n                if (anim.animType > 0 && anim.animType <= 6 && anim.can_move) {\r\n                    around.push(anim);\r\n                }\r\n            }\r\n        }\r\n        //下\r\n        if (this.rowNum + 1 < comeInfo.column) {\r\n            let anim = cc.ZL.animMgr.animalArray[this.rowNum + 1][this.columnNum];\r\n            if (anim != 0 && anim != -1) {\r\n                if (anim.animType > 0 && anim.animType <= 6 && anim.can_move) {\r\n                    around.push(anim);\r\n                }\r\n            }\r\n        }\r\n        //左\r\n        if (this.columnNum - 1 >= 0) {\r\n            let anim = cc.ZL.animMgr.animalArray[this.rowNum][this.columnNum - 1];\r\n            if (anim != 0 && anim != -1) {\r\n                if (anim.animType > 0 && anim.animType <= 6 && anim.can_move) {\r\n                    around.push(anim);\r\n                }\r\n            }\r\n        }\r\n        //右\r\n        if (this.columnNum + 1 < comeInfo.row) {\r\n            let anim = cc.ZL.animMgr.animalArray[this.rowNum][this.columnNum + 1];\r\n            if (anim != 0 && anim != -1) {\r\n                if (anim.animType > 0 && anim.animType <= 6 && anim.can_move) {\r\n                    around.push(anim);\r\n                }\r\n            }\r\n        }\r\n        //如果周围有可以移动的\r\n        if (around.length > 0) {\r\n            let Toanim = around[Math.floor(Math.random() * around.length)];\r\n            return Toanim;\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\n    clear() {\r\n        if (this.type == 13) {\r\n            cc.ZL.iceMgr.qqmoveNum -= 1;\r\n            cc.ZL.animMgr.animalArray[this.rowNum][this.columnNum].can_move = true;\r\n            cc.ZL.iceMgr.UpArray[this.rowNum][this.columnNum] = 0;\r\n            if (this.typenum != -1) {\r\n                cc.ZL.targetMgr.clearTarget(this.node, this.typenum);\r\n            } else {\r\n                this.node.destroy();\r\n            }\r\n        }\r\n    }\r\n});\r\n","\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //旋转的背景\r\n        circlebg: cc.Node,\r\n        //分数\r\n        scoreLabel: cc.Label,\r\n        goldLabel: cc.Label,\r\n        //三组星星\r\n        Stars: [cc.Node],\r\n    },\r\n\r\n    onLoad() {\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    update(dt) {\r\n        this.circlebg.angle += 60 * dt;\r\n    },\r\n    InitView() {\r\n        cc.ZL.musicMgr.MyplayMusic(26, false);\r\n        this.node.runAction(cc.scaleTo(0.2, 1, 1));\r\n        this.scoreLabel.string = cc.ZL.UIMgr._score;\r\n        this.goldLabel.string = Math.floor(cc.ZL.UIMgr._score / 1000);\r\n        this.showstars();\r\n    },\r\n    showstars() {\r\n        let num = cc.ZL.UIMgr.GetStarNum();\r\n        // let num=3;\r\n        if (num == 1) {\r\n            cc.ZL.musicMgr.MyplayMusic(17, false);\r\n            this.BigSmall(this.Stars[0]);\r\n        } else if (num == 2) {\r\n            cc.ZL.musicMgr.MyplayMusic(17, false);\r\n            this.BigSmall(this.Stars[0]);\r\n            setTimeout(function () {\r\n                cc.ZL.musicMgr.MyplayMusic(18, false);\r\n                this.BigSmall(this.Stars[1]);\r\n            }.bind(this), 300);\r\n\r\n        } else if (num == 3) {\r\n            cc.ZL.musicMgr.MyplayMusic(17, false);\r\n            this.BigSmall(this.Stars[0]);\r\n            setTimeout(function () {\r\n                cc.ZL.musicMgr.MyplayMusic(18, false);\r\n                this.BigSmall(this.Stars[1]);\r\n                setTimeout(function () {\r\n                    cc.ZL.musicMgr.MyplayMusic(19, false);\r\n                    this.BigSmall(this.Stars[2]);\r\n                }.bind(this), 300);\r\n            }.bind(this), 300);\r\n\r\n        }\r\n        //gamedata.Lv_star[comeInfo.now_lv]=num;\r\n        if (comeInfo.now_lv >= gamedata.Lv_star) {\r\n            gamedata.Lv_star = comeInfo.now_lv;\r\n            gamedata.bc_Star();\r\n        }\r\n\r\n    },\r\n    //星星变大缩小\r\n    BigSmall(node) {\r\n        let fn1 = cc.scaleTo(0.2, 1.5, 1.5);\r\n        let fn2 = cc.scaleTo(0.1, 1, 1);\r\n        let sqn = cc.sequence(fn1, fn2);\r\n        node.runAction(sqn);\r\n    },\r\n    //双倍领取\r\n    DoubleGold() {\r\n        cc.ZL.musicMgr.MyplayMusic(0, false);\r\n        gamedata.gold += Math.floor(cc.ZL.UIMgr._score / 1000) * 2;\r\n        gamedata.bc_gold();\r\n        cc.director.loadScene(\"newLevel\");\r\n    },\r\n    //普通领取\r\n    NormalGold() {\r\n        this.node.getChildByName('normalGold').getComponent(cc.Button).interactable = false;\r\n        this.node.getChildByName('next').getComponent(cc.Button).interactable = false;\r\n        cc.ZL.musicMgr.MyplayMusic(0, false);\r\n        gamedata.gold += Math.floor(cc.ZL.UIMgr._score / 1000);\r\n        gamedata.bc_gold();\r\n        cc.director.loadScene(\"newLevel\");\r\n    },\r\n    NextHall(event) {\r\n        if(Number(comeInfo.now_lv) == 500) {\r\n            utils.addTips('已经是最后一关啦！');\r\n            return;\r\n        }\r\n        this.node.getChildByName('normalGold').getComponent(cc.Button).interactable = false;\r\n        this.node.getChildByName('next').getComponent(cc.Button).interactable = false;\r\n        cc.ZL.musicMgr.MyplayMusic(0, false);\r\n        gamedata.gold += Math.floor(cc.ZL.UIMgr._score / 1000);\r\n        gamedata.bc_gold();\r\n        utils.ShowLoading();\r\n        cc.director.loadScene(\"newLevel\", () => {\r\n            cc.ZL.Level.OpenMask();\r\n            console.log('OpenMask')\r\n            cc.loader.loadRes('levels/' + (Number(comeInfo.now_lv) + 1), (err, res) => {\r\n                if (err) {\r\n                    this.node.getChildByName('normalGold').getComponent(cc.Button).interactable = true;\r\n                    this.node.getChildByName('next').getComponent(cc.Button).interactable = true;\r\n                    console.log(\"load res error=\" + err);\r\n                } else {\r\n                    // console.log(lvdata['Lv1'])\r\n                    // setTimeout(function () {\r\n                        lvdata = JSON.parse(res.text);\r\n                        // console.log('=====>',lvdatacc)\r\n                        cc.ZL.Target.InitView((Number(comeInfo.now_lv) + 1));\r\n                    // }, 1000);\r\n                }\r\n            })\r\n        });\r\n    }\r\n});\r\n","var com = require('Common');\r\nconst { UIHelp } = require('../UIHelp');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //金币显示框\r\n        goldLabel: [cc.Label],\r\n        //金币不足提示\r\n        tip: cc.Node,\r\n        music: {\r\n            type: cc.AudioClip,\r\n            default: [],\r\n        },\r\n    },\r\n    onLoad() {\r\n        this.node.y = 1100;\r\n        cc.ZL.shop = this;\r\n        this.goldShow();\r\n        this.tip.active = false;\r\n        this.num = 0;\r\n    },\r\n\r\n    onGetData() {\r\n        let preas = {\r\n            rid: gamedata.rid,\r\n            token: gamedata.token,\r\n        };\r\n        // TODO:先注释掉\r\n        this.getMyPropListCall({\r\n            code: '200',\r\n            data: [\r\n                {\r\n                    gid: '10001',\r\n                    coin: '1',\r\n                },\r\n                {\r\n                    gid: '10002',\r\n                    coin: '1',\r\n                },\r\n                {\r\n                    gid: '10003',\r\n                    coin: '1',\r\n                },\r\n            ],\r\n        });\r\n        //UIHelp.network.httpConnect_post_async('game/xiaoxiaole/getPropList', preas, this.getMyPropListCall.bind(this));\r\n    },\r\n\r\n    getMyPropListCall(msg) {\r\n        console.log('getMyPropList===>', msg);\r\n        utils.HideLoading();\r\n        if (msg.code == 200) {\r\n            if (msg.data.length > 0) {\r\n                for (let a = 0; a < msg.data.length; a++) {\r\n                    if (msg.data[a]['gid'] == 10001) {\r\n                        comeInfo.prop_price[1] = msg.data[a]['coin'];\r\n                        this.goldLabel[1].string = msg.data[a]['coin'];\r\n                    } else if (msg.data[a]['gid'] == 10002) {\r\n                        comeInfo.prop_price[3] = msg.data[a]['coin'];\r\n                        this.goldLabel[3].string = msg.data[a]['coin'];\r\n                    } else if (msg.data[a]['gid'] == 10003) {\r\n                        comeInfo.prop_price[4] = msg.data[a]['coin'];\r\n                        this.goldLabel[4].string = msg.data[a]['coin'];\r\n                    }\r\n                }\r\n            }\r\n            this.node.runAction(cc.moveTo(0.2, 0, 0).easing(cc.easeBackOut()));\r\n        } else {\r\n            utils.addTips(msg.message);\r\n        }\r\n    },\r\n\r\n    start() {\r\n        // for (let i = 1; i < this.goldLabel.length; i++) {\r\n        //     this.goldLabel[i].string = comeInfo.prop_price[i];\r\n        // }\r\n    },\r\n    //显示金币信息\r\n    goldShow() {\r\n        this.goldLabel[0].string = gamedata.gold;\r\n    },\r\n    // update (dt) {},\r\n    Open() {\r\n        if (gamedata.music) {\r\n            cc.audioEngine.play(this.music[1], false, 1);\r\n        }\r\n        utils.ShowLoading();\r\n        this.onGetData();\r\n        // this.node.runAction(cc.moveTo(0.2, 0, 0).easing(cc.easeBackOut()));\r\n    },\r\n    Close() {\r\n        if (gamedata.music) {\r\n            cc.audioEngine.play(this.music[1], false, 1);\r\n        }\r\n        if (cc.ZL.Level) {\r\n            cc.ZL.Level.closeMask();\r\n        }\r\n\r\n        this.node.runAction(cc.moveTo(0.1, 0, 2000));\r\n    },\r\n    Buy(event, num) {\r\n        num = parseInt(num);\r\n        this.num = num;\r\n        if (gamedata.music) {\r\n            cc.audioEngine.play(this.music[0], false, 1);\r\n        }\r\n        if (gamedata.gold < comeInfo.prop_price[num]) {\r\n            this.tip.active = true;\r\n            return;\r\n        }\r\n        let gid;\r\n        if (num == 1) {\r\n            gid = 10001;\r\n        } else if (num == 3) {\r\n            gid = 10002;\r\n        } else if (num == 4) {\r\n            gid = 10003;\r\n        }\r\n        let preas = {\r\n            rid: gamedata.rid,\r\n            token: gamedata.token,\r\n            gid: gid,\r\n            buy_num: 1,\r\n        };\r\n        // TODO:本地先注释掉\r\n        // UIHelp.network.httpConnect_post_async('game/xiaoxiaole/buy', preas, this.buyCallBack.bind(this));\r\n        this.buyCallBack({\r\n            code: '200',\r\n            data: {\r\n                coin: 1,\r\n            },\r\n            message: '成功',\r\n        });\r\n        // gamedata.gold-=comeInfo.prop_price[num];\r\n        // gamedata.bc_gold();\r\n        // this.goldShow();\r\n        // gamedata.prop[num] +=1;\r\n        // gamedata.bc_prop(num);\r\n    },\r\n\r\n    buyCallBack(msg) {\r\n        console.log('bug===>', msg);\r\n        if (msg.code == 200) {\r\n            // gamedata.gold -= comeInfo.prop_price[this.num];\r\n            // gamedata.bc_gold();\r\n            //当前金币数量\r\n            gamedata.gold = Number(msg.data.coin);\r\n            this.goldShow();\r\n            if (this.num == 4) {\r\n                gamedata.prop[4] += 1;\r\n            } else {\r\n                gamedata.prop[this.num] += 1;\r\n            }\r\n            gamedata.bc_prop(this.num);\r\n        } else {\r\n            utils.addTips(msg.message);\r\n        }\r\n    },\r\n    //分享获取金币\r\n    shareGolde() {\r\n        com.WxShare();\r\n        setTimeout(\r\n            function () {\r\n                if (comeInfo.is_share) {\r\n                    gamedata.gold += 500;\r\n                    gamedata.bc_gold();\r\n                    if (cc.director.getScene().getName() == 'Level') {\r\n                        cc.ZL.lvMgr.showInfo();\r\n                    }\r\n                    this.goldShow();\r\n\r\n                    comeInfo.is_share = false;\r\n                }\r\n            }.bind(this),\r\n            3500\r\n        );\r\n    },\r\n    CloseTIP() {\r\n        this.tip.active = false;\r\n    },\r\n});\r\n","const { debug } = require('console');\r\nconst { UIHelp } = require('../UIHelp');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {},\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.animal = null;\r\n    },\r\n\r\n    start() {\r\n        this.node.on(\r\n            cc.Node.EventType.TOUCH_START,\r\n            function (event) {\r\n                console.log('TOUCH_START');\r\n                this.pos = event.getLocation();\r\n                console.log(this.pos, 'this.pos');\r\n                this.pos = this.node.convertToNodeSpace(this.pos);\r\n                this.pos = this.selectPos(this.pos);\r\n\r\n                console.log(this.pos, 'this.pos');\r\n                let animal = cc.ZL.animMgr.animalArray[this.pos.y][this.pos.x];\r\n                if (gamedata.is_prop == 0) {\r\n                    //普通操作\r\n                    this.pos1 = event.getLocation();\r\n                    cc.ZL.musicMgr.MyplayMusic(0, false); //播放点击音效\r\n                    cc.ZL.animMgr.selectFirstAnimal(this.pos);\r\n                } else if (gamedata.is_prop == 1) {\r\n                    //1小木槌\r\n                    this.DaoJuChui(animal);\r\n                    // animal.clear();\r\n                    // cc.ZL.PropMgr.propFinished(1);\r\n                    // cc.ZL.animMgr.NewFilled();\r\n                } else if (gamedata.is_prop == 2) {\r\n                    //2爆弹\r\n                    animal.clearType = 3;\r\n                    animal.clear();\r\n                    setTimeout(function () {\r\n                        cc.ZL.animMgr.NewFilled();\r\n                    }, comeInfo.animalClearTime * 1000);\r\n                    cc.ZL.PropMgr.propFinished(2);\r\n                } else if (gamedata.is_prop == 3) {\r\n                    //3交换位置\r\n                    cc.ZL.animMgr.proChangePos(animal);\r\n                } else if (gamedata.is_prop == 4) {\r\n                    //4横向\r\n                    cc.ZL.animMgr.mask.active = true;\r\n                    animal.clearType = 1;\r\n                    animal.clear();\r\n                    setTimeout(function () {\r\n                        cc.ZL.animMgr.NewFilled();\r\n                    }, comeInfo.animalClearTime * 1000);\r\n                    cc.ZL.PropMgr.propFinished(4);\r\n                } else if (gamedata.is_prop == 5) {\r\n                    //5纵向\r\n                    cc.ZL.animMgr.mask.active = true;\r\n                    animal.clearType = 2;\r\n                    animal.clear();\r\n                    setTimeout(function () {\r\n                        cc.ZL.animMgr.NewFilled();\r\n                    }, comeInfo.animalClearTime * 1000);\r\n                    cc.ZL.PropMgr.propFinished(5);\r\n                }\r\n            }.bind(this)\r\n        );\r\n        this.node.on(\r\n            cc.Node.EventType.TOUCH_END,\r\n            function (event) {\r\n                console.log('TOUCH_END');\r\n                console.log(gamedata);\r\n                if (gamedata.is_prop != 0) {\r\n                    //使用道具\r\n                    return;\r\n                }\r\n                this.pos2 = event.getLocation();\r\n                console.log(this.pos1, 'this.po1');\r\n                console.log(this.pos2, 'this.pos2');\r\n                if (this.pos1 == undefined || this.pos1 == null) {\r\n                    console.log('无法获取目标');\r\n                    return;\r\n                }\r\n                console.log(this.pos1.x, '无法获取目标');\r\n                let x_dis = this.pos2.x - this.pos1.x;\r\n                let y_dis = this.pos2.y - this.pos1.y;\r\n                if (Math.abs(x_dis) > Math.abs(y_dis)) {\r\n                    if (x_dis > 5) {\r\n                        //向右移动\r\n                        if (this.columnNum >= 8) {\r\n                            //范围限制\r\n                            return;\r\n                        }\r\n                        let Rnode = cc.v2(this.pos.x + 1, this.pos.y);\r\n                        cc.ZL.animMgr.selectFirstAnimal(Rnode);\r\n                    } else if (x_dis < -5) {\r\n                        //向左移动\r\n                        if (this.columnNum <= 0) {\r\n                            //范围限制\r\n                            return;\r\n                        }\r\n                        var Lnode = cc.v2(this.pos.x - 1, this.pos.y);\r\n                        cc.ZL.animMgr.selectFirstAnimal(Lnode);\r\n                    }\r\n                } else {\r\n                    //纵向移动\r\n                    if (y_dis > 5) {\r\n                        //向上\r\n                        if (this.rowNum <= 0) {\r\n                            return;\r\n                        }\r\n                        var UPnode = cc.v2(this.pos.x, this.pos.y - 1);\r\n                        cc.ZL.animMgr.selectFirstAnimal(UPnode);\r\n                    } else if (y_dis < -5) {\r\n                        if (this.rowNum >= 8) {\r\n                            return;\r\n                        }\r\n                        var Dnode = cc.v2(this.pos.x, this.pos.y + 1);\r\n                        cc.ZL.animMgr.selectFirstAnimal(Dnode);\r\n                    }\r\n                }\r\n                this.pos1 = null;\r\n                this.pos2 = null;\r\n            }.bind(this)\r\n        );\r\n        this.node.on(\r\n            cc.Node.EventType.TOUCH_CANCEL,\r\n            function (event) {\r\n                console.log('TOUCH_CANCEL');\r\n                if (gamedata.is_prop != 0) {\r\n                    //使用道具\r\n                    return;\r\n                }\r\n                this.pos2 = event.getLocation();\r\n                if (this.pos1 == undefined || this.pos1 == null) {\r\n                    console.log('无法获取目标');\r\n                    return;\r\n                }\r\n                let x_dis = this.pos2.x - this.pos1.x;\r\n                let y_dis = this.pos2.y - this.pos1.y;\r\n                if (Math.abs(x_dis) > Math.abs(y_dis)) {\r\n                    if (x_dis > 5) {\r\n                        //向右移动\r\n                        if (this.columnNum >= 8) {\r\n                            //范围限制\r\n                            return;\r\n                        }\r\n                        let Rnode = cc.v2(this.pos.x + 1, this.pos.y);\r\n                        cc.ZL.animMgr.selectFirstAnimal(Rnode);\r\n                    } else if (x_dis < -5) {\r\n                        //向左移动\r\n                        if (this.columnNum <= 0) {\r\n                            //范围限制\r\n                            return;\r\n                        }\r\n                        var Lnode = cc.v2(this.pos.x - 1, this.pos.y);\r\n                        cc.ZL.animMgr.selectFirstAnimal(Lnode);\r\n                    }\r\n                } else {\r\n                    //纵向移动\r\n                    if (y_dis > 5) {\r\n                        //向上\r\n                        if (this.rowNum <= 0) {\r\n                            return;\r\n                        }\r\n                        var UPnode = cc.v2(this.pos.x, this.pos.y - 1);\r\n                        cc.ZL.animMgr.selectFirstAnimal(UPnode);\r\n                    } else if (y_dis < -5) {\r\n                        if (this.rowNum >= 8) {\r\n                            return;\r\n                        }\r\n                        var Dnode = cc.v2(this.pos.x, this.pos.y + 1);\r\n                        cc.ZL.animMgr.selectFirstAnimal(Dnode);\r\n                    }\r\n                }\r\n                this.pos1 = null;\r\n                this.pos2 = null;\r\n            }.bind(this)\r\n        );\r\n    },\r\n\r\n    // update (dt) {},\r\n    //将点击的像素点转变为对应的格子\r\n    selectPos(pos) {\r\n        if (pos.x < 0 || pos.x >= 720 || pos.y < 0 || pos.y >= 720) {\r\n            return false;\r\n        }\r\n        var x = Math.floor(pos.x / 80);\r\n        var y = 8 - Math.floor(pos.y / 80);\r\n        return cc.v2(x, y);\r\n    },\r\n\r\n    DaoJuChui(data) {\r\n        this.animal = data;\r\n        try {\r\n            this.animal.clear();\r\n            let preas = {\r\n                rid: gamedata.rid,\r\n                token: gamedata.token,\r\n                gid: 10001,\r\n                num: 1,\r\n            };\r\n            // TODO:先注释掉\r\n            // UIHelp.network.httpConnect_post_async('game/xiaoxiaole/consumeProp', preas, this.onMuChuiCallBack.bind(this));\r\n            this.onMuChuiCallBack({\r\n                code: '200',\r\n                message: '成功',\r\n            });\r\n        } catch (error) {\r\n            utils.addTips('不可消除');\r\n        }\r\n\r\n        // animal.clear();\r\n        // cc.ZL.PropMgr.propFinished(1);\r\n        // cc.ZL.animMgr.NewFilled();\r\n    },\r\n\r\n    // 锤子执行\r\n    onMuChuiCallBack(msg) {\r\n        console.log('onMuChuiCallBack===>', msg);\r\n        if (msg.code == 200) {\r\n            // this.animal.clear();\r\n            cc.ZL.PropMgr.propFinished(1);\r\n            cc.ZL.animMgr.NewFilled();\r\n        } else {\r\n            utils.addTips(msg.message);\r\n        }\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //当前节点最小关卡\r\n        lv:0,\r\n        //关卡节点\r\n        lvBnt:[cc.Node],\r\n        lvlab:[cc.Node],\r\n    },\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n    },\r\n\r\n    // update (dt) {},\r\n    InitView(lv){\r\n        this.lv=lv;\r\n        for(let i=0;i<this.lvBnt.length;i++){\r\n            if(this.lv+i > 500) {\r\n        console.log('123123123',this.lv+i)\r\n                this.lvBnt[i].destroy();\r\n                this.lvlab[i].destroy();\r\n            }else{\r\n            this.lvBnt[i].getComponent(\"LvBnt\").InitView(this.lv+i);\r\n            }\r\n        }\r\n    }\r\n});\r\n","import { Network } from \"./network/Network\";\n\nexport class UIHelp {\n\n    public static network: Network = null;\n\n    public static init() {\n        // 新建一个网络单例\n        UIHelp.network = SingletonFactory.getInstance(Network);\n    }\n\n    \n\n}\nexport default new UIHelp();\nexport class SingletonFactory {\n\n    private static instances: Map<{ new() }, Object> = new Map<{ new() }, Object>();\n\n    public static getInstance<T>(c: { new(): T }): T {\n        if (!SingletonFactory.instances.has(c)) {\n            let obj = new c();\n            SingletonFactory.instances.set(c, obj);\n            return obj;\n        }\n        return <T>SingletonFactory.instances.get(c);\n    }\n}\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //关卡显示框\r\n        lvLabel: cc.Label,\r\n        stepnum: -1,\r\n        //步数显示框\r\n        stepLabel: cc.Label,\r\n        //分数\r\n        _score: 0,\r\n        //分数进度条\r\n        socreProcess: cc.ProgressBar,\r\n        //分数显示框\r\n        scoreLabel: cc.Label,\r\n        //蝴蝶Logo\r\n        logo: cc.Node,\r\n\r\n        add_score: 150,\r\n\r\n        //失败预制体\r\n        end: cc.Prefab,\r\n\r\n        xing1: cc.Node,\r\n        xing2: cc.Node,\r\n        xing3: cc.Node\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n         cc.ZL.animMgr.mask.active = true;\r\n        cc.ZL.UIMgr = this;\r\n        this.showInfo();\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n    showInfo() {\r\n        this.lvLabel.string = '第' + comeInfo.now_lv + '关';\r\n        // this.stepnum=lvdata[\"Lv\"+comeInfo.now_lv].step;\r\n        this.stepnum = lvdata.step;\r\n        this.stepLabel.string = this.stepnum;\r\n        this.AddScore(0);\r\n    },\r\n    //更新分数显示\r\n    AddScore(num) {\r\n        this._score += num;\r\n        this.scoreLabel.string = this._score;\r\n        // let bar=this._score/(lvdata[\"Lv\"+comeInfo.now_lv].one_star*3);\r\n        let bar = this._score / (lvdata.one_star * 3);\r\n        this.socreProcess.progress = bar;\r\n        let sum = this.GetStarNum();\r\n        switch (sum) {\r\n            case 3:\r\n                this.xing3.active = true;\r\n                this.xing2.active = true;\r\n                this.xing1.active = true;\r\n                break;\r\n            case 2:\r\n                this.xing3.active = false;\r\n                this.xing2.active = true;\r\n                this.xing1.active = true;\r\n                break;\r\n\r\n            case 1:\r\n                this.xing3.active = false;\r\n                this.xing2.active = false;\r\n                this.xing1.active = true;\r\n                break;\r\n            case 0:\r\n                this.xing3.active = false;\r\n                this.xing2.active = false;\r\n                this.xing1.active = false;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (bar >= 1) {\r\n            bar = 1;\r\n        }\r\n        this.logo.x = bar * 700;\r\n    },\r\n    //减步数\r\n    MinusStep() {\r\n        this.stepnum -= 1;\r\n        if (this.stepnum <= 0) {\r\n            this.stepnum = 0;\r\n            //this.EndOver();\r\n        }\r\n        this.stepLabel.string = this.stepnum;\r\n    },\r\n    //加5步\r\n    AddFiveStep() {\r\n        this.stepnum += 5;\r\n        this.stepLabel.string = this.stepnum;\r\n    },\r\n    AddTwoStep() {\r\n        this.stepnum += 2;\r\n        this.stepLabel.string = this.stepnum;\r\n    },\r\n    //计算显示几颗星\r\n    GetStarNum() {\r\n        // if(this._score>(lvdata[\"Lv\"+comeInfo.now_lv].one_star*3)){\r\n        //     return 3;\r\n        // }else if(this._score>(lvdata[\"Lv\"+comeInfo.now_lv].one_star*2)){\r\n        //     return 2;\r\n        // }else if(this._score>(lvdata[\"Lv\"+comeInfo.now_lv].one_star)){\r\n        //     return 1;\r\n        // }else {\r\n        //     return 0;\r\n        // }\r\n        if (this._score > (lvdata.one_star * 3)) {\r\n            return 3;\r\n        } else if (this._score > (lvdata.one_star * 2)) {\r\n            return 2;\r\n        } else if (this._score > (lvdata.one_star)) {\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    },\r\n    //失败\r\n    EndOver() {\r\n        let e = cc.instantiate(this.end);\r\n        this.node.addChild(e);\r\n        e.setPosition(0, 0);\r\n        e.getComponent(\"End\").InitView();\r\n    }\r\n});\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //音效\r\n        music: {\r\n            type: cc.AudioClip,\r\n            default: []\r\n        },\r\n        //纹理\r\n        SPR: [cc.SpriteFrame],\r\n    },\r\n\r\n    onLoad() {\r\n        this.node.scale = 0;\r\n        cc.ZL.CM = this;\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n    InitView(num) {\r\n        if (gamedata.music) {\r\n            if (num <= 2) {\r\n                return;\r\n            }\r\n            if (num > 2 && num <= 4) {\r\n                this.node.getComponent(cc.Sprite).spriteFrame = this.SPR[0];\r\n                cc.audioEngine.play(this.music[0], false, 1);\r\n            } else if (num > 4 && num < 6) {\r\n                this.node.getComponent(cc.Sprite).spriteFrame = this.SPR[1];\r\n                cc.audioEngine.play(this.music[1], false, 1);\r\n            } else if (num > 6 && num < 8) {\r\n                this.node.getComponent(cc.Sprite).spriteFrame = this.SPR[2];\r\n                cc.audioEngine.play(this.music[2], false, 1);\r\n            } else if (num > 8 && num < 10) {\r\n                this.node.getComponent(cc.Sprite).spriteFrame = this.SPR[3];\r\n                cc.audioEngine.play(this.music[3], false, 1);\r\n            } else if (num > 10) {\r\n                this.node.getComponent(cc.Sprite).spriteFrame = this.SPR[4];\r\n                cc.audioEngine.play(this.music[4], false, 1);\r\n            }\r\n            this.node.runAction(cc.scaleTo(0.2, 1));\r\n            setTimeout(function () {\r\n                if (this.node) {\r\n                    this.node.runAction(cc.scaleTo(0.2, 0));\r\n                }\r\n            }.bind(this), 500)\r\n        }\r\n    }\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //数字显示框\r\n        //numlabel:cc.Label,\r\n        //列号\r\n        columnNum:-1,\r\n        //行号\r\n        rowNum:-1,\r\n    },\r\n    // onLoad () {},\r\n    start () {\r\n    },\r\n    // update (dt) {},\r\n    initCube(columnnum,rownum){\r\n        this.columnNum=columnnum;\r\n        this.rowNum=rownum;\r\n        this.node.setPosition(utils.rowColumnPosition(columnnum,rownum));\r\n    }\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //方向特效的预制体\r\n        dirPrefab:cc.Prefab,\r\n        //T型特效\r\n        TPrefab:cc.Prefab,\r\n        //特效的父物体\r\n        effParent:cc.Node,\r\n        //物体消除的特效\r\n        clearPrefab:cc.Prefab,\r\n        //消除的特效要飞向的目标\r\n        clearTarget:cc.Node,\r\n        //横纵向消除动画\r\n        roweffPrefab:cc.Prefab,\r\n        //爆炸动画\r\n        boomPrefab:cc.Prefab,\r\n        //魔力鸟特效\r\n        niao:cc.Prefab,\r\n\r\n    },\r\n    onLoad () {\r\n        cc.ZL.effMgr=this;\r\n        this.clearEffPool=new cc.NodePool();\r\n        for(let i=0;i<100;i++){\r\n            let a =cc.instantiate(this.clearPrefab);\r\n            this.clearEffPool.put(a);\r\n        }\r\n\r\n        this.clearRowEffPool=new cc.NodePool();\r\n        // for(let i=0;i<20;i++){\r\n        //     let b=cc.instantiate(this.roweffPrefab);\r\n        //     this.clearRowEffPool.put(b);\r\n        // }\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n    //生成方向特效 R横向C纵向\r\n    dirEff(node,dir){\r\n        let a=cc.instantiate(this.dirPrefab);\r\n        if(dir==\"Row\"){\r\n            a.angle=90;\r\n        }else if(dir==\"Column\"){\r\n            a.angle=0;\r\n        }\r\n        a.getComponent(cc.Animation).play();\r\n        node.addChild(a);\r\n        a.setPosition(0,30);\r\n    },\r\n    //T型特效\r\n    TEff(node){\r\n        cc.ZL.musicMgr.MyplayMusic(10,false);\r\n        let T=cc.instantiate(this.TPrefab);\r\n        node.addChild(T);\r\n        T.setPosition(0,30);\r\n        T.getComponent(cc.Animation).play();\r\n    },\r\n    //生成消除特效\r\n    CreatClearEff(pos){\r\n        //生成10个小星星\r\n        let pos1=this.clearTarget.getPosition();\r\n        let pos_word=this.clearTarget.parent.convertToWorldSpaceAR(pos1);\r\n        let pos_node=this.effParent.convertToNodeSpaceAR(pos_word);\r\n        for(let i=0;i<5;i++){\r\n            let e;\r\n            if(this.clearEffPool.size()>0){\r\n                e=this.clearEffPool.get();\r\n            }else{\r\n                e=cc.instantiate(this.clearPrefab);\r\n            }\r\n            this.effParent.addChild(e);\r\n            e.setPosition(pos.x,pos.y+30);\r\n            let spd=Math.random()*600+1200;\r\n            e.getComponent(\"goldeff\").cube_move(spd,pos_node,this);\r\n        }\r\n    },\r\n    //横纵向动画特效\r\n    CreatRowEff(pos,dir){\r\n        cc.ZL.musicMgr.PlayMusicOnly(11,false);\r\n        let r;\r\n        if(this.clearRowEffPool.size()>0){\r\n            r=this.clearRowEffPool.get();\r\n        }else{\r\n            r=cc.instantiate(this.roweffPrefab);\r\n        }\r\n        this.effParent.addChild(r);\r\n        r.setPosition(pos.x,pos.y+30);\r\n        let anim=r.getComponent(sp.Skeleton);\r\n        anim.clearTracks();\r\n        if(dir==\"row\"){//纵\r\n            anim.addAnimation(0,\"width\",false,0);\r\n        }else{//横\r\n            anim.addAnimation(0,\"length\",false,0);\r\n        }\r\n        //r.runAction(cc.scaleTo(0.2,1,1.5));\r\n        anim.setCompleteListener(function(){\r\n            if(r){\r\n                this.clearRowEffPool.put(r);\r\n            }\r\n        }.bind(this));\r\n    },\r\n    //生成爆炸特效\r\n    CreatBoomEff(pos){\r\n        cc.ZL.musicMgr.MyplayMusic(12,false);\r\n        let b=cc.instantiate(this.boomPrefab);\r\n        this.effParent.addChild(b);\r\n        b.setPosition(pos.x,pos.y+30);\r\n        b.runAction(cc.scaleTo(0.2,2,2));\r\n        setTimeout(function(){\r\n            if(b){\r\n                b.destroy();\r\n            }\r\n        }.bind(this),300);\r\n    },\r\n\r\n    CratNiao(node){\r\n        let a=cc.instantiate(this.niao);\r\n        //a.getComponent(cc.Animation).play();\r\n        node.addChild(a);\r\n        a.setPosition(0,30);\r\n    }\r\n});\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // music:{\r\n        //     type:cc.AudioClip,\r\n        //     default:null,\r\n        // }\r\n    },\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n    //敌人死亡后的方块移动\r\n    cube_move(speed,pos,manager){\r\n        this.node.stopAllActions();\r\n        var x=(Math.floor(Math.random()*100)+10)*20;\r\n        var y=(Math.floor(Math.random()*100)+10)*20;\r\n        var num=Math.floor(Math.random()*4);\r\n        var dir=cc.v2(x,y);\r\n        var len=dir.mag();\r\n        var t=len/(speed*0.2);\r\n        //this.is_rot=true;\r\n        if(num==0){\r\n            this.node.runAction(cc.moveTo(t,x,y));\r\n        }else if(num==1){\r\n            this.node.runAction(cc.moveTo(t,-x,y));\r\n        }else if(num==2){\r\n            this.node.runAction(cc.moveTo(t,x,-y));\r\n        }else if(num==3){\r\n            this.node.runAction(cc.moveTo(t,-x,-y));\r\n        }\r\n        setTimeout(function(){\r\n            if(this.node){\r\n                this.node.stopAllActions();\r\n                var dir2=pos.sub(this.node.getPosition());\r\n                var len2=dir2.mag();\r\n                var t2=len2/speed;\r\n                this.node.runAction(cc.moveTo(t2,pos));\r\n                setTimeout(function(){\r\n                    if(this.node){\r\n                        manager.clearEffPool.put(this.node);\r\n                    }\r\n                }.bind(this),t2*1000)\r\n            } \r\n        }.bind(this),200);\r\n    },\r\n});\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //ice父物体\r\n        icePrefab: cc.Prefab,\r\n        //ice容器\r\n        iceParent: cc.Node,\r\n        iceArray: null,\r\n        //上层父物体\r\n        UpParent: cc.Node,\r\n        //毛球预制体\r\n        qqAnim: cc.Prefab,\r\n        UpArray: null,\r\n        //需要移动的毛球的数量\r\n        qqmoveNum: 0,\r\n    },\r\n    onLoad() {\r\n        cc.ZL.iceMgr = this;\r\n        this.iceArray = new Array();\r\n        this.UpArray = new Array();\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n    //实例化下层障碍\r\n    InitIce() {\r\n        for (let row = 0; row < comeInfo.row; row++) {\r\n            let rowArray = new Array();\r\n            for (let column = 0; column < comeInfo.column; column++) {\r\n                // if(lvdata[\"Lv\"+comeInfo.now_lv].ice[row][column]!=0){\r\n                if (lvdata.ice[row][column] != 0) {\r\n                    let ice = cc.instantiate(this.icePrefab);\r\n                    this.iceParent.addChild(ice);\r\n                    ice.getComponent(\"ice\").InitView(row, column);\r\n                    rowArray.push(ice.getComponent(\"ice\"));\r\n                } else {\r\n                    rowArray.push(0);\r\n                }\r\n            }\r\n            this.iceArray.push(rowArray);\r\n        }\r\n    },\r\n    //实例化上层障碍\r\n    InitUPAnim() {\r\n        for (let row = 0; row < comeInfo.row; row++) {\r\n            let rowArray = new Array();\r\n            for (let column = 0; column < comeInfo.column; column++) {\r\n                // if(lvdata[\"Lv\"+comeInfo.now_lv].eff[row][column]==13){//实例化小毛球\r\n                if (lvdata.eff[row][column] == 13) {//实例化小毛球\r\n                    let qq = cc.instantiate(this.qqAnim);\r\n                    this.UpParent.addChild(qq);\r\n                    qq.getComponent(\"QQ\").InitQQ(row, column, 13);\r\n                    rowArray.push(qq.getComponent(\"QQ\"));\r\n                    this.qqmoveNum += 1;\r\n                } else {\r\n                    rowArray.push(0);\r\n                }\r\n            }\r\n            this.UpArray.push(rowArray);\r\n        }\r\n    },\r\n    //上层可移动的全部移动一下\r\n    UPAllMove() {\r\n        let list = new Array();\r\n        for (let row = 0; row < comeInfo.row; row++) {\r\n            for (let column = 0; column < comeInfo.column; column++) {\r\n                if (this.UpArray[row][column].type == 13) {//就是有东西\r\n                    list.push(this.UpArray[row][column]);\r\n                }\r\n            }\r\n        }\r\n        let qry = list.length;\r\n        if (qry == 0) {\r\n            return;\r\n        }\r\n        let n = 0;\r\n        this.schedule(function () {\r\n            list[n].QQMove();\r\n            n++;\r\n        }.bind(this), 0.1, qry - 1);\r\n\r\n    }\r\n});\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //行号\r\n        rowNum: -1,\r\n        //列号\r\n        columnNum: -1,\r\n        //类型\r\n        type: -1,\r\n        //目标位置\r\n        typenum: -1,\r\n    },\r\n\r\n    // onLoad () {},\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n    InitView(row, column) {\r\n        this.rowNum = row;\r\n        this.columnNum = column;\r\n        this.node.setPosition(utils.rowColumnPosition(column, row));\r\n        // this.type=lvdata[\"Lv\"+comeInfo.now_lv].ice[row][column]+10;\r\n        this.type = lvdata.ice[row][column] + 10;\r\n        // this.node.getComponent(cc.Sprite).spriteFrame=cc.ZL.sprMgr.icespr[lvdata[\"Lv\"+comeInfo.now_lv].ice[row][column]];\r\n        this.node.getComponent(cc.Sprite).spriteFrame = cc.ZL.sprMgr.icespr[lvdata.ice[row][column]];\r\n        // for(let i=0;i<lvdata[\"Lv\"+comeInfo.now_lv].target.length;i++)\r\n        for (let i = 0; i < lvdata.target.length; i++) {\r\n            if (this.type == 12 || this.type == 11) {\r\n                // if(lvdata[\"Lv\"+comeInfo.now_lv].target[i][0]==11){\r\n                if (lvdata.target[i][0] == 11) {\r\n                    this.typenum = i;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    clear() {//消除这个物体\r\n\r\n        if (this.type == 11) {\r\n            cc.ZL.musicMgr.PlayMusicOnly(13, false);\r\n            if (this.typenum != -1) {\r\n                cc.ZL.iceMgr.iceArray[this.rowNum][this.columnNum] = 0;\r\n                cc.ZL.targetMgr.clearTarget(this.node, this.typenum);\r\n            } else {\r\n                if (this.node) {\r\n                    this.node.destroy();\r\n                }\r\n\r\n            }\r\n\r\n        } else if (this.type = 12 && this.typenum != -1) {\r\n            cc.ZL.musicMgr.PlayMusicOnly(13, false);\r\n            this.type = 11;\r\n            this.node.getComponent(cc.Sprite).spriteFrame = cc.ZL.sprMgr.icespr[1];\r\n            cc.ZL.targetMgr.targetNum(this.typenum);\r\n        }\r\n\r\n    }\r\n});\r\n","// Learn TypeScript:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class item_rank extends cc.Component {\n\n    @property({type: cc.Label, displayName: '排名'})\n    rank: cc.Label = null;\n    @property({type: cc.Sprite, displayName: '头像'})\n    icon: cc.Sprite = null;\n    @property({type: cc.Label, displayName: '昵称'})\n    nickname: cc.Label = null;\n    @property({type: cc.Label, displayName: '分数'})\n    fen: cc.Label = null;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    // 243，33，72 红\n    // 29，191，25 绿\n    // 23，99，166 蓝\n    // 170，66，31 棕\n\n    onStartInfo(msg) {\n        if(msg.id == 1) {\n            this.rank.node.color = cc.color(243,33,72,255);\n        }else if(msg.id == 2) {\n            this.rank.node.color = cc.color(29,191,25,255);\n        }else if(msg.id == 3) {\n            this.rank.node.color = cc.color(23,99,166,255);\n        }else {\n            this.rank.node.color = cc.color(170,66,31,255);\n        }\n        this.rank.string = msg.rank_num;\n        cc.loader.load(msg.headimage, (err,msg) => {\n            if(err) {\n                utils.addTips('头像加载失败');\n                return;\n            }\n            let sprite = new cc.SpriteFrame(msg);\n            this.icon.spriteFrame = sprite;\n        })\n        let name;\n        // let a = '';\n        // a.slice\n        if(msg.nickname.length > 6) {\n            name = msg.nickname.slice(0,6) + '...';\n        }else{\n            name = msg.nickname;\n        }\n        this.nickname.string = name;\n        this.fen.string = msg.points;\n\n    }\n\n    start () {\n\n    }\n\n    // update (dt) {}\n}\n","window.lvdata={\r\n    //0方块不启用-1方块启用，但是不产生动物\r\n    //-1空格子1红狐狸,2海马，3青蛙，4小黄鸡，5小紫猫  6魔力鸟（动物）7单层冰阻碍8双层冰阻碍9三层冰阻碍\r\n    //target: 1狗,2猴子，3鸟，4猫，5羊   11冰块12双重冰块13小毛球14大毛球\r\n    /*\r\n    Lv1:{\r\n      Anim:[[-1,-1,-1,-1,-1,-1,-1,-1,-1],\r\n            [-1,-1,-1,-1,-1,-1,-1,-1,-1],\r\n            [-1,-1,-1,-1,-1,-1,-1,-1,-1],\r\n            [-1,-1,-1,-1,-1,-1,-1,-1,-1],\r\n            [-1,-1,-1,-1,-1,-1,-1,-1,-1],\r\n            [-1,-1,-1,-1,-1,-1,-1,-1,-1],\r\n            [-1,-1,-1,-1,-1,-1,-1,-1,-1],\r\n            [-1,-1,-1,-1,-1,-1,-1,-1,-1],\r\n            [-1,-1,-1,-1,-1,-1,-1,-1,-1]],\r\n       //冰块的位置  冰块1 2双层冰块\r\n      ice:[[0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0]],\r\n      //可以自主产生动物的格子（新动物出生地）\r\n      creat:[[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,8]],\r\n      //限制步数\r\n      step:12,\r\n      //一星值\r\n      one_star:1000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //1红狐狸,2海马，3青蛙，4小黄鸡，5小紫猫   11冰块12双重冰块\r\n      target:[[3,6]],\r\n    },\r\n    */\r\n    Lv1:{\r\n      Anim:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,1,1,0,1,1,0,0],\r\n            [0,2,3,2,4,2,3,2,0],\r\n            [0,3,4,3,1,3,4,2,0],\r\n            [0,0,2,1,3,1,3,0,0],\r\n            [0,0,0,2,4,3,0,0,0],\r\n            [0,0,0,0,3,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n       //冰块的位置  冰块1 2双层冰块\r\n      ice:[[0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //可以自主产生动物的格子（新动物出生地）\r\n      creat:[[2,2],[2,3],[2,5],[2,6]],\r\n      //限制步数\r\n      step:12,\r\n      //一星值\r\n      one_star:1000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //1红狐狸,2海马，3青蛙，4小黄鸡，5小紫猫   11冰块12双重冰块\r\n      target:[[8,6]],\r\n    },\r\n    Lv2:{\r\n      Anim:[[0,0,0,0,0,0,0,0,0],\r\n            [0,4,4,1,4,3,0,0,0],\r\n            [0,4,4,1,2,5,1,0,0],\r\n            [0,1,1,2,1,3,5,3,0],\r\n            [0,4,2,3,5,4,5,2,0],\r\n            [0,2,3,3,2,3,4,1,0],\r\n            [0,0,1,2,3,3,1,4,0],\r\n            [0,0,0,4,1,2,2,4,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n       //冰块的位置  冰块1 2双层冰块\r\n      ice:[[0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,2,2,2,0,0,0,0],\r\n           [0,0,2,2,2,0,0,0,0],\r\n           [0,0,2,2,0,1,1,0,0],\r\n           [0,0,0,0,1,1,1,0,0],\r\n           [0,0,0,0,1,1,1,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //可以自主产生动物的格子（新动物出生地）\r\n      creat:[[1,1],[1,2],[1,3],[1,4],[1,5]],\r\n      //限制步数\r\n      step:25,\r\n      //一星值\r\n      one_star:1000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //1红狐狸,2海马，3青蛙，4小黄鸡，5小紫猫   11冰块12双重冰块\r\n      target:[[11,24]],\r\n    },\r\n    Lv3:{\r\n      //动物的排列\r\n      Anim:[[0,1,1,2,2,3,1,4,0],\r\n            [0,3,5,3,1,4,1,2,0],\r\n            [0,1,3,5,5,3,5,1,0],\r\n            [0,2,1,3,3,4,3,3,0],\r\n            [0,1,2,2,1,2,4,1,0],\r\n            [0,3,2,1,1,2,3,2,0],\r\n            [0,2,4,3,5,4,1,5,0],\r\n            [0,1,3,1,4,4,3,5,0],\r\n            [0,5,1,1,3,5,2,4,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      ice:[ [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,2,2,2,0,0,0],\r\n            [0,0,0,2,2,2,0,0,0],\r\n            [0,0,0,2,2,2,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,2,2,2,0,0,0],\r\n            [0,0,0,2,2,2,0,0,0],\r\n            [0,0,0,2,2,2,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n    //特殊效果 1横2纵3T4魔力鸟\r\n    eff:[[0,0,0,0,0,0,0,0,0],\r\n          [0,0,0,0,0,0,0,0,0],\r\n          [0,0,0,0,0,0,0,0,0],\r\n          [0,0,0,0,0,0,0,0,0],\r\n          [0,0,0,0,0,4,0,0,0],\r\n          [0,0,0,0,0,0,0,0,0],\r\n          [0,0,0,0,0,0,0,0,0],\r\n          [0,0,0,0,0,0,0,0,0],\r\n          [0,0,0,0,0,0,0,0,0]],\r\n    //可以自主产生动物的格子（新动物出生地）\r\n    creat:[[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7]],\r\n    //限制步数\r\n    step:24,\r\n    //一星值\r\n    one_star:2000,\r\n    //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n    //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7冰猴8冰鸟9冰猫10冰羊\r\n    //11冰块\r\n    target:[[11,36]],\r\n    },\r\n    Lv4:{\r\n      //动物的排列\r\n      Anim:[[0,2,3,2,3,2,3,2,0],\r\n            [0,3,2,3,5,3,2,3,0],\r\n            [0,2,3,2,3,5,3,2,0],\r\n            [0,3,0,3,5,3,0,3,0],\r\n            [1,4,1,4,5,1,4,1,4],\r\n            [0,2,0,2,3,5,0,2,0],\r\n            [0,3,2,3,5,3,2,3,0],\r\n            [0,2,3,2,3,2,3,2,0],\r\n            [0,3,2,3,2,3,2,3,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n       //可以自主产生动物的格子（新动物出生地）\r\n      creat:[[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7]],\r\n      //限制步数\r\n      step:25,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7冰猴8冰鸟9冰猫10冰羊\r\n      //11冰块\r\n      target:[[2,36],[3,36]],\r\n    },   \r\n    Lv5:{\r\n      //动物的排列\r\n      Anim:[[0,0,0,0,2,0,0,0,0],\r\n            [0,0,0,3,3,2,0,0,0],\r\n            [0,0,4,3,2,4,2,0,0],\r\n            [0,3,2,1,3,3,5,2,0],\r\n            [1,4,1,5,4,1,4,1,1],\r\n            [0,2,4,2,3,0,0,2,0],\r\n            [0,1,5,1,4,0,0,3,0],\r\n            [0,2,3,5,2,2,3,2,0],\r\n            [0,3,2,1,2,3,2,3,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,1,1,1,1,0,0,0,0],\r\n            [0,1,1,1,1,0,0,0,0],\r\n            [0,1,1,1,1,0,0,0,0],\r\n            [0,1,1,1,1,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //可以自主产生动物的格子（新动物出生地）\r\n      creat:[[0,4]],\r\n      //限制步数\r\n      step:20,\r\n      //一星值\r\n      one_star:3000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7冰猴8冰鸟9冰猫10冰羊\r\n      //11冰块\r\n      target:[[11,16],[3,36]],\r\n    },\r\n    Lv6:{\r\n      //动物的排列\r\n      Anim:[[0,1,5,1,5,1,5,1,0],\r\n            [0,5,0,3,2,3,0,1,0],\r\n            [0,5,0,2,3,2,0,5,0],\r\n            [0,1,0,5,1,5,0,1,0],\r\n            [1,4,1,3,4,1,4,2,2],\r\n            [0,1,0,5,3,5,0,5,0],\r\n            [0,5,0,1,5,1,0,1,0],\r\n            [0,1,0,5,1,5,0,5,0],\r\n            [0,5,1,4,5,1,5,1,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //可以自主产生动物的格子（新动物出生地）\r\n      creat:[[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7]],\r\n      //限制步数\r\n      step:25,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗\r\n      //11冰块\r\n      target:[[5,36],[1,36]],\r\n    },\r\n    Lv7:{\r\n      //动物的排列\r\n      Anim:[[0,1,0,0,0,0,0,1,0],\r\n            [0,5,2,0,0,0,2,1,0],\r\n            [0,5,2,2,0,2,3,5,0],\r\n            [0,1,4,5,1,5,3,1,0],\r\n            [1,4,1,3,4,1,4,2,2],\r\n            [0,1,4,5,3,5,1,5,0],\r\n            [0,5,2,1,0,1,2,1,0],\r\n            [0,1,1,0,0,0,5,5,0],\r\n            [0,5,0,0,0,0,0,1,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,1,1,0,0,0,1,1,0],\r\n            [0,1,1,1,0,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,0,1,1,1,0],\r\n            [0,1,1,0,0,0,1,1,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //可以自主产生动物的格子（新动物出生地）\r\n      creat:[[0,1],[0,7]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7冰猴8冰鸟9冰猫10冰羊\r\n      //11冰块\r\n      target:[[11,41]],\r\n    },\r\n    Lv8:{\r\n      //动物的排列\r\n      Anim:[[0,0,2,0,0,0,0,0,0],\r\n            [0,1,3,2,0,0,0,0,0],\r\n            [3,4,2,1,3,0,0,0,0],\r\n            [0,3,3,2,1,1,0,0,0],\r\n            [0,0,4,4,0,1,3,0,0],\r\n            [0,0,0,1,2,3,1,1,0],\r\n            [0,0,3,4,4,2,3,2,5],\r\n            [0,2,1,1,2,1,3,5,3],\r\n            [1,2,1,2,1,4,4,1,2]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,2,2,2,2,2,2,2],\r\n            [0,2,2,2,2,2,2,2,2],\r\n            [2,2,2,2,2,2,2,2,2]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //可以自主产生动物的格子（新动物出生地）\r\n      creat:[[0,2]],\r\n      //限制步数\r\n      step:35,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7冰猴8冰鸟9冰猫10冰羊\r\n      //11冰块\r\n      target:[[11,48]],\r\n    },\r\n    Lv9:{\r\n      //动物的排列\r\n      Anim:[[0,0,1,0,0,0,1,0,0],\r\n            [0,2,2,3,0,3,2,2,0],\r\n            [4,2,2,3,1,3,2,2,4],\r\n            [2,4,4,5,2,5,4,4,2],\r\n            [2,4,4,5,2,5,4,4,2],\r\n            [4,2,2,3,1,3,2,2,4],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,2],[0,6]],\r\n      //限制步数\r\n      step:25,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7冰猴8冰鸟9冰猫10冰羊\r\n      //11冰块\r\n      target:[[4,33],[2,44]],\r\n    },\r\n    Lv10:{\r\n      //动物的排列\r\n      Anim:[[0,1,1,0,2,0,1,1,0],\r\n            [0,2,2,3,1,3,2,2,0],\r\n            [4,2,2,3,1,3,2,2,4],\r\n            [2,4,4,5,2,5,4,4,2],\r\n            [0,4,4,5,2,5,4,4,0],\r\n            [0,2,2,3,1,3,2,2,0],\r\n            [0,1,1,0,0,0,1,1,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,2,2,2,2,2,0,0],\r\n            [0,0,2,2,2,2,2,0,0],\r\n            [0,0,2,2,2,2,2,0,0],\r\n            [0,0,2,2,2,2,2,0,0],\r\n            [0,0,2,2,2,2,2,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,1],[0,2],[0,4],[0,6],[0,7]],\r\n      //限制步数\r\n      step:25,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7冰猴8冰鸟9冰猫10冰羊\r\n      //11冰块\r\n      target:[[11,50]],\r\n    },\r\n    Lv11:{\r\n      //动物的排列\r\n      Anim:[[0,0,0,1,3,1,0,0,0],\r\n            [0,0,1,3,1,3,1,0,0],\r\n            [0,1,3,1,3,1,3,1,0],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [7,7,7,-1,-1,-1,7,7,7],\r\n            [7,7,7,-1,-1,-1,7,7,7],\r\n            [7,7,7,-1,-1,-1,7,7,7],\r\n            [7,7,7,-1,-1,-1,7,7,7],\r\n            [7,7,7,-1,-1,-1,7,7,7]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,3],[0,4],[0,5]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕\r\n      //11冰块\r\n      target:[[7,39]],\r\n    },\r\n    Lv12:{\r\n      //动物的排列\r\n      Anim:[[0,2,3,2,8,3,2,3,0],\r\n            [0,3,2,3,8,2,3,2,0],\r\n            [0,2,3,2,8,3,2,3,0],\r\n            [0,8,8,8,8,8,8,8,0],\r\n            [0,-1,-1,-1,8,-1,-1,-1,0],\r\n            [0,-1,-1,-1,8,-1,-1,-1,0],\r\n            [0,-1,-1,-1,8,-1,-1,-1,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,1,0,0,0,0],\r\n            [0,0,0,0,1,0,0,0,0],\r\n            [0,0,0,0,1,0,0,0,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7]],\r\n      //限制步数\r\n      step:25,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[11,31]],\r\n    },\r\n    Lv13:{\r\n      //动物的排列\r\n      Anim:[[0,0,0,7,7,7,0,0,0],\r\n            [0,0,-1,4,1,4,-1,0,0],\r\n            [0,-1,7,7,4,7,7,-1,0],\r\n            [-1,-1,7,8,8,8,7,-1,-1],\r\n            [-1,-1,7,8,8,8,7,-1,-1],\r\n            [-1,-1,7,8,8,8,7,-1,-1],\r\n            [0,-1,7,7,7,7,7,-1,0],\r\n            [0,0,-1,7,7,7,-1,0,0],\r\n            [0,0,0,-1,-1,-1,0,0,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,3],[0,4],[0,5]],\r\n      //限制步数\r\n      step:25,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[7,30]],\r\n    },\r\n    Lv14:{\r\n      //动物的排列\r\n      Anim:[[7,7,7,7,7,0,0,0,1],\r\n            [7,5,3,1,1,0,0,0,7],\r\n            [7,7,4,7,1,0,0,0,7],\r\n            [4,2,1,2,0,0,0,-1,-1],\r\n            [5,1,3,5,0,0,-1,-1,-1],\r\n            [4,2,3,0,0,-1,-1,-1,-1],\r\n            [0,0,0,0,-1,-1,-1,-1,-1],\r\n            [0,0,0,0,-1,-1,-1,-1,-1],\r\n            [0,0,0,0,-1,-1,-1,-1,-1]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,1,1],\r\n            [0,0,0,0,0,0,1,1,1],\r\n            [0,0,0,0,0,1,1,1,1],\r\n            [0,0,0,0,1,1,1,1,1],\r\n            [0,0,0,0,1,1,1,1,1],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[ [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,1,0,0,0,0],\r\n            [0,0,0,0,1,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,0],[0,1],[0,2],[0,3],[0,4],[0,8]],\r\n      //限制步数\r\n      step:23,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[11,19]],\r\n    },\r\n    Lv15:{\r\n      //动物的排列\r\n      Anim:[[0,1,2,1,2,1,2,1,0],\r\n            [0,3,4,3,4,3,4,3,0],\r\n            [0,7,7,7,4,7,7,7,0],\r\n            [0,7,7,7,3,7,7,7,0],\r\n            [0,7,7,7,5,3,7,7,0],\r\n            [0,7,7,7,3,7,7,7,0],\r\n            [0,7,7,7,2,7,7,7,0],\r\n            [0,7,7,2,5,7,7,7,0],\r\n            [0,0,7,7,2,7,7,0,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7]],\r\n      //限制步数\r\n      step:25,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[7,38]],\r\n    },\r\n    Lv16:{\r\n      //动物的排列\r\n      Anim:[[0,0,2,0,0,0,2,0,0],\r\n            [0,1,0,2,0,3,0,5,0],\r\n            [0,3,0,3,0,4,0,1,0],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [4,4,1,3,2,3,4,5,4],\r\n            [5,5,2,1,3,5,4,3,2],\r\n            [4,4,3,2,5,5,2,3,3],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [7,7,7,7,7,7,7,7,7]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,2],[0,6]],\r\n      //限制步数\r\n      step:25,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[7,27]],\r\n    },\r\n    Lv17:{\r\n      //动物的排列\r\n      Anim:[[1,0,1,0,1,0,1,0,1],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [-1,2,-1,-1,-1,-1,-1,2,-1],\r\n            [2,3,2,-1,-1,-1,2,3,2],\r\n            [0,7,0,7,0,7,0,7,0],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [7,7,7,7,7,7,7,7,7]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [2,0,2,0,0,0,2,0,2],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,0],[0,2],[0,4],[0,6],[0,8]],\r\n      //限制步数\r\n      step:25,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[7,49]],\r\n    },\r\n    Lv18:{\r\n      //动物的排列\r\n      Anim:[[0,0,3,2,1,2,3,0,0],\r\n            [2,0,7,7,7,7,7,0,0],\r\n            [2,0,7,7,7,7,7,0,0],\r\n            [0,0,7,7,7,7,7,0,0],\r\n            [0,8,8,8,8,8,8,8,0],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [7,7,7,7,2,7,7,7,7],\r\n            [7,7,7,7,2,7,7,7,7],\r\n            [7,7,7,7,7,7,7,7,7]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n       eff:[[0,0,0,0,1,3,0,0,0],\r\n            [1,0,0,0,0,0,0,0,0],\r\n            [1,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,3,0,0,0,0],\r\n            [0,0,0,0,3,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,2],[0,3],[0,4],[0,5],[0,6]],\r\n      //限制步数\r\n      step:25,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[7,60]],\r\n    },\r\n    Lv19:{\r\n      //动物的排列\r\n      Anim:[[0,0,0,0,3,0,0,0,0],\r\n            [0,0,0,0,2,0,0,0,0],\r\n            [0,0,0,7,7,7,0,0,0],\r\n            [0,0,7,2,3,2,2,0,0],\r\n            [0,7,7,7,2,7,7,7,0],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [7,7,7,7,7,7,7,7,7]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n       eff:[[0,0,0,0,4,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,4]],\r\n      //限制步数\r\n      step:25,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[7,46]],\r\n    },\r\n    Lv20:{\r\n      //动物的排列\r\n      Anim:[[0,0,2,1,3,1,2,0,0],\r\n            [0,4,2,3,4,5,3,5,0],\r\n            [3,3,5,4,2,5,4,2,4],\r\n            [4,3,7,7,4,7,7,2,2],\r\n            [5,5,0,0,2,0,0,5,4],\r\n            [4,4,3,3,2,2,5,3,3],\r\n            [7,7,3,3,4,4,3,7,7],\r\n            [0,7,2,2,4,2,3,7,0],\r\n            [0,7,7,7,7,7,7,7,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [1,1,1,1,1,1,1,1,1],\r\n            [1,1,1,1,1,1,1,1,1],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,2],[0,3],[0,4],[0,5],[0,6]],\r\n      //限制步数\r\n      step:25,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[11,32]],\r\n    },\r\n    Lv21:{\r\n      //动物的排列\r\n      Anim:[[0,7,1,1,3,2,4,7,0],\r\n            [0,7,2,2,4,4,1,7,0],\r\n            [0,7,4,4,2,4,2,7,0],\r\n            [0,7,7,7,7,7,7,7,0],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [8,8,8,7,7,7,8,8,8],\r\n            [-1,-1,-1,8,8,8,-1,-1,-1],\r\n            [-1,-1,-1,8,8,8,-1,-1,-1],\r\n            [-1,-1,-1,0,0,0,-1,-1,-1]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[11,56]],\r\n    },\r\n    Lv22:{\r\n      //动物的排列\r\n      Anim:[[0,3,0,3,0,3,0,0,0],\r\n            [1,0,1,0,1,0,1,0,0],\r\n            [0,3,0,3,0,3,0,0,0],\r\n            [1,0,1,0,1,0,1,0,0],\r\n            [7,7,7,7,7,7,7,0,0],\r\n            [7,7,7,7,7,7,7,0,0],\r\n            [7,7,7,7,7,7,7,0,0],\r\n            [7,2,7,2,7,2,7,0,2],\r\n            [2,7,2,7,2,7,2,0,2],],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟\r\n       eff:[[0,0,0,4,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,2,0,2,0,2,0,0,1],\r\n            [2,0,2,0,2,0,2,0,1]],\r\n      creat:[[0,1],[0,3],[0,5]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[2,45],[1,45]],\r\n    },\r\n    //出现大小毛球\r\n    Lv23:{\r\n      //动物的排列\r\n      Anim:[[0,0,0,1,3,2,0,0,0],\r\n            [0,0,7,3,2,3,7,0,0],\r\n            [0,1,7,7,4,7,7,4,0],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [3,2,2,7,8,7,2,2,3],\r\n            [2,7,7,7,7,7,7,7,4],\r\n            [4,7,7,7,7,7,7,7,1],\r\n            [2,3,3,1,2,2,3,3,4],\r\n            [7,7,7,7,7,7,7,7,7]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n       //特殊效果 1横2纵3T4魔力鸟  13小毛球14大毛球\r\n       eff:[[0,0,0,0,2,0,0,0,0],\r\n            [0,0,0,3,0,3,0,0,0],\r\n            [0,13,0,0,0,0,0,13,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [13,0,0,0,0,0,0,0,13],\r\n            [13,0,0,0,0,0,0,0,13],\r\n            [13,13,13,0,0,0,13,13,13],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,3],[0,4],[0,5]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块13小毛球14大毛球\r\n      target:[[13,12]],\r\n    },\r\n    Lv24:{\r\n      //动物的排列\r\n      Anim:[[7,7,7,0,1,2,2,2,2],\r\n            [-1,-1,-1,0,4,2,1,2,1],\r\n            [-1,-1,-1,0,2,4,2,1,1],\r\n            [-1,-1,-1,0,2,2,2,2,2],\r\n            [-1,-1,-1,0,0,0,7,7,7],\r\n            [-1,-1,-1,7,0,0,8,8,8],\r\n            [-1,-1,-1,7,0,0,0,0,0],\r\n            [-1,-1,-1,7,0,0,0,0,0],\r\n            [2,1,2,7,0,0,0,0,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [1,1,1,0,0,0,0,0,0],\r\n            [1,1,1,0,0,0,0,0,0],\r\n            [1,1,1,0,0,0,0,0,0],\r\n            [1,1,1,0,0,0,0,0,0],\r\n            [1,1,1,0,0,0,0,0,0],\r\n            [1,1,1,0,0,0,0,0,0],\r\n            [1,1,1,0,0,0,0,0,0]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[0,0,0,0,0,0,13,1,2],\r\n            [0,0,0,0,0,0,13,13,13],\r\n            [0,0,0,0,0,0,13,13,13],\r\n            [0,0,0,0,0,0,13,13,13],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [13,13,13,0,0,0,0,0,0]],\r\n      creat:[[0,0],[0,1],[0,2],[0,4],[0,5],[0,6],[0,7],[0,8]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[11,21]],\r\n    },\r\n    Lv25:{\r\n      //动物的排列\r\n      Anim:[[2,3,2,3,0,0,0,0,7],\r\n            [3,2,3,2,0,0,0,1,1],\r\n            [7,7,7,7,7,0,7,1,7],\r\n            [-1,-1,-1,-1,7,7,1,7,1],\r\n            [-1,-1,-1,-1,8,1,8,1,8],\r\n            [-1,-1,-1,-1,8,8,1,8,1],\r\n            [-1,-1,-1,-1,8,1,8,1,0],\r\n            [-1,-1,-1,-1,8,8,1,0,0],\r\n            [-1,-1,-1,-1,8,1,0,0,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[1,0,1,0,0,0,0,0,0],\r\n            [0,1,0,1,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,13,0,13],\r\n            [0,0,0,0,0,13,0,13,0],\r\n            [0,0,0,0,0,0,13,0,13],\r\n            [0,0,0,0,0,13,0,13,0],\r\n            [0,0,0,0,0,0,13,0,0],\r\n            [0,0,0,0,0,13,0,0,0]],\r\n      creat:[[0,0],[0,1],[0,2],[0,3],[0,8]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[13,10]],\r\n    },\r\n    Lv26:{\r\n      //动物的排列\r\n      Anim:[[1,0,0,0,0,0,0,0,3],\r\n            [2,1,0,0,0,0,0,3,4],\r\n            [1,2,1,0,0,0,3,4,3],\r\n            [1,2,1,2,0,3,4,3,4],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [0,7,7,7,7,7,7,7,0],\r\n            [0,0,7,7,7,7,7,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,0],[0,8]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[7,30]],\r\n    },\r\n    Lv27:{\r\n      //动物的排列\r\n      Anim:[[7,2,7,4,5,4,7,2,7],\r\n            [1,7,3,7,4,7,3,7,1],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [7,7,7,7,7,7,7,7,7]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[0,2,0,0,1,0,0,2,0],\r\n            [2,0,2,0,1,0,2,0,2],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,8]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[2,50],[1,50]],\r\n    },\r\n    Lv28:{\r\n      //动物的排列\r\n      Anim:[[1,1,2,2,0,7,7,7,7],\r\n            [3,3,4,4,0,2,2,3,2],\r\n            [5,5,1,1,0,1,5,2,1],\r\n            [3,3,2,2,0,3,4,3,1],\r\n            [4,4,1,1,0,3,4,3,3],\r\n            [2,2,1,1,0,1,2,2,5],\r\n            [3,3,4,4,0,1,2,2,1],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [1,1,1,1,0,1,1,1,1],\r\n            [1,1,1,1,0,1,1,1,1],\r\n            [1,1,1,1,0,1,1,1,1],\r\n            [1,1,1,1,0,1,1,1,1],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [13,13,13,13,0,0,0,0,0],\r\n            [13,13,13,13,0,0,0,0,0],\r\n            [13,13,13,13,0,0,0,0,0],\r\n            [13,13,13,13,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,0],[0,1],[0,2],[0,3],[0,5],[0,6],[0,7],[0,8]],\r\n      //限制步数\r\n      step:25,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[11,32]],\r\n    },\r\n    Lv29:{\r\n      //动物的排列\r\n      Anim:[[0,7,1,2,3,2,2,7,0],\r\n            [7,7,4,1,2,4,2,7,7],\r\n            [7,7,7,2,1,2,7,7,7],\r\n            [-1,7,7,7,2,7,7,7,-1],\r\n            [2,-1,7,7,7,7,7,-1,2],\r\n            [7,2,-1,7,7,7,-1,2,7],\r\n            [0,7,2,-1,7,-1,2,7,0],\r\n            [0,0,7,2,-1,2,7,0,0],\r\n            [0,0,7,7,2,7,7,0,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7]],\r\n      //限制步数\r\n      step:25,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[7,37]],\r\n    },\r\n    Lv30:{\r\n      //动物的排列\r\n      Anim:[[0,7,2,3,2,3,2,7,0],\r\n            [0,7,3,2,3,2,3,7,0],\r\n            [0,7,2,3,2,3,2,7,0],\r\n            [0,7,7,7,0,7,7,7,0],\r\n            [0,0,0,0,7,0,0,0,0],\r\n            [0,0,0,-1,-1,-1,0,0,0],\r\n            [0,0,-1,-1,-1,-1,-1,0,0],\r\n            [0,-1,-1,-1,-1,-1,-1,-1,0],\r\n            [-1,-1,-1,-1,-1,-1,-1,-1,-1]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,1,0,0,0,0],\r\n            [0,0,0,1,1,1,0,0,0],\r\n            [0,0,1,1,1,1,1,0,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [1,1,1,1,1,1,1,1,1]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,2,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[11,25]],\r\n    },\r\n    Lv31:{\r\n      //动物的排列\r\n      Anim:[[0,0,8,1,3,1,8,0,0],\r\n            [0,8,8,7,2,7,8,8,0],\r\n            [0,1,7,2,5,2,7,2,0],\r\n            [0,7,2,5,3,5,2,7,0],\r\n            [0,1,7,2,5,2,7,2,0],\r\n            [4,8,8,7,2,7,8,8,5],\r\n            [0,0,8,3,7,3,8,0,0],\r\n            [0,0,3,0,5,0,3,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,1,1,1,1,1,0,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [1,1,1,1,1,1,1,1,1],\r\n            [0,0,1,1,1,1,1,0,0],\r\n            [0,0,1,0,1,0,1,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,2],[0,3],[0,4],[0,5],[0,6]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[11,50]],\r\n    },\r\n    Lv32:{\r\n      //动物的排列\r\n      Anim:[[0,0,7,7,0,7,7,0,0],\r\n            [0,7,7,8,8,8,7,7,0],\r\n            [7,7,7,8,8,8,7,7,7],\r\n            [0,7,7,8,8,8,7,7,0],\r\n            [0,0,7,8,8,8,7,0,0],\r\n            [0,7,-1,-1,8,-1,-1,7,0],\r\n            [7,-1,-1,-1,8,-1,-1,-1,7],\r\n            [7,2,-1,-1,1,-1,-1,2,7],\r\n            [2,7,2,0,1,0,2,7,2]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,1,1,0,1,1,0,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [1,1,1,1,1,1,1,1,1],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,0,1,1,1,1,1,0,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [1,1,1,1,1,1,1,1,1],\r\n            [1,1,1,1,1,1,1,1,1],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,2,0,0,1,0,0,2,0],\r\n            [2,0,2,0,1,0,2,0,2]],\r\n      creat:[[0,2],[0,3],[0,5],[0,6]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[11,57]],\r\n    },\r\n    Lv33:{\r\n      //动物的排列\r\n      Anim:[[0,0,0,1,2,1,0,0,0],\r\n            [0,0,0,2,1,2,0,0,0],\r\n            [0,0,0,1,2,1,0,0,0],\r\n            [0,0,0,7,7,7,0,0,0],\r\n            [0,0,7,-1,-1,-1,7,0,0],\r\n            [0,7,2,7,2,7,2,7,0],\r\n            [7,2,7,2,7,2,7,2,7],\r\n            [1,7,2,7,2,7,2,7,2],\r\n            [7,2,7,2,7,2,7,2,7]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,13,0,13,0,13,0,0],\r\n            [0,13,0,13,0,13,0,13,0],\r\n            [13,0,13,0,13,0,13,0,13],\r\n            [0,13,0,13,0,13,0,13,0]],\r\n      creat:[[0,3],[0,4],[0,5]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[13,16],[7,23]],\r\n    },\r\n    Lv34:{\r\n      //动物的排列\r\n      Anim:[[0,0,8,2,7,2,8,0,0],\r\n            [0,8,8,7,3,7,8,8,0],\r\n            [0,1,7,3,2,3,7,3,0],\r\n            [0,7,3,2,4,2,3,7,0],\r\n            [0,1,7,3,2,3,7,3,0],\r\n            [3,8,8,7,3,7,8,8,1],\r\n            [0,0,8,4,7,4,8,0,0],\r\n            [3,0,2,0,4,0,3,0,3],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,1,1,1,1,1,0,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [1,1,1,1,1,1,1,1,1],\r\n            [0,0,1,1,1,1,1,0,0],\r\n            [1,0,1,0,1,0,1,0,1],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,2],[0,3],[0,4],[0,5],[0,6]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[11,52]],\r\n    },\r\n    Lv35:{\r\n      //动物的排列\r\n      Anim:[[2,0,0,0,0,0,0,0,1],\r\n            [2,2,0,0,0,0,0,1,1],\r\n            [7,7,7,7,7,7,7,7,7],\r\n            [-1,-1,-1,-1,-1,-1,-1,-1,-1],\r\n            [-1,-1,-1,-1,-1,-1,-1,-1,-1],\r\n            [-1,-1,-1,-1,-1,-1,-1,-1,-1],\r\n            [-1,-1,-1,-1,-1,-1,-1,-1,-1],\r\n            [-1,-1,-1,-1,-1,-1,-1,-1,-1],\r\n            [0,-1,-1,-1,-1,-1,-1,-1,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [1,1,1,1,1,1,1,1,1],\r\n            [1,1,1,1,1,1,1,1,1],\r\n            [1,1,1,1,1,1,1,1,1],\r\n            [1,1,1,1,1,1,1,1,1],\r\n            [1,1,1,1,1,1,1,1,1],\r\n            [1,1,1,1,1,1,1,1,1],\r\n            [0,1,1,1,1,1,1,1,0]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[0,0,0,0,0,0,0,0,0],\r\n            [2,2,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,0],[0,8],[2,2],[2,3],[2,4],[2,5],[2,6]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[11,61]],\r\n    },\r\n    Lv36:{\r\n      //动物的排列\r\n      Anim:[[0,7,1,2,3,2,2,7,0],\r\n            [7,7,4,1,2,4,2,7,7],\r\n            [8,7,7,2,1,2,7,7,8],\r\n            [-1,8,7,7,2,7,7,8,-1],\r\n            [2,-1,8,7,7,7,8,-1,2],\r\n            [7,2,-1,8,7,8,-1,2,7],\r\n            [0,7,2,-1,8,-1,2,7,0],\r\n            [0,0,7,2,-1,2,7,0,0],\r\n            [0,0,7,7,2,7,7,0,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [13,0,0,0,0,0,0,0,13],\r\n            [0,13,0,0,0,0,0,13,0],\r\n            [0,0,13,0,0,0,13,0,0],\r\n            [0,0,0,13,0,13,0,0,0],\r\n            [0,0,0,0,13,0,0,0,0]],\r\n      creat:[[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[7,37],[13,9]],\r\n    },\r\n    Lv37:{\r\n      //动物的排列\r\n      Anim:[[0,8,1,2,4,1,3,8,0],\r\n            [0,8,1,3,1,3,2,8,0],\r\n            [0,8,8,8,3,8,8,8,0],\r\n            [0,8,3,2,0,2,3,8,0],\r\n            [0,0,0,0,7,0,0,0,0],\r\n            [0,0,0,-1,-1,-1,0,0,0],\r\n            [0,8,-1,-1,-1,-1,-1,8,0],\r\n            [0,8,-1,-1,-1,-1,-1,8,0],\r\n            [8,-1,-1,-1,-1,-1,-1,-1,8]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,2,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[6,1],[6,7]],\r\n      //限制步数\r\n      step:30,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[7,19]],\r\n    },\r\n     \r\n    Lv38:{\r\n      //-1空格子1红狐狸,2海马，3青蛙，4小黄鸡，5小紫猫  6魔力鸟（动物）7单层冰阻碍8双层冰阻碍9三层冰阻碍\r\n      //动物的排列\r\n      Anim:[[0,0,3,0,0,0,0,3,0],\r\n            [0,1,3,1,0,0,3,5,3],\r\n            [3,3,1,3,2,0,0,3,0],\r\n            [0,3,1,3,2,2,0,3,0],\r\n            [0,0,3,2,0,2,3,1,1],\r\n            [0,0,0,2,2,5,3,3,1],\r\n            [0,3,0,0,2,3,1,3,3],\r\n            [3,5,3,3,1,3,1,5,5],\r\n            [0,3,0,0,1,1,3,5,5]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,1,0,0,0,0,0,0],\r\n            [0,1,1,1,0,0,0,0,0],\r\n            [1,1,1,1,1,0,0,0,0],\r\n            [0,1,1,1,0,0,0,0,0],\r\n            [0,0,1,0,0,0,2,0,0],\r\n            [0,0,0,0,0,2,2,2,0],\r\n            [0,0,0,0,2,2,2,2,2],\r\n            [0,0,0,0,0,2,2,2,0],\r\n            [0,0,0,0,0,0,2,0,0]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,2],[0,7],[6,1]],\r\n      //限制步数\r\n      step:28,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[11,39]],\r\n    },\r\n    Lv39:{\r\n      //-1空格子1红狐狸,2海马，3青蛙，4小黄鸡，5小紫猫  6魔力鸟（动物）7单层冰阻碍8双层冰阻碍9三层冰阻碍\r\n      //动物的排列\r\n      Anim:[[1,0,1,0,1,0,1,0,1],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,4,1,2,1,4,0,0],\r\n            [1,1,2,0,1,0,5,1,1],\r\n            [1,1,2,2,1,5,5,1,1],\r\n            [3,3,5,5,3,2,2,3,3],\r\n            [3,3,5,5,3,2,2,3,3],\r\n            [0,0,1,2,4,5,1,0,0],\r\n            [1,0,0,0,0,0,0,0,1]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[1,0,1,0,1,0,1,0,1],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,1,1,1,0,0,0],\r\n            [1,1,1,0,1,0,1,1,1],\r\n            [1,1,1,1,1,1,1,1,1],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,1,1,1,1,1,1,1,0],\r\n            [0,0,1,0,0,0,1,0,0],\r\n            [1,0,0,0,0,0,0,0,1]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,4,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,0],[0,2],[0,4],[0,6],[0,8],[2,2],[2,3],[2,4],[2,5],[2,6],[3,0],[3,8],[8,0],[8,8]],\r\n      //限制步数\r\n      step:20,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块\r\n      target:[[11,42]],\r\n    },\r\n    Lv40:{\r\n      //-1空格子1红狐狸,2海马，3青蛙，4小黄鸡，5小紫猫  6魔力鸟（动物）7单层冰阻碍8双层冰阻碍9三层冰阻碍\r\n     //动物的排列\r\n     Anim:[[0,0,5,2,5,2,5,0,0],\r\n           [0,0,0,0,4,0,0,0,0],\r\n           [4,4,3,3,4,5,5,2,2],\r\n           [4,4,3,3,2,5,5,2,2],\r\n           [2,2,5,5,1,3,3,1,1],\r\n           [2,2,5,5,1,3,3,1,1],\r\n           [0,0,0,0,2,0,0,0,0],\r\n           [0,0,0,2,1,2,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0]],\r\n     //冰块的位置  冰块1 双重冰块2\r\n     //冰块的位置  冰块1 双重冰块2\r\n      ice:[[0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,1,0,0,0,0],\r\n           [0,0,0,0,4,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0]],\r\n     creat:[[0,2],[0,3],[0,4],[0,5],[0,6],[2,0],[2,1],[2,2],[2,6],[2,7],[2,8]],\r\n     //限制步数\r\n     step:23,\r\n     //一星值\r\n     one_star:2000,\r\n     //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n     //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n     //11冰块12双重冰块\r\n     target:[[2,33],[3,45]],\r\n   },\r\n   Lv41:{\r\n      //-1空格子1红狐狸,2海马，3青蛙，4小黄鸡，5小紫猫  6魔力鸟（动物）7单层冰阻碍8双层冰阻碍9三层冰阻碍\r\n     //动物的排列\r\n     Anim:[[0,0,0,2,3,2,0,0,0],\r\n           [0,0,0,3,2,3,0,0,0],\r\n           [0,0,0,2,3,2,0,0,0],\r\n           [0,0,0,7,7,7,0,0,0],\r\n           [1,1,7,-1,-1,-1,7,5,5],\r\n           [1,7,7,-1,-1,-1,7,7,3],\r\n           [7,2,7,7,7,7,7,1,7],\r\n           [2,7,7,7,7,7,7,7,2],\r\n           [7,2,7,7,7,7,7,1,7]],\r\n     //冰块的位置  冰块1 双重冰块2\r\n     //冰块的位置  冰块1 双重冰块2\r\n      ice:[[0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [13,13,0,0,0,0,0,13,13],\r\n           [13,0,0,0,0,0,0,0,13],\r\n           [0,13,0,0,0,0,0,13,0],\r\n           [13,0,0,0,0,0,0,0,13],\r\n           [0,13,0,0,0,0,0,13,0]],\r\n     creat:[[0,4],[0,5],[0,3],[4,0],[4,1],[4,7],[4,8]],\r\n     //限制步数\r\n     step:25,\r\n     //一星值\r\n     one_star:2000,\r\n     //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n     //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n     //11冰块12双重冰块13小毛球14大毛球\r\n     target:[[13,12]],\r\n   },\r\n   Lv42:{\r\n      //-1空格子1红狐狸,2海马，3青蛙，4小黄鸡，5小紫猫  6魔力鸟（动物）7单层冰阻碍8双层冰阻碍9三层冰阻碍\r\n     //动物的排列\r\n     Anim:[[0,0,0,3,2,3,2,3,2],\r\n           [0,0,0,2,3,2,3,2,3],\r\n           [0,0,0,1,4,1,4,1,4],\r\n           [0,0,0,4,1,4,1,4,1],\r\n           [7,7,0,9,9,9,9,9,9],\r\n           [-1,-1,0,-1,-1,-1,-1,-1,-1],\r\n           [-1,-1,0,-1,-1,-1,-1,-1,-1],\r\n           [-1,-1,-1,-1,-1,-1,-1,-1,-1],\r\n           [2,3,-1,-1,-1,-1,-1,-1,-1]],\r\n     //冰块的位置  冰块1 双重冰块2\r\n     //冰块的位置  冰块1 双重冰块2\r\n      ice:[[0,0,0,1,1,1,1,1,1],\r\n           [0,0,0,1,1,1,1,1,1],\r\n           [0,0,0,1,1,1,1,1,1],\r\n           [0,0,0,1,1,1,1,1,1],\r\n           [1,1,0,1,1,1,1,1,1],\r\n           [1,1,0,1,1,1,1,1,1],\r\n           [1,1,0,1,1,1,1,1,1],\r\n           [1,1,1,1,1,1,1,1,1],\r\n           [1,1,1,1,1,1,1,1,1]],\r\n      //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [2,2,0,0,0,0,0,0,0]],\r\n     creat:[[0,3],[0,4],[0,5],[0,6],[0,7],[0,8],[4,0],[4,1]],\r\n     //限制步数\r\n     step:25,\r\n     //一星值\r\n     one_star:2000,\r\n     //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n     //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n     //11冰块12双重冰块13小毛球14大毛球\r\n     target:[[11,66]],\r\n   },\r\n   Lv43:{\r\n      //-1空格子1红狐狸,2海马，3青蛙，4小黄鸡，5小紫猫  6魔力鸟（动物）7单层冰阻碍8双层冰阻碍9三层冰阻碍\r\n     //动物的排列\r\n     Anim:[[2,5,2,5,2,5,2,5,2],\r\n           [5,2,5,2,5,2,5,2,5],\r\n           [2,5,2,5,2,5,2,5,2],\r\n           [9,9,9,9,9,9,9,9,9],\r\n           [-1,0,9,8,8,8,9,0,-1],\r\n           [-1,0,9,8,8,8,9,0,-1],\r\n           [-1,0,9,8,8,8,9,-1,-1],\r\n           [-1,0,9,9,9,9,9,-1,-1],\r\n           [-1,-1,9,9,9,9,9,-1,-1]],\r\n     //冰块的位置  冰块1 双重冰块2\r\n     //冰块的位置  冰块1 双重冰块2\r\n      ice:[[0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0]],\r\n      //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0]],\r\n     creat:[[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,8]],\r\n     //限制步数\r\n     step:40,\r\n     //一星值\r\n     one_star:2000,\r\n     //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n     //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n     //11冰块12双重冰块13小毛球14大毛球\r\n     target:[[7,34]],\r\n   },\r\n   Lv44:{\r\n      //-1空格子1红狐狸,2海马，3青蛙，4小黄鸡，5小紫猫  6魔力鸟（动物）7单层冰阻碍8双层冰阻碍9三层冰阻碍\r\n     //动物的排列\r\n     Anim:[[4,0,3,5,3,4,8,7,7],\r\n           [5,0,5,1,1,3,8,7,7],\r\n           [4,0,4,1,5,1,8,7,7],\r\n           [1,0,7,7,7,7,8,7,7],\r\n           [1,0,-1,-1,-1,-1,8,7,7],\r\n           [3,0,-1,-1,-1,-1,8,7,7],\r\n           [5,0,-1,-1,-1,-1,8,7,7],\r\n           [4,0,7,7,7,7,7,7,7],\r\n           [5,0,7,7,7,7,7,7,7]],\r\n     //冰块的位置  冰块1 双重冰块2\r\n     //冰块的位置  冰块1 双重冰块2\r\n      ice:[[2,0,2,2,2,2,2,2,2],\r\n           [2,0,2,2,2,2,2,2,2],\r\n           [2,0,2,2,2,2,2,2,2],\r\n           [2,0,2,2,2,2,2,2,2],\r\n           [2,0,2,2,2,2,2,2,2],\r\n           [2,0,2,2,2,2,2,2,2],\r\n           [2,0,2,2,2,2,2,2,2],\r\n           [2,0,2,2,2,2,2,2,2],\r\n           [2,0,2,2,2,2,2,2,2]],\r\n      //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0]],\r\n     creat:[[0,0],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,8]],\r\n     //限制步数\r\n     step:50,\r\n     //一星值\r\n     one_star:2000,\r\n     //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n     //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n     //11冰块12双重冰块13小毛球14大毛球\r\n     target:[[11,144]],\r\n   },\r\n   Lv45:{\r\n      //-1空格子1红狐狸,2海马，3青蛙，4小黄鸡，5小紫猫  6魔力鸟（动物）7单层冰阻碍8双层冰阻碍9三层冰阻碍\r\n     //动物的排列\r\n     Anim:[[0,0,1,4,1,4,1,0,0],\r\n           [0,0,4,1,4,1,4,0,0],\r\n           [0,0,1,4,1,4,1,0,0],\r\n           [8,8,8,8,8,8,8,8,8],\r\n           [8,3,3,4,4,4,3,3,8],\r\n           [8,3,3,4,3,4,3,3,8],\r\n           [8,2,2,0,1,0,2,2,8],\r\n           [8,2,2,4,1,4,2,2,8],\r\n           [8,8,8,8,8,8,8,8,8]],\r\n     //冰块的位置  冰块1 双重冰块2\r\n     //冰块的位置  冰块1 双重冰块2\r\n      ice:[[0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [2,2,2,2,2,2,2,2,2],\r\n           [2,2,2,2,2,2,2,2,2],\r\n           [2,2,2,2,2,2,2,2,2],\r\n           [2,2,2,0,2,0,2,2,2],\r\n           [2,2,2,2,2,2,2,2,2],\r\n           [2,2,2,2,2,2,2,2,2]],\r\n      //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n      eff:[[0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0]],\r\n     creat:[[0,2],[0,3],[0,4],[0,5],[0,6],[3,0],[3,8]],\r\n     //限制步数\r\n     step:25,\r\n     //一星值\r\n     one_star:2000,\r\n     //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n     //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n     //11冰块12双重冰块13小毛球14大毛球\r\n     target:[[11,104]],\r\n   },\r\n   Lv46:{\r\n      //-1空格子1红狐狸,2海马，3青蛙，4小黄鸡，5小紫猫  6魔力鸟（动物）7单层冰阻碍8双层冰阻碍9三层冰阻碍\r\n     //动物的排列\r\n     Anim:[[3,1,5,5,2,8,5,8,1],\r\n           [1,3,5,5,8,3,8,2,8],\r\n           [2,1,4,4,1,8,5,8,5],\r\n           [2,1,4,4,8,3,8,2,8],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [7,7,7,7,7,7,7,7,7],\r\n           [7,7,7,7,-1,-1,-1,-1,-1],\r\n           [8,8,8,8,-1,-1,-1,-1,-1],\r\n           [8,8,8,8,-1,-1,-1,-1,-1]],\r\n     //冰块的位置  冰块1 双重冰块2\r\n     //冰块的位置  冰块1 双重冰块2\r\n      ice:[[2,2,2,2,2,2,2,2,2],\r\n           [2,2,2,2,2,2,2,2,2],\r\n           [2,2,2,2,2,2,2,2,2],\r\n           [2,2,2,2,2,2,2,2,2],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [2,2,2,2,2,2,2,2,2],\r\n           [2,2,2,2,2,2,2,2,2],\r\n           [2,2,2,2,2,2,2,2,2],\r\n           [2,2,2,2,2,2,2,2,2]],\r\n      //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n      eff:[[0,1,0,0,0,0,0,0,0],\r\n           [1,0,0,0,0,0,0,0,0],\r\n           [0,1,0,0,0,0,0,0,0],\r\n           [0,1,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0],\r\n           [0,0,0,0,0,0,0,0,0]],\r\n     creat:[[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,8],[5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7],[5,8]],\r\n     //限制步数\r\n     step:45,\r\n     //一星值\r\n     one_star:2000,\r\n     //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n     //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n     //11冰块12双重冰块13小毛球14大毛球\r\n     target:[[11,144]],\r\n   },\r\n    Lv100:{\r\n       //-1空格子1红狐狸,2海马，3青蛙，4小黄鸡，5小紫猫  6魔力鸟（动物）7单层冰阻碍8双层冰阻碍9三层冰阻碍\r\n      //动物的排列\r\n      Anim:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      //冰块的位置  冰块1 双重冰块2\r\n      //冰块的位置  冰块1 双重冰块2\r\n       ice:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n       //特殊效果 1横2纵3T4魔力鸟13小毛球14大毛球\r\n       eff:[[0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0]],\r\n      creat:[[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[6,1],[6,7]],\r\n      //限制步数\r\n      step:25,\r\n      //一星值\r\n      one_star:2000,\r\n      //目标(二维数组，第一个是消除的种类，第二个是消除的个数)\r\n      //0狗1狗,2猴子，3鸟，4猫，5羊 6冰狗7单层蛋糕8双层蛋糕\r\n      //11冰块12双重冰块13小毛球14大毛球\r\n      target:[[7,30]],\r\n    },\r\n}","var targetManager = require('targetManager');\r\nconst { UIHelp } = require('../UIHelp');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //道具数量显示框\r\n        pronum_label: [cc.Label],\r\n        //道具节点\r\n        propnode: [cc.Node],\r\n        //音效\r\n        music: {\r\n            type: cc.AudioClip,\r\n            default: [],\r\n        },\r\n        //商店预制体\r\n        shop: null,\r\n        ShopPrefab: cc.Prefab,\r\n    },\r\n    onLoad() {\r\n        cc.ZL.PropMgr = this;\r\n        this.showProp();\r\n        this.num = 0;\r\n    },\r\n    update(dt) {\r\n        this.showProp();\r\n    },\r\n    //显示道具信息\r\n    showProp() {\r\n        for (var i = 0; i < this.pronum_label.length; i++) {\r\n            if (i == 5) {\r\n                this.pronum_label[5].string = gamedata.prop[4];\r\n            } else {\r\n                this.pronum_label[i].string = gamedata.prop[i + 1];\r\n            }\r\n        }\r\n    },\r\n    //道具点击\r\n    PropBtn(target, event) {\r\n        cc.ZL.musicMgr.MyplayMusic(0, false);\r\n        event = parseInt(event);\r\n        for (var i = 0; i < this.propnode.length; i++) {\r\n            this.propnode[i].stopAllActions();\r\n            this.propnode[i].scale = 0.7;\r\n        }\r\n        if (gamedata.prop[event] <= 0) {\r\n            if (this.shop == null) {\r\n                this.shop = cc.instantiate(this.ShopPrefab);\r\n                this.node.parent.addChild(this.shop);\r\n                //this.shop.setPosition(0,1000);\r\n            }\r\n            this.shop.getComponent('Shop').Open();\r\n            return;\r\n        }\r\n        //this.playMusic(0);\r\n        if (gamedata.is_prop == parseInt(event)) {\r\n            gamedata.is_prop = 0;\r\n            target.currentTarget.scale = 0.7;\r\n            target.currentTarget.stopAllActions();\r\n        } else {\r\n            if (parseInt(event) == 4) {\r\n                this.AddStep();\r\n                return;\r\n            } else if (parseInt(event) == 3) {\r\n                this.AnimHuan();\r\n                // cc.ZL.animMgr.replaceAll();\r\n                // this.changeData(3);\r\n                // gamedata.is_prop = 0;\r\n                return;\r\n            }\r\n            gamedata.is_prop = parseInt(event);\r\n            this.selecteffect(target.currentTarget);\r\n        }\r\n    },\r\n    AnimHuan() {\r\n        // cc.ZL.animMgr.replaceAll();\r\n        // this.changeData(3);\r\n        // gamedata.is_prop = 0;\r\n\r\n        let preas = {\r\n            rid: gamedata.rid,\r\n            token: gamedata.token,\r\n            gid: 10002,\r\n            num: 1,\r\n        };\r\n        // TODO:先注释掉\r\n        // UIHelp.network.httpConnect_post_async('game/xiaoxiaole/consumeProp', preas, this.AnimHuanCallBack.bind(this));\r\n        this.AnimHuanCallBack({\r\n            code: '200',\r\n            message: '成功',\r\n        });\r\n    },\r\n\r\n    AnimHuanCallBack(msg) {\r\n        console.log('AnimHuanCallBack===>', msg);\r\n        if (msg.code == 200) {\r\n            cc.ZL.animMgr.replaceAll();\r\n            this.changeData(3);\r\n            gamedata.is_prop = 0;\r\n        } else {\r\n            utils.addTips(msg.message);\r\n        }\r\n    },\r\n    //加五步\r\n    AddStep() {\r\n        let preas = {\r\n            rid: gamedata.rid,\r\n            token: gamedata.token,\r\n            gid: 10003,\r\n            num: 1,\r\n        };\r\n        // TODO:先注释\r\n        UIHelp.network.httpConnect_post_async('game/xiaoxiaole/consumeProp', preas, this.AddStepCallBack.bind(this));\r\n        // gamedata.is_prop = 0;\r\n        // cc.ZL.UIMgr.AddFiveStep();\r\n        // this.changeData(6);\r\n    },\r\n\r\n    AddStepCallBack(msg) {\r\n        console.log('AddStepCallBack===>', msg);\r\n        if (msg.code == 200) {\r\n            gamedata.is_prop = 0;\r\n            cc.ZL.UIMgr.AddFiveStep();\r\n            this.changeData(6);\r\n        } else {\r\n            utils.addTips(msg.message);\r\n        }\r\n    },\r\n    //选中特效\r\n    selecteffect(node) {\r\n        var e1 = cc.scaleTo(0.5, 0.8, 0.8);\r\n        var e2 = cc.scaleTo(0.5, 0.6, 0.6);\r\n        var seq = cc.sequence([e1, e2]);\r\n        var rep = cc.repeatForever(seq);\r\n        node.runAction(rep);\r\n    },\r\n    //道具使用结束\r\n    propFinished(num) {\r\n        gamedata.is_prop = 0;\r\n        //this.playMusic(0);\r\n        for (var i = 0; i < this.propnode.length; i++) {\r\n            this.propnode[i].stopAllActions();\r\n            this.propnode[i].scale = 0.7;\r\n        }\r\n        this.changeData(num);\r\n    },\r\n    //更改数据\r\n    changeData(num) {\r\n        num = parseInt(num);\r\n        this.num = num;\r\n        if (num == 6) {\r\n            gamedata.prop[4] -= 1;\r\n        } else {\r\n            gamedata.prop[num] -= 1;\r\n        }\r\n        this.pronum_label[num - 1].string = gamedata.prop[num];\r\n        gamedata.bc_prop(num);\r\n        // let gid;\r\n        // if (num == 1) {\r\n        //     gid = 10001\r\n        // } else if (num == 3) {\r\n        //     gid = 10002\r\n        // } else if (num == 6) {\r\n        //     gid = 10003\r\n        // }\r\n    },\r\n    //播放音效\r\n    playMusic(num) {\r\n        if (gamedata.music) {\r\n            cc.audioEngine.play(this.music[num], false, 1);\r\n        }\r\n    },\r\n});\r\n","// Learn TypeScript:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport { Utilities } from \"winjs\";\nimport item_rank from \"./item_rank\";\nimport { UIHelp } from \"./UIHelp\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class rankLayer extends cc.Component {\n\n    @property({type: cc.Prefab, displayName: '排行item'})\n    item: cc.Prefab = null;\n    @property({type: cc.Node, displayName: '关卡Label'})\n    lab_guanka: cc.Node = null;\n    @property({type: cc.Node, displayName: '积分Label'})\n    lab_jifen: cc.Node = null;\n\n    @property({type: cc.Label, displayName: '排名'})\n    rank: cc.Label = null;\n    @property({type: cc.Sprite, displayName: '头像'})\n    icon: cc.Sprite = null;\n    @property({type: cc.Label, displayName: '昵称'})\n    nickname: cc.Label = null;\n    @property({type: cc.Label, displayName: '分数'})\n    fen: cc.Label = null;\n\n    @property({type: cc.Node, displayName: '滑块content'})\n    content: cc.Node = null;\n\n\n    tag1: number = 0;\n    tag2: number = 0;\n    start () {\n        this.onGetData();\n    }\n\n    onGetData() {\n        let params = {\n            rid: gamedata.rid,\n            token: gamedata.token,\n            type: 0\n        }\n        utils.ShowLoading();\n        UIHelp.network.httpSend('game/xiaoxiaole/getGralRankList', params, this.GetCallBack.bind(this))\n    }\n\n    GetCallBack(msg) {\n        console.log('rank===>', msg);\n        utils.HideLoading();\n        if(msg.code == 200) {\n            this.onStartUser(msg);\n            if(msg.data.list.length > 0) {\n                this.content.removeAllChildren();\n                for(let a = 0; a < msg.data.list.length; a++) {\n                    let node = cc.instantiate(this.item);\n                    node.getComponent(item_rank).onStartInfo(msg.data.list[a]);\n                    node.parent = this.content;\n                }\n            }\n        }else{\n            utils.addTips(msg.message);\n        }\n    }\n\n    onStartUser(msg) {\n        msg.data.rank_num? this.rank.string = msg.data.rank_num : this.rank.node.active = false;\n        if(msg.data.headimage) {\n            cc.loader.load(msg.data.headimage, (err, img) => {\n                if(err) {\n                    utils.addTips(\"头像加载失败\")\n                }\n                let sprite = new cc.SpriteFrame(img);\n                this.icon.spriteFrame = sprite;\n            })\n        }else{\n            this.icon.node.active = false;\n        }\n        let name;\n        if(msg.data.nickname.length > 6) {\n            name = msg.data.nickname.slice(0,6) + '...';\n        }else{\n            name = msg.data.nickname;\n        }\n        msg.data.nickname?  this.nickname.string = name : this.nickname.node.active = false;\n        msg.data.points? this.fen.string = msg.data.points : this.fen.node.active = false;\n    }\n\n    onClickZhiBo() {\n        this.tag1 = 0;\n        this.onSelectTag();\n    }\n\n    onClickPingTai() {\n        this.tag1 = 1;\n        this.onSelectTag();\n    }\n\n    onClickJiFen() {\n        this.tag2 = 0;\n        this.lab_jifen.active = true;\n        this.lab_guanka.active = false;\n        this.onSelectTag();\n    }\n\n    onClickGuanKa() {\n        this.tag2 = 1;\n        this.lab_jifen.active = false;\n        this.lab_guanka.active = true;\n        this.onSelectTag();\n    }\n\n    onSelectTag() {\n        if(this.tag1 == 0) {\n            if(this.tag2 == 0) {\n                let params = {\n                    rid: gamedata.rid,\n                    token: gamedata.token,\n                    type: 0\n                }\n                utils.ShowLoading();\n                UIHelp.network.httpSend('game/xiaoxiaole/getGralRankList', params, this.GetCallBack.bind(this))\n                \n            }else{\n                let params = {\n                    rid: gamedata.rid,\n                    token: gamedata.token,\n                    type: 0\n                }\n                utils.ShowLoading();\n                UIHelp.network.httpSend('game/xiaoxiaole/getLevelRankList', params, this.GetCallBack.bind(this))\n            }\n        }else{\n            if(this.tag2 == 0) {\n                let params = {\n                    rid: gamedata.rid,\n                    token: gamedata.token,\n                    type: 1\n                }\n                utils.ShowLoading();\n                UIHelp.network.httpSend('game/xiaoxiaole/getGralRankList', params, this.GetCallBack.bind(this))\n            }else{\n                let params = {\n                    rid: gamedata.rid,\n                    token: gamedata.token,\n                    type: 1\n                }\n                utils.ShowLoading();\n                UIHelp.network.httpSend('game/xiaoxiaole/getLevelRankList', params, this.GetCallBack.bind(this))\n            }\n        }\n    }\n\n    onClose() {\n        if(cc.ZL.Level){\n            cc.ZL.Level.closeMask();\n        }\n        this.node.removeFromParent(true);\n    }\n\n    // update (dt) {}\n}\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    start () {\r\n        var fn=cc.fadeTo(0.5,100);\r\n        var fn1=cc.fadeTo(0.5,255);\r\n        var seq=cc.sequence([fn,fn1]);//顺序执行\r\n        var rep=cc.repeatForever(seq);//一直重复执行seq\r\n        this.node.runAction(rep);\r\n        this.node.active=false;\r\n    },\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //图片纹理\r\n        spr:[cc.SpriteFrame],\r\n        //ICE对应纹理\r\n        icespr:[cc.SpriteFrame],\r\n        //特效纹理\r\n        Animspr:[cc.SpriteFrame],\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        if(cc.ZL==null){\r\n            cc.ZL={};\r\n        }\r\n        cc.ZL.sprMgr=this;\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","const { UIHelp } = require('../UIHelp');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        targetList: [cc.Node],\r\n        animList: [cc.Node],\r\n        //胜利面板\r\n        scuessPrefab: cc.Prefab,\r\n        //失败面板\r\n        EndPrefab: cc.Prefab,\r\n        ScuLogo: cc.Prefab,\r\n        //移动的预制体\r\n        movePrefab: cc.Prefab,\r\n        //要设置的位置\r\n        MoveStartPos: cc.Node,\r\n\r\n        //开始目标动画\r\n        targetAnim: cc.Node,\r\n        maskNode: cc.Node,\r\n        layout: cc.Node,\r\n    },\r\n\r\n    onLoad() {\r\n        cc.ZL.targetMgr = this;\r\n        this.ShowTarget();\r\n        this.maskNode.active = true;\r\n        this.IsScuessed = false;\r\n    },\r\n\r\n    start() {\r\n        this.BeginAnim();\r\n    },\r\n\r\n    // update (dt) {},\r\n    //显示目标信息\r\n    ShowTarget() {\r\n        // let lvtarget=lvdata[\"Lv\"+comeInfo.now_lv].target;\r\n        let lvtarget = lvdata.target;\r\n        for (let i = 0; i < 4; i++) {\r\n            if (i < lvtarget.length) {\r\n                this.targetList[i].active = true;\r\n                if (lvtarget[i][0] < 10) {\r\n                    this.animList[i].getComponent(cc.Sprite).spriteFrame = cc.ZL.sprMgr.spr[lvtarget[i][0]];\r\n                } else {\r\n                    this.animList[i].getComponent(cc.Sprite).spriteFrame = cc.ZL.sprMgr.icespr[lvtarget[i][0] - 10];\r\n                }\r\n\r\n                this.targetList[i].getChildByName('num').getComponent(cc.Label).string = lvtarget[i][1];\r\n            } else {\r\n                this.targetList[i].active = false;\r\n                this.animList[i].active = false;\r\n            }\r\n        }\r\n    },\r\n    clearTarget(node, num) {\r\n        //算出动物的坐标\r\n        this.targetNum(num);\r\n        var pos = node.parent.convertToWorldSpaceAR(node.getPosition());\r\n        var pos1 = this.targetList[num].convertToNodeSpaceAR(pos);\r\n        node.parent = this.targetList[num];\r\n        node.setPosition(pos1);\r\n        node.runAction(cc.moveTo(0.5, 0, 0));\r\n        node.runAction(cc.scaleTo(0.5, 0.2, 0.2));\r\n        setTimeout(\r\n            function () {\r\n                node.runAction(cc.scaleTo(0.2, 1.4, 1.4));\r\n                setTimeout(\r\n                    function () {\r\n                        node.destroy();\r\n                    }.bind(this),\r\n                    200\r\n                );\r\n            }.bind(this),\r\n            500\r\n        );\r\n    },\r\n    //有效目标数减1\r\n    targetNum(num) {\r\n        console.log('目标数------');\r\n        if (this.targetList[num].getChildByName('num').getComponent(cc.Label).string > 0) {\r\n            this.targetList[num].getChildByName('num').getComponent(cc.Label).string -= 1;\r\n            //this.num_arry[num] -=1;\r\n        } else {\r\n            //this.num_arry[num] =0;\r\n            this.targetList[num].getChildByName('num').getComponent(cc.Label).string = 0;\r\n        }\r\n    },\r\n    //判断是否成功\r\n    IsScuess() {\r\n        let sc = true;\r\n        for (let i = 0; i < this.targetList.length; i++) {\r\n            if (this.targetList[i].active) {\r\n                if (this.targetList[i].getChildByName('num').getComponent(cc.Label).string > 0) {\r\n                    sc = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (cc.ZL.UIMgr.stepnum <= 0 && sc == false) {\r\n            this.onGetData();\r\n            return true;\r\n        }\r\n        if (sc) {\r\n            cc.ZL.animMgr.mask.active = true;\r\n            cc.audioEngine.pauseAll();\r\n            cc.ZL.musicMgr.MyplayMusic(16, false);\r\n            this.scueff();\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n    onGetData() {\r\n        let preas = {\r\n            rid: gamedata.rid,\r\n            token: gamedata.token,\r\n        };\r\n        UIHelp.network.httpConnect_post_async('game/xiaoxiaole/getPropList', preas, this.getMyPropListCall.bind(this));\r\n    },\r\n\r\n    getMyPropListCall(msg) {\r\n        console.log('getMyPropList===>', msg);\r\n        utils.HideLoading();\r\n        if (msg.code == 200) {\r\n            var num = 0;\r\n            if (msg.data.length > 0) {\r\n                for (let a = 0; a < msg.data.length; a++) {\r\n                    if (msg.data[a]['gid'] == 10004) {\r\n                        num = msg.data[a]['coin'];\r\n                    }\r\n                }\r\n            }\r\n            cc.ZL.animMgr.mask.active = true;\r\n            let end = cc.instantiate(this.EndPrefab);\r\n            this.node.parent.addChild(end);\r\n            end.setPosition(0, 0);\r\n            end.getComponent('End').InitView(num);\r\n        } else {\r\n            utils.addTips(msg.message);\r\n        }\r\n    },\r\n    //胜利特效\r\n    scueff() {\r\n        this.IsScuessed = true;\r\n        let logo = cc.instantiate(this.ScuLogo);\r\n        this.node.addChild(logo);\r\n        let anim = logo.getChildByName('ingame_Clear').getComponent(sp.Skeleton);\r\n        anim.clearTracks();\r\n        anim.addAnimation(0, 'normal', false, 0);\r\n        anim.setCompleteListener(\r\n            function () {\r\n                logo.destroy();\r\n                if (logo) {\r\n                    this.liveStep();\r\n                }\r\n            }.bind(this)\r\n        );\r\n    },\r\n    //还剩多少步\r\n    liveStep() {\r\n        let step = cc.ZL.UIMgr.stepnum;\r\n        let n = 0;\r\n        //先获取动物数组中所有动物\r\n        let animArry = new Array();\r\n        for (let i = 0; i < cc.ZL.animMgr.animalArray.length; i++) {\r\n            for (let j = 0; j < cc.ZL.animMgr.animalArray[i].length; j++) {\r\n                if (cc.ZL.animMgr.animalArray[i][j] != 0 && cc.ZL.animMgr.animalArray[i][j] != -1) {\r\n                    if (cc.ZL.animMgr.animalArray[i][j].animType != 0 && cc.ZL.animMgr.animalArray[i][j].animType < 6) {\r\n                        if (cc.ZL.animMgr.animalArray[i][j].clearType == 0) {\r\n                            animArry.push(cc.ZL.animMgr.animalArray[i][j]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //再从动物中随机抽取N个不同的动物\r\n        if (step > animArry.length) {\r\n            step = animArry.length;\r\n        }\r\n        animArry = this.myRand(animArry, step);\r\n        let k = 0;\r\n        this.schedule(\r\n            function () {\r\n                let num = Math.random() * 2;\r\n                if (num < 1) {\r\n                    animArry[k].clearType = 1;\r\n                } else {\r\n                    animArry[k].clearType = 2;\r\n                }\r\n                cc.ZL.musicMgr.MyplayMusic(20, false);\r\n                cc.ZL.UIMgr.MinusStep();\r\n                let move = cc.instantiate(this.movePrefab);\r\n                this.node.addChild(move);\r\n                move.setPosition(this.MoveStartPos.getPosition());\r\n                move.getComponent('EndMove').Move(animArry[k], num);\r\n                k += 1;\r\n            }.bind(this),\r\n            0.3,\r\n            step - 1\r\n        );\r\n        setTimeout(\r\n            function () {\r\n                let newarry = new Array();\r\n                //把带特效的全部消除\r\n                // console.log('cocos===>', cc.ZL.animMgr.animalArray)\r\n                for (let i = 0; i < cc.ZL.animMgr.animalArray.length; i++) {\r\n                    for (let j = 0; j < cc.ZL.animMgr.animalArray[i].length; j++) {\r\n                        if (cc.ZL.animMgr.animalArray[i][j] != 0 && cc.ZL.animMgr.animalArray[i][j] != -1) {\r\n                            if (\r\n                                cc.ZL.animMgr.animalArray[i][j].animType != 0 &&\r\n                                cc.ZL.animMgr.animalArray[i][j].animType < 6\r\n                            ) {\r\n                                if (cc.ZL.animMgr.animalArray[i][j].clearType != 0) {\r\n                                    newarry.push(cc.ZL.animMgr.animalArray[i][j]);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // console.log('cocos===>', cc.ZL.animMgr.animalArray)\r\n                // return;\r\n                //启动消除程序\r\n                let n = 0;\r\n                this.schedule(\r\n                    function () {\r\n                        // console.log('有特效的==>', newarry, n)\r\n                        if (newarry[n]) {\r\n                            newarry[n].clear();\r\n                        }\r\n                        n += 1;\r\n                        // }.bind(this), 0.1, step - 1)\r\n                    }.bind(this),\r\n                    0.1,\r\n                    newarry.length - 1\r\n                );\r\n                //下一步填充\r\n                // return;\r\n                setTimeout(\r\n                    function () {\r\n                        cc.ZL.animMgr.NewFilled(true);\r\n                        // setTimeout(function(){\r\n\r\n                        let preas = {\r\n                            rid: gamedata.rid,\r\n                            token: gamedata.token,\r\n                            game_code: gamedata.game_code,\r\n                            coin: Math.floor(cc.ZL.UIMgr._score / 1000),\r\n                            stars: cc.ZL.UIMgr.GetStarNum(),\r\n                            gral: cc.ZL.UIMgr._score,\r\n                            status: 1,\r\n                        };\r\n                        UIHelp.network.httpConnect_post_async(\r\n                            'game/xiaoxiaole/endGame',\r\n                            preas,\r\n                            this.endGameCallBack.bind(this)\r\n                        );\r\n                        // let scu=cc.instantiate(this.scuessPrefab);\r\n                        // this.node.parent.addChild(scu);\r\n                        // scu.setPosition(0,0);\r\n                        // scu.getComponent(\"Scuess\").InitView();\r\n                        // }.bind(this),1000);\r\n                    }.bind(this),\r\n                    200 * newarry.length + 200\r\n                );\r\n            }.bind(this),\r\n            400 * step\r\n        );\r\n    },\r\n\r\n    endGameCallBack(msg) {\r\n        console.log('endGame===>', msg);\r\n        if (msg.code == 200) {\r\n            if (msg.data.level_stars) {\r\n                gamedata.level_stars = msg.data.level_stars;\r\n            }\r\n            gamedata.energy = Number(msg.data.energy);\r\n            gamedata.gold = Number(msg.data.coin);\r\n            let scu = cc.instantiate(this.scuessPrefab);\r\n            this.node.parent.addChild(scu);\r\n            scu.setPosition(0, 0);\r\n            scu.getComponent('Scuess').InitView();\r\n        } else {\r\n            utils.addTips(msg.message);\r\n        }\r\n    },\r\n    //数组中随机抽取N条不重复的数据\r\n    myRand(arr, num) {\r\n        let newarr = [];\r\n        for (let i = 0; i < num; i++) {\r\n            let n = Math.floor(Math.random() * arr.length);\r\n            newarr.push(arr[n]);\r\n            arr.splice(n, 1);\r\n        }\r\n        return newarr;\r\n    },\r\n\r\n    //开始动画\r\n    BeginAnim() {\r\n        let anim = this.targetAnim.getComponent(sp.Skeleton);\r\n        anim.clearTracks();\r\n        anim.addAnimation(0, 'play', false, 0);\r\n        anim.setCompleteListener(\r\n            function () {\r\n                setTimeout(\r\n                    function () {\r\n                        if (this.targetAnim) {\r\n                            this.layout.removeComponent(cc.Layout);\r\n                            for (let i = 0; i < this.targetList.length; i++) {\r\n                                let xy = utils.convetOtherNodeSpaceAR(this.targetList[i], this.animList[i].parent);\r\n                                this.animList[i].runAction(cc.moveTo(1, xy.x, xy.y));\r\n                            }\r\n                            setTimeout(\r\n                                function () {\r\n                                    if (this.targetAnim) {\r\n                                        this.targetAnim.active = false;\r\n                                        cc.ZL.animMgr.mask.active = false;\r\n                                        this.maskNode.active = false;\r\n                                        cc.ZL.cubeMgr.BeginReminder();\r\n                                    }\r\n                                }.bind(this),\r\n                                1000\r\n                            );\r\n                        }\r\n                    }.bind(this),\r\n                    2000\r\n                );\r\n            }.bind(this)\r\n        );\r\n    },\r\n});\r\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class tipsitem extends cc.Component {\n\n  \n\n    // LIFE-CYCLE CALLBACKS:\n    @property(cc.Label)\n    info: cc.Label = null;\n\n    onLoad () {}\n\n    onStartInfo(event) {\n        var self = this;\n        self.info.string = event;\n        self.onAnim();\n    }\n\n    onAnim() {\n        var self = this;\n        cc.tween(self.node)\n            .to(0,{position: cc.v3(0,-50,0)})\n            .call(() => {\n                this.node.active = true;\n            }) \n            .to(0.5,{position: cc.v3(0,10,0)})\n            .delay(3)\n            .to(0.5,{opacity: 0})\n            .call(() => {\n                self.node.removeFromParent();\n            })\n            .start();\n    }\n\n    start () {\n        \n    }\n\n    // update (dt) {}\n}\n","var com=require('Common');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //文字显示框\r\n        txt:cc.Label,\r\n        //增加精力按钮\r\n        addBnt:cc.Node,\r\n    },\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n    InitView(num){//1是提示玩家已经玩到最后一关，2是精力不足\r\n        if(num==1){\r\n            this.txt.string=\"你太厉害了！！！\\n正在抓紧努力更新中！！！\"\r\n            this.addBnt.active=false;\r\n        }else{\r\n            this.txt.string=\"啊哦！精力不足了，\\n休息一下吧！！！\"\r\n            this.addBnt.active=true;\r\n        }\r\n        this.node.runAction(cc.scaleTo(0.1,1,1));\r\n    },\r\n    //分享加体力\r\n    addEnergy(){\r\n        // com.WxShare();\r\n        // setTimeout(function(){\r\n        //     if(comeInfo.is_share){\r\n        //         gamedata.energy +=5;\r\n        //         comeInfo.is_share=false;\r\n        //     }\r\n        // }.bind(this),3500);\r\n        // this.close();\r\n\r\n        \r\n        // Advert.VideoPlay(0,function(){\r\n        //     gamedata.energy +=5;\r\n        //     cc.ZL.lvMgr.showInfo();\r\n        // }.bind(this));\r\n    },  \r\n    close(){\r\n        this.node.runAction(cc.scaleTo(0.1,0,0));\r\n        setTimeout(function(){\r\n            this.node.destroy();\r\n        }.bind(this),120);\r\n    }\r\n});\r\n","/*\n * This script is automatically generated by Cocos Creator and is only used for projects compatible with the v2.1.0 ～ 2.2.1 version.\n * You do not need to manually add this script in any other project.\n * If you don't use cc.Toggle in your project, you can delete this script directly.\n * If your project is hosted in VCS such as git, submit this script together.\n *\n * 此脚本由 Cocos Creator 自动生成，仅用于兼容 v2.1.0 ~ 2.2.1 版本的工程，\n * 你无需在任何其它项目中手动添加此脚本。\n * 如果你的项目中没用到 Toggle，可直接删除该脚本。\n * 如果你的项目有托管于 git 等版本库，请将此脚本一并上传。\n */\n\nif (cc.Toggle) {\n    // Whether to trigger 'toggle' and 'checkEvents' events when modifying 'toggle.isChecked' in the code\n    // 在代码中修改 'toggle.isChecked' 时是否触发 'toggle' 与 'checkEvents' 事件\n    cc.Toggle._triggerEventInScript_isChecked = true;\n}\n","window.utils = {\r\n    //根据列号，行号设置位置\r\n    //根据列号，行号设置位置\r\n    loading: null,\r\n    rowColumnPosition(column, row) {\r\n        return cc.v2(-300 + column * 74 + 5, 300 - 74 * row - 5);\r\n    },\r\n    //根据列号，行号设置位置\r\n    rowColumnPosition_Anim(column, row) {\r\n        return cc.v2(-300 + column * 74 + 5, 260 - 74 * row - 5);\r\n    },\r\n\r\n    //获得查询字符串\r\n    getQueryString(name) {\r\n        var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\r\n        var r = window.location.search.substr(1).match(reg);\r\n        if (r != null) return unescape(r[2]); return null;\r\n    },\r\n\r\n    addTips(str) {\r\n        cc.loader.loadRes('texture/Prefab/Tips', cc.Prefab, (err, msg) => {\r\n            if(err) {\r\n                return;\r\n            }\r\n            var node = cc.instantiate(msg);\r\n            node.active = false;\r\n            node.parent = cc.find('Canvas');\r\n            node.getComponent('tipsitem').onStartInfo(str);\r\n        })\r\n    },\r\n\r\n    ShowLoading() {\r\n        // if(this.loading) {\r\n        //     return;\r\n        // }\r\n        // cc.loader.loadRes('texture/Prefab/loading', cc.Prefab, (err, msg) => {\r\n        //     if(err) {\r\n        //         return;\r\n        //     }\r\n        //     var node = cc.instantiate(msg);\r\n        //     this.loading = node;\r\n        //     node.parent = cc.find('Canvas');\r\n        // })\r\n        cc.find('loading').active = true;\r\n    },\r\n\r\n    HideLoading() {\r\n        // if(this.loading && cc.isValid(this.loading,true)) {\r\n        //     this.loading.destroy();\r\n        //     this.loading = null;\r\n        // }else{\r\n        //     return;\r\n        // }\r\n        cc.find('loading').active = false;\r\n    },\r\n\r\n      /**\r\n * 得到一个节点的世界坐标\r\n * node的原点在中心\r\n * @param {*} node \r\n */\r\n       localConvertWorldPointAR(node) {\r\n        if (node) {\r\n            return node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n        }\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * 得到一个节点的世界坐标\r\n     * node的原点在左下边\r\n     * @param {*} node \r\n     */\r\n    localConvertWorldPoint(node) {\r\n        if (node) {\r\n            return node.convertToWorldSpace(cc.v2(0, 0));\r\n        }\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * 把一个世界坐标的点，转换到某个节点下的坐标\r\n     * 原点在node中心\r\n     * @param {*} node \r\n     * @param {*} worldPoint \r\n     */\r\n    worldConvertLocalPointAR(node, worldPoint) {\r\n        if (node) {\r\n            return node.convertToNodeSpaceAR(worldPoint);\r\n        }\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * 把一个世界坐标的点，转换到某个节点下的坐标\r\n     * 原点在node左下角\r\n     * @param {*} node \r\n     * @param {*} worldPoint \r\n     */\r\n    worldConvertLocalPoint(node, worldPoint) {\r\n        if (node) {\r\n            return node.convertToNodeSpace(worldPoint);\r\n        }\r\n        return null;\r\n    },\r\n    /**\r\n     *  * 把一个节点的本地坐标转到另一个节点的本地坐标下\r\n     * @param {*} node \r\n     * @param {*} targetNode \r\n     */\r\n    convetOtherNodeSpace(node, targetNode) {\r\n        if (!node || !targetNode) {\r\n            return null;\r\n        }\r\n        //先转成世界坐标\r\n        let worldPoint = this.localConvertWorldPoint(node);\r\n        return this.worldConvertLocalPoint(targetNode, worldPoint);\r\n    },\r\n\r\n    /**\r\n     *  * 把一个节点的本地坐标转到另一个节点的本地坐标下\r\n     * @param {*} node \r\n     * @param {*} targetNode \r\n     */\r\n    convetOtherNodeSpaceAR(node, targetNode) {\r\n        if (!node || !targetNode) {\r\n            return null;\r\n        }\r\n        //先转成世界坐标\r\n        let worldPoint = this.localConvertWorldPointAR(node);\r\n        return this.worldConvertLocalPointAR(targetNode, worldPoint);\r\n    },\r\n\r\n}"],"file":"index.js"}