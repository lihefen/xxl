{"version":3,"sources":["assets/newscripts/Main/utils.js"],"names":["window","utils","loading","rowColumnPosition","column","row","cc","v2","rowColumnPosition_Anim","getQueryString","name","reg","RegExp","r","location","search","substr","match","unescape","addTips","str","loader","loadRes","Prefab","err","msg","node","instantiate","active","parent","find","getComponent","onStartInfo","ShowLoading","HideLoading","localConvertWorldPointAR","convertToWorldSpaceAR","localConvertWorldPoint","convertToWorldSpace","worldConvertLocalPointAR","worldPoint","convertToNodeSpaceAR","worldConvertLocalPoint","convertToNodeSpace","convetOtherNodeSpace","targetNode","convetOtherNodeSpaceAR"],"mappings":"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","sourceRoot":"/","sourcesContent":["window.utils = {\r\n    //根据列号，行号设置位置\r\n    //根据列号，行号设置位置\r\n    loading: null,\r\n    rowColumnPosition(column, row) {\r\n        return cc.v2(-300 + column * 74 + 5, 300 - 74 * row - 5);\r\n    },\r\n    //根据列号，行号设置位置\r\n    rowColumnPosition_Anim(column, row) {\r\n        return cc.v2(-300 + column * 74 + 5, 260 - 74 * row - 5);\r\n    },\r\n\r\n    //获得查询字符串\r\n    getQueryString(name) {\r\n        var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\r\n        var r = window.location.search.substr(1).match(reg);\r\n        if (r != null) return unescape(r[2]); return null;\r\n    },\r\n\r\n    addTips(str) {\r\n        cc.loader.loadRes('texture/Prefab/Tips', cc.Prefab, (err, msg) => {\r\n            if(err) {\r\n                return;\r\n            }\r\n            var node = cc.instantiate(msg);\r\n            node.active = false;\r\n            node.parent = cc.find('Canvas');\r\n            node.getComponent('tipsitem').onStartInfo(str);\r\n        })\r\n    },\r\n\r\n    ShowLoading() {\r\n        // if(this.loading) {\r\n        //     return;\r\n        // }\r\n        // cc.loader.loadRes('texture/Prefab/loading', cc.Prefab, (err, msg) => {\r\n        //     if(err) {\r\n        //         return;\r\n        //     }\r\n        //     var node = cc.instantiate(msg);\r\n        //     this.loading = node;\r\n        //     node.parent = cc.find('Canvas');\r\n        // })\r\n        cc.find('loading').active = true;\r\n    },\r\n\r\n    HideLoading() {\r\n        // if(this.loading && cc.isValid(this.loading,true)) {\r\n        //     this.loading.destroy();\r\n        //     this.loading = null;\r\n        // }else{\r\n        //     return;\r\n        // }\r\n        cc.find('loading').active = false;\r\n    },\r\n\r\n      /**\r\n * 得到一个节点的世界坐标\r\n * node的原点在中心\r\n * @param {*} node \r\n */\r\n       localConvertWorldPointAR(node) {\r\n        if (node) {\r\n            return node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n        }\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * 得到一个节点的世界坐标\r\n     * node的原点在左下边\r\n     * @param {*} node \r\n     */\r\n    localConvertWorldPoint(node) {\r\n        if (node) {\r\n            return node.convertToWorldSpace(cc.v2(0, 0));\r\n        }\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * 把一个世界坐标的点，转换到某个节点下的坐标\r\n     * 原点在node中心\r\n     * @param {*} node \r\n     * @param {*} worldPoint \r\n     */\r\n    worldConvertLocalPointAR(node, worldPoint) {\r\n        if (node) {\r\n            return node.convertToNodeSpaceAR(worldPoint);\r\n        }\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * 把一个世界坐标的点，转换到某个节点下的坐标\r\n     * 原点在node左下角\r\n     * @param {*} node \r\n     * @param {*} worldPoint \r\n     */\r\n    worldConvertLocalPoint(node, worldPoint) {\r\n        if (node) {\r\n            return node.convertToNodeSpace(worldPoint);\r\n        }\r\n        return null;\r\n    },\r\n    /**\r\n     *  * 把一个节点的本地坐标转到另一个节点的本地坐标下\r\n     * @param {*} node \r\n     * @param {*} targetNode \r\n     */\r\n    convetOtherNodeSpace(node, targetNode) {\r\n        if (!node || !targetNode) {\r\n            return null;\r\n        }\r\n        //先转成世界坐标\r\n        let worldPoint = this.localConvertWorldPoint(node);\r\n        return this.worldConvertLocalPoint(targetNode, worldPoint);\r\n    },\r\n\r\n    /**\r\n     *  * 把一个节点的本地坐标转到另一个节点的本地坐标下\r\n     * @param {*} node \r\n     * @param {*} targetNode \r\n     */\r\n    convetOtherNodeSpaceAR(node, targetNode) {\r\n        if (!node || !targetNode) {\r\n            return null;\r\n        }\r\n        //先转成世界坐标\r\n        let worldPoint = this.localConvertWorldPointAR(node);\r\n        return this.worldConvertLocalPointAR(targetNode, worldPoint);\r\n    },\r\n\r\n}"]}